; ModuleID = 'cp'
source_filename = "ld-temp.o"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.dir_attr = type { %struct.stat, i8, i64, %struct.dir_attr* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32 }
%struct.__mbstate_t = type { i32, %struct.permission_context }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.103 }
%union.anon.103 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [442 x i8] c"  -a, --archive                same as -dR --preserve=all\0A      --attributes-only        don't copy the file data, just the attributes\0A      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A      --copy-contents          copy contents of special files when recursive\0A  -d                           same as --no-dereference --preserve=links\0A\00", align 1
@.str.4 = private unnamed_addr constant [427 x i8] c"  -f, --force                  if an existing destination file cannot be\0A                                 opened, remove it and try again (this option\0A                                 is ignored when the -n option is also used)\0A  -i, --interactive            prompt before overwrite (overrides a previous -n\0A                                  option)\0A  -H                           follow command-line symbolic links in SOURCE\0A\00", align 1
@.str.5 = private unnamed_addr constant [137 x i8] c"  -l, --link                   hard link files instead of copying\0A  -L, --dereference            always follow symbolic links in SOURCE\0A\00", align 1
@.str.6 = private unnamed_addr constant [201 x i8] c"  -n, --no-clobber             do not overwrite an existing file (overrides\0A                                 a previous -i option)\0A  -P, --no-dereference         never follow symbolic links in SOURCE\0A\00", align 1
@.str.7 = private unnamed_addr constant [341 x i8] c"  -p                           same as --preserve=mode,ownership,timestamps\0A      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\0A                                 mode,ownership,timestamps), if possible\0A                                 additional attributes: context, links, xattr,\0A                                 all\0A\00", align 1
@.str.8 = private unnamed_addr constant [145 x i8] c"      --no-preserve=ATTR_LIST  don't preserve the specified attributes\0A      --parents                use full source file name under DIRECTORY\0A\00", align 1
@.str.9 = private unnamed_addr constant [283 x i8] c"  -R, -r, --recursive          copy directories recursively\0A      --reflink[=WHEN]         control clone/CoW copies. See below\0A      --remove-destination     remove each existing destination file before\0A                                 attempting to open it (contrast with --force)\0A\00", align 1
@.str.10 = private unnamed_addr constant [195 x i8] c"      --sparse=WHEN            control creation of sparse files. See below\0A      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A\00", align 1
@.str.11 = private unnamed_addr constant [271 x i8] c"  -s, --symbolic-link          make symbolic links instead of copying\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A\00", align 1
@.str.12 = private unnamed_addr constant [318 x i8] c"  -u, --update                 copy only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -x, --one-file-system        stay on this file system\0A\00", align 1
@.str.13 = private unnamed_addr constant [280 x i8] c"  -Z                           set SELinux security context of destination\0A                                 file to default type\0A      --context[=CTX]          like -Z, or if CTX is specified then set the\0A                                 SELinux or SMACK security context to CTX\0A\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.16 = private unnamed_addr constant [355 x i8] c"\0ABy default, sparse SOURCE files are detected by a crude heuristic and the\0Acorresponding DEST file is made sparse as well.  That is the behavior\0Aselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\0Afile whenever the SOURCE file contains a long enough sequence of zero bytes.\0AUse --sparse=never to inhibit creation of sparse files.\0A\00", align 1
@.str.17 = private unnamed_addr constant [287 x i8] c"\0AWhen --reflink[=always] is specified, perform a lightweight copy, where the\0Adata blocks are copied only when modified.  If this is not possible the copy\0Afails, or if --reflink=auto is specified, fall back to a standard copy.\0AUse --reflink=never to ensure a standard copy is performed.\0A\00", align 1
@.str.18 = private unnamed_addr constant [162 x i8] c"\0AAs a special case, cp makes a backup of SOURCE when the force and backup\0Aoptions are given and SOURCE and DEST are the same name for an existing,\0Aregular file.\0A\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"cp\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.53 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.54 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.56 = private unnamed_addr constant [70 x i8] c"Report %s translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.57 = private unnamed_addr constant [31 x i8] c"Full documentation at: <%s%s>\0A\00", align 1
@.str.58 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.43 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.44 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.42 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@selinux_enabled = internal global i8 0, align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"abdfHilLnprst:uvxPRS:TZ\00", align 1
@long_opts = internal constant [30 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 0, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.65, i32 0, i32 0), i32 0, i32* null, i32 76 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 108 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 0, i32* null, i32 80 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i32 1, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0), i32 0, i32* null, i32 120 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i32 0, i32 0), i32 2, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i32 0, i32* null, i32 82 }, %struct.option { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i32 0, i32 0), i32 0, i32* null, i32 136 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i32 1, i32* null, i32 134 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), i32 2, i32* null, i32 133 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i32 0, i32 0), i32 0, i32* null, i32 135 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16
@optarg = external dso_local global i8*, align 8
@.str.24 = private unnamed_addr constant [9 x i8] c"--sparse\00", align 1
@sparse_type_string = internal constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* null], align 16
@sparse_type = internal constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@.str.25 = private unnamed_addr constant [10 x i8] c"--reflink\00", align 1
@reflink_type_string = internal constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i32 0, i32 0), i8* null], align 16
@reflink_type = internal constant [3 x i32] [i32 1, i32 2, i32 0], align 4
@parents_option = internal global i8 0, align 1
@remove_trailing_slashes = internal global i8 0, align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.29 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Torbjorn Granlund\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"cannot make both hard and symbolic links\00", align 1
@.str.35 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.36 = private unnamed_addr constant [46 x i8] c"--reflink can be used only with --sparse=auto\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.38 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.39 = private unnamed_addr constant [67 x i8] c"cannot preserve security context without an SELinux-enabled kernel\00", align 1
@.str.40 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.41 = private unnamed_addr constant [71 x i8] c"cannot preserve extended attributes, cp is built without xattr support\00", align 1
@optind = external dso_local global i32, align 4
@.str.101 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.102 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.103 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"%s -> %s\0A\00", align 1
@.str.106 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.107 = private unnamed_addr constant [52 x i8] c"with --parents, the destination must be a directory\00", align 1
@do_copy.x_tmp = internal global %struct.cp_options zeroinitializer, align 8
@.str.112 = private unnamed_addr constant [32 x i8] c"failed to preserve times for %s\00", align 1
@.str.113 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.114 = private unnamed_addr constant [38 x i8] c"failed to preserve permissions for %s\00", align 1
@.str.108 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"cannot make directory %s\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.111 = private unnamed_addr constant [33 x i8] c"%s exists but is not a directory\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"--preserve\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"--no-preserve\00", align 1
@decode_preserve_arg.preserve_args = internal constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i32 0, i32 0), i8* null], align 16
@decode_preserve_arg.preserve_vals = internal constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6], align 16
@.str.93 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"timestamps\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"ownership\00", align 1
@.str.96 = private unnamed_addr constant [6 x i8] c"links\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"xattr\00", align 1
@.str.98 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"archive\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"attributes-only\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"copy-contents\00", align 1
@.str.65 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"no-dereference\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"no-preserve\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"one-file-system\00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"parents\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"preserve\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"remove-destination\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"sparse\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"reflink\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.83 = private unnamed_addr constant [14 x i8] c"symbolic-link\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str.115 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.116 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.117 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.120 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.127 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.128 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8
@top_level_dst_name = internal global i8* null, align 8
@.str.12.129 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.130 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.131 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.132 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.133 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.134 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.135 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.136 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.137 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.138 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.139 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.140 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.141 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.142 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.143 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.144 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.145 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.146 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.147 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.148 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.149 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.150 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.151 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.152 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.153 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.154 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.155 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.156 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.157 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.158 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.159 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.160 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.161 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.162 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.165 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.166 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.167 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.170 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.171 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.172 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4
@.str.76.173 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.174 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.175 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.176 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.177 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.178 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.179 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.180 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.181 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.182 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.183 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.184 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.185 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.186 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.187 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.188 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.189 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8
@write_zeros.nz = internal global i64 131072, align 8
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16
@.str.59.190 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.191 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.192 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.193 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.194 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.195 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.196 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.197 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.198 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.199 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.200 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.201 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.202 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.203 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8
@.str.218 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.219 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.220 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1
@Version = internal global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), align 8
@.str.227 = private unnamed_addr constant [5 x i8] c"8.30\00", align 1
@.str.230 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.231 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.234 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.237 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.238 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.239 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.240 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.241 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@argmatch_die = internal global void ()* @__argmatch_die, align 8
@.str.248 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.249 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@simple_backup_suffix = internal global i8* null, align 8
@.str.2.252 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.253 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.258, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.259, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.262, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.263, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.264, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.265, i32 0, i32 0), i8* null], align 16
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16
@.str.2.258 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.259 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.260 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.261 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.262 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.263 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.264 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.265 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.268 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.269 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.274 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@file_name = internal global i8* null, align 8
@.str.1.275 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.276 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@ignore_EPIPE = internal global i8 0, align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@file_name.280 = internal global i8* null, align 8
@.str.1.281 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.282 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = internal global i32 1, align 4
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4
@.str.333 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.334 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.335 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8
@program_name = internal global i8* null, align 8
@program_invocation_name = external dso_local global i8*, align 8
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8
@slotvec = internal global %struct.slotvec* @slotvec0, align 8
@nslots = internal global i32 1, align 4
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8
@slot0 = internal global [256 x i8] zeroinitializer, align 16
@.str.10.344 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.345 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.346 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.347 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.348 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.349 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.350 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.351 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.352 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@quote_quoting_options = internal global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8
@.str.369 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16
@.str.2.386 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8
@utimensat_works_really = internal global i32 0, align 4
@lutimensat_works_really = internal global i32 0, align 4
@.str.397 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.398 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.399 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.400 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.401 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.402 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.403 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.404 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.405 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.406 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.407 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.408 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.409 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.410 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@version_etc_copyright = internal constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16
@can_write_any_file.initialized = internal global i8 0, align 1
@can_write_any_file.can_write = internal global i8 0, align 1
@.str.1.431 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.432 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@rpl_fcntl.have_dupfd_cloexec = internal global i32 0, align 4
@.str.461 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.462 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.467 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.468 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.477 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.478 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.479 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.480 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @usage(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %5
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #13
  %9 = load i8*, i8** @program_name, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %9)
  br label %11

11:                                               ; preds = %6
  br label %69

12:                                               ; preds = %1
  %13 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #13
  %14 = load i8*, i8** @program_name, align 8
  %15 = load i8*, i8** @program_name, align 8
  %16 = load i8*, i8** @program_name, align 8
  %17 = call i32 (i8*, ...) @printf(i8* %13, i8* %14, i8* %15, i8* %16)
  %18 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0)) #13
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %20 = call i32 @fputs_unlocked(i8* %18, %struct._IO_FILE* %19)
  call void @emit_mandatory_arg_note()
  %21 = call i8* @gettext(i8* getelementptr inbounds ([442 x i8], [442 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %23 = call i32 @fputs_unlocked(i8* %21, %struct._IO_FILE* %22)
  %24 = call i8* @gettext(i8* getelementptr inbounds ([427 x i8], [427 x i8]* @.str.4, i64 0, i64 0)) #13
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %26 = call i32 @fputs_unlocked(i8* %24, %struct._IO_FILE* %25)
  %27 = call i8* @gettext(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.5, i64 0, i64 0)) #13
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %29 = call i32 @fputs_unlocked(i8* %27, %struct._IO_FILE* %28)
  %30 = call i8* @gettext(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.6, i64 0, i64 0)) #13
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %32 = call i32 @fputs_unlocked(i8* %30, %struct._IO_FILE* %31)
  %33 = call i8* @gettext(i8* getelementptr inbounds ([341 x i8], [341 x i8]* @.str.7, i64 0, i64 0)) #13
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %35 = call i32 @fputs_unlocked(i8* %33, %struct._IO_FILE* %34)
  %36 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.8, i64 0, i64 0)) #13
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %38 = call i32 @fputs_unlocked(i8* %36, %struct._IO_FILE* %37)
  %39 = call i8* @gettext(i8* getelementptr inbounds ([283 x i8], [283 x i8]* @.str.9, i64 0, i64 0)) #13
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %41 = call i32 @fputs_unlocked(i8* %39, %struct._IO_FILE* %40)
  %42 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8], [195 x i8]* @.str.10, i64 0, i64 0)) #13
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %44 = call i32 @fputs_unlocked(i8* %42, %struct._IO_FILE* %43)
  %45 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.11, i64 0, i64 0)) #13
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %47 = call i32 @fputs_unlocked(i8* %45, %struct._IO_FILE* %46)
  %48 = call i8* @gettext(i8* getelementptr inbounds ([318 x i8], [318 x i8]* @.str.12, i64 0, i64 0)) #13
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %50 = call i32 @fputs_unlocked(i8* %48, %struct._IO_FILE* %49)
  %51 = call i8* @gettext(i8* getelementptr inbounds ([280 x i8], [280 x i8]* @.str.13, i64 0, i64 0)) #13
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %53 = call i32 @fputs_unlocked(i8* %51, %struct._IO_FILE* %52)
  %54 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0)) #13
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %56 = call i32 @fputs_unlocked(i8* %54, %struct._IO_FILE* %55)
  %57 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #13
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %59 = call i32 @fputs_unlocked(i8* %57, %struct._IO_FILE* %58)
  %60 = call i8* @gettext(i8* getelementptr inbounds ([355 x i8], [355 x i8]* @.str.16, i64 0, i64 0)) #13
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %62 = call i32 @fputs_unlocked(i8* %60, %struct._IO_FILE* %61)
  %63 = call i8* @gettext(i8* getelementptr inbounds ([287 x i8], [287 x i8]* @.str.17, i64 0, i64 0)) #13
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %65 = call i32 @fputs_unlocked(i8* %63, %struct._IO_FILE* %64)
  call void @emit_backup_suffix_note()
  %66 = call i8* @gettext(i8* getelementptr inbounds ([162 x i8], [162 x i8]* @.str.18, i64 0, i64 0)) #13
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %68 = call i32 @fputs_unlocked(i8* %66, %struct._IO_FILE* %67)
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  br label %69

69:                                               ; preds = %12, %11
  %70 = load i32, i32* %2, align 4
  call void @exit(i32 %70) #14
  unreachable
}

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #3 {
  %1 = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.42, i64 0, i64 0)) #13
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = call i32 @fputs_unlocked(i8* %1, %struct._IO_FILE* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #3 {
  %1 = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.43, i64 0, i64 0)) #13
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = call i32 @fputs_unlocked(i8* %1, %struct._IO_FILE* %2)
  %4 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.44, i64 0, i64 0)) #13
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %6 = call i32 @fputs_unlocked(i8* %4, %struct._IO_FILE* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca [7 x %struct.infomap], align 16
  %4 = alloca i8*, align 8
  %5 = alloca %struct.infomap*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %7 = bitcast [7 x %struct.infomap]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false)
  %8 = load i8*, i8** %2, align 8
  store i8* %8, i8** %4, align 8
  %9 = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %3, i64 0, i64 0
  store %struct.infomap* %9, %struct.infomap** %5, align 8
  br label %10

10:                                               ; preds = %25, %1
  %11 = load %struct.infomap*, %struct.infomap** %5, align 8
  %12 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8
  %17 = load %struct.infomap*, %struct.infomap** %5, align 8
  %18 = getelementptr inbounds %struct.infomap, %struct.infomap* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @strcmp(i8* %16, i8* %19) #15
  %21 = icmp eq i32 %20, 0
  %22 = xor i1 %21, true
  br label %23

23:                                               ; preds = %15, %10
  %24 = phi i1 [ false, %10 ], [ %22, %15 ]
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = load %struct.infomap*, %struct.infomap** %5, align 8
  %27 = getelementptr inbounds %struct.infomap, %struct.infomap* %26, i32 1
  store %struct.infomap* %27, %struct.infomap** %5, align 8
  br label %10, !llvm.loop !5

28:                                               ; preds = %23
  %29 = load %struct.infomap*, %struct.infomap** %5, align 8
  %30 = getelementptr inbounds %struct.infomap, %struct.infomap* %29, i32 0, i32 1
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = load %struct.infomap*, %struct.infomap** %5, align 8
  %35 = getelementptr inbounds %struct.infomap, %struct.infomap* %34, i32 0, i32 1
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  br label %37

37:                                               ; preds = %33, %28
  %38 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.53, i64 0, i64 0)) #13
  %39 = call i32 (i8*, ...) @printf(i8* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.54, i64 0, i64 0))
  %40 = call i8* @setlocale(i32 5, i8* null) #13
  store i8* %40, i8** %6, align 8
  %41 = load i8*, i8** %6, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = load i8*, i8** %6, align 8
  %45 = call i32 @strncmp(i8* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i64 3) #15
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.56, i64 0, i64 0)) #13
  %49 = load i8*, i8** %2, align 8
  %50 = call i32 (i8*, ...) @printf(i8* %48, i8* %49)
  br label %51

51:                                               ; preds = %47, %43, %37
  %52 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.57, i64 0, i64 0)) #13
  %53 = load i8*, i8** %2, align 8
  %54 = call i32 (i8*, ...) @printf(i8* %52, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.54, i64 0, i64 0), i8* %53)
  %55 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.58, i64 0, i64 0)) #13
  %56 = load i8*, i8** %4, align 8
  %57 = load i8*, i8** %4, align 8
  %58 = load i8*, i8** %2, align 8
  %59 = icmp eq i8* %57, %58
  %60 = zext i1 %59 to i64
  %61 = select i1 %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)
  %62 = call i32 (i8*, ...) @printf(i8* %55, i8* %56, i8* %61)
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.cp_options, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8*, align 8
  %16 = alloca %struct.stat, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8 0, i8* %8, align 1
  store i8* null, i8** %9, align 8
  store i8* null, i8** %10, align 8
  store i8 0, i8* %12, align 1
  store i8* null, i8** %13, align 8
  store i8 0, i8* %14, align 1
  store i8* null, i8** %15, align 8
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  call void @set_program_name(i8* %19)
  %20 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0)) #13
  %21 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0)) #13
  %22 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #13
  %23 = call i32 @atexit(void ()* @close_stdin) #13
  store i8 0, i8* @selinux_enabled, align 1
  call void @cp_option_init(%struct.cp_options* %11)
  br label %24

24:                                               ; preds = %174, %2
  %25 = load i32, i32* %4, align 4
  %26 = load i8**, i8*** %5, align 8
  %27 = call i32 @getopt_long(i32 %25, i8** %26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), %struct.option* getelementptr inbounds ([30 x %struct.option], [30 x %struct.option]* @long_opts, i64 0, i64 0), i32* null) #13
  store i32 %27, i32* %6, align 4
  %28 = icmp ne i32 %27, -1
  br i1 %28, label %29, label %175

29:                                               ; preds = %24
  %30 = load i32, i32* %6, align 4
  switch i32 %30, label %173 [
    i32 134, label %31
    i32 133, label %38
    i32 97, label %51
    i32 98, label %66
    i32 128, label %72
    i32 129, label %74
    i32 100, label %75
    i32 102, label %78
    i32 72, label %80
    i32 105, label %82
    i32 108, label %84
    i32 76, label %86
    i32 110, label %88
    i32 80, label %90
    i32 130, label %92
    i32 132, label %94
    i32 112, label %102
    i32 131, label %107
    i32 114, label %108
    i32 82, label %108
    i32 136, label %110
    i32 135, label %112
    i32 115, label %113
    i32 116, label %115
    i32 84, label %142
    i32 117, label %143
    i32 118, label %145
    i32 120, label %147
    i32 90, label %149
    i32 83, label %167
    i32 -130, label %169
    i32 -131, label %170
  ]

31:                                               ; preds = %29
  %32 = load i8*, i8** @optarg, align 8
  %33 = load void ()*, void ()** @argmatch_die, align 8
  %34 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8* %32, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @sparse_type_string, i64 0, i64 0), i8* bitcast ([3 x i32]* @sparse_type to i8*), i64 4, void ()* %33)
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* @sparse_type, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 3
  store i32 %36, i32* %37, align 4
  br label %174

38:                                               ; preds = %29
  %39 = load i8*, i8** @optarg, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36
  store i32 2, i32* %42, align 8
  br label %50

43:                                               ; preds = %38
  %44 = load i8*, i8** @optarg, align 8
  %45 = load void ()*, void ()** @argmatch_die, align 8
  %46 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* %44, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @reflink_type_string, i64 0, i64 0), i8* bitcast ([3 x i32]* @reflink_type to i8*), i64 4, void ()* %45)
  %47 = getelementptr inbounds [3 x i32], [3 x i32]* @reflink_type, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36
  store i32 %48, i32* %49, align 8
  br label %50

50:                                               ; preds = %43, %41
  br label %174

51:                                               ; preds = %29
  %52 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 2, i32* %52, align 4
  %53 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 19
  store i8 1, i8* %53, align 2
  %54 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 15
  store i8 1, i8* %55, align 2
  %56 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 16
  store i8 1, i8* %56, align 1
  %57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 21
  store i8 1, i8* %57, align 4
  %58 = load i8, i8* @selinux_enabled, align 1
  %59 = trunc i8 %58 to i1
  br i1 %59, label %60, label %62

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 22
  store i8 1, i8* %61, align 1
  br label %62

62:                                               ; preds = %60, %51
  %63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 24
  store i8 1, i8* %63, align 1
  %64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 26
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 27
  store i8 1, i8* %65, align 2
  br label %174

66:                                               ; preds = %29
  store i8 1, i8* %8, align 1
  %67 = load i8*, i8** @optarg, align 8
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i8*, i8** @optarg, align 8
  store i8* %70, i8** %10, align 8
  br label %71

71:                                               ; preds = %69, %66
  br label %174

72:                                               ; preds = %29
  %73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 20
  store i8 0, i8* %73, align 1
  br label %174

74:                                               ; preds = %29
  store i8 1, i8* %12, align 1
  br label %174

75:                                               ; preds = %29
  %76 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 19
  store i8 1, i8* %76, align 2
  %77 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 2, i32* %77, align 4
  br label %174

78:                                               ; preds = %29
  %79 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 7
  store i8 1, i8* %79, align 2
  br label %174

80:                                               ; preds = %29
  %81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 3, i32* %81, align 4
  br label %174

82:                                               ; preds = %29
  %83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 2
  store i32 3, i32* %83, align 8
  br label %174

84:                                               ; preds = %29
  %85 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8
  store i8 1, i8* %85, align 1
  br label %174

86:                                               ; preds = %29
  %87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 4, i32* %87, align 4
  br label %174

88:                                               ; preds = %29
  %89 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 2
  store i32 2, i32* %89, align 8
  br label %174

90:                                               ; preds = %29
  %91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 2, i32* %91, align 4
  br label %174

92:                                               ; preds = %29
  %93 = load i8*, i8** @optarg, align 8
  call void @decode_preserve_arg(i8* %93, %struct.cp_options* %11, i1 zeroext false)
  br label %174

94:                                               ; preds = %29
  %95 = load i8*, i8** @optarg, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  br label %101

98:                                               ; preds = %94
  %99 = load i8*, i8** @optarg, align 8
  call void @decode_preserve_arg(i8* %99, %struct.cp_options* %11, i1 zeroext true)
  %100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 21
  store i8 1, i8* %100, align 4
  br label %174

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %101, %29
  %103 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14
  store i8 1, i8* %103, align 1
  %104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 15
  store i8 1, i8* %104, align 2
  %105 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 16
  store i8 1, i8* %105, align 1
  %106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 21
  store i8 1, i8* %106, align 4
  br label %174

107:                                              ; preds = %29
  store i8 1, i8* @parents_option, align 1
  br label %174

108:                                              ; preds = %29, %29
  %109 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 27
  store i8 1, i8* %109, align 2
  br label %174

110:                                              ; preds = %29
  %111 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 6
  store i8 1, i8* %111, align 1
  br label %174

112:                                              ; preds = %29
  store i8 1, i8* @remove_trailing_slashes, align 1
  br label %174

113:                                              ; preds = %29
  %114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 29
  store i8 1, i8* %114, align 4
  br label %174

115:                                              ; preds = %29
  %116 = load i8*, i8** %13, align 8
  %117 = icmp ne i8* %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %119)
  unreachable

120:                                              ; preds = %115
  %121 = load i8*, i8** @optarg, align 8
  %122 = call i32 @stat(i8* %121, %struct.stat* %16) #13
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = call i32* @__errno_location() #16
  %126 = load i32, i32* %125, align 4
  %127 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0)) #13
  %128 = load i8*, i8** @optarg, align 8
  %129 = call i8* @quotearg_style(i32 4, i8* %128)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %126, i8* %127, i8* %129)
  unreachable

130:                                              ; preds = %120
  %131 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 61440
  %134 = icmp eq i32 %133, 16384
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #13
  %137 = load i8*, i8** @optarg, align 8
  %138 = call i8* @quotearg_style(i32 4, i8* %137)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %136, i8* %138)
  unreachable

139:                                              ; preds = %130
  br label %140

140:                                              ; preds = %139
  %141 = load i8*, i8** @optarg, align 8
  store i8* %141, i8** %13, align 8
  br label %174

142:                                              ; preds = %29
  store i8 1, i8* %14, align 1
  br label %174

143:                                              ; preds = %29
  %144 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 30
  store i8 1, i8* %144, align 1
  br label %174

145:                                              ; preds = %29
  %146 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 31
  store i8 1, i8* %146, align 2
  br label %174

147:                                              ; preds = %29
  %148 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 13
  store i8 1, i8* %148, align 4
  br label %174

149:                                              ; preds = %29
  %150 = load i8, i8* @selinux_enabled, align 1
  %151 = trunc i8 %150 to i1
  br i1 %151, label %152, label %160

152:                                              ; preds = %149
  %153 = load i8*, i8** @optarg, align 8
  %154 = icmp ne i8* %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  %156 = load i8*, i8** @optarg, align 8
  store i8* %156, i8** %15, align 8
  br label %159

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18
  store i8 1, i8* %158, align 1
  br label %159

159:                                              ; preds = %157, %155
  br label %166

160:                                              ; preds = %149
  %161 = load i8*, i8** @optarg, align 8
  %162 = icmp ne i8* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %160
  %164 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.29, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %164)
  br label %165

165:                                              ; preds = %163, %160
  br label %166

166:                                              ; preds = %165, %159
  br label %174

167:                                              ; preds = %29
  store i8 1, i8* %8, align 1
  %168 = load i8*, i8** @optarg, align 8
  store i8* %168, i8** %9, align 8
  br label %174

169:                                              ; preds = %29
  call void @usage(i32 0) #17
  unreachable

170:                                              ; preds = %29
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %172 = load i8*, i8** @Version, align 8
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %171, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0), i8* %172, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8* null)
  call void @exit(i32 0) #14
  unreachable

173:                                              ; preds = %29
  call void @usage(i32 1) #17
  unreachable

174:                                              ; preds = %167, %166, %147, %145, %143, %142, %140, %113, %112, %110, %108, %107, %102, %98, %92, %90, %88, %86, %84, %82, %80, %78, %75, %74, %72, %71, %62, %50, %31
  br label %24, !llvm.loop !7

175:                                              ; preds = %24
  %176 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8
  %177 = load i8, i8* %176, align 1
  %178 = trunc i8 %177 to i1
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 29
  %181 = load i8, i8* %180, align 4
  %182 = trunc i8 %181 to i1
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %184)
  call void @usage(i32 1) #17
  unreachable

185:                                              ; preds = %179, %175
  %186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 2
  %187 = load i32, i32* %186, align 8
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  %190 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 30
  store i8 0, i8* %190, align 1
  br label %191

191:                                              ; preds = %189, %185
  %192 = load i8, i8* %8, align 1
  %193 = trunc i8 %192 to i1
  br i1 %193, label %194, label %200

194:                                              ; preds = %191
  %195 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 2
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, 2
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.35, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %199)
  call void @usage(i32 1) #17
  unreachable

200:                                              ; preds = %194, %191
  %201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 2
  br i1 %203, label %204, label %210

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 3
  %206 = load i32, i32* %205, align 4
  %207 = icmp ne i32 %206, 2
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.36, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %209)
  call void @usage(i32 1) #17
  unreachable

210:                                              ; preds = %204, %200
  %211 = load i8, i8* %8, align 1
  %212 = trunc i8 %211 to i1
  br i1 %212, label %213, label %217

213:                                              ; preds = %210
  %214 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0)) #13
  %215 = load i8*, i8** %10, align 8
  %216 = call i32 @xget_version(i8* %214, i8* %215)
  br label %218

217:                                              ; preds = %210
  br label %218

218:                                              ; preds = %217, %213
  %219 = phi i32 [ %216, %213 ], [ 0, %217 ]
  %220 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 0
  store i32 %219, i32* %220, align 8
  %221 = load i8*, i8** %9, align 8
  call void @set_simple_backup_suffix(i8* %221)
  %222 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %238

225:                                              ; preds = %218
  %226 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 27
  %227 = load i8, i8* %226, align 2
  %228 = trunc i8 %227 to i1
  br i1 %228, label %229, label %235

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8
  %231 = load i8, i8* %230, align 1
  %232 = trunc i8 %231 to i1
  br i1 %232, label %235, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 2, i32* %234, align 4
  br label %237

235:                                              ; preds = %229, %225
  %236 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  store i32 4, i32* %236, align 4
  br label %237

237:                                              ; preds = %235, %233
  br label %238

238:                                              ; preds = %237, %218
  %239 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 27
  %240 = load i8, i8* %239, align 2
  %241 = trunc i8 %240 to i1
  br i1 %241, label %242, label %247

242:                                              ; preds = %238
  %243 = load i8, i8* %12, align 1
  %244 = trunc i8 %243 to i1
  %245 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 5
  %246 = zext i1 %244 to i8
  store i8 %246, i8* %245, align 4
  br label %247

247:                                              ; preds = %242, %238
  %248 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18
  %249 = load i8, i8* %248, align 1
  %250 = trunc i8 %249 to i1
  br i1 %250, label %254, label %251

251:                                              ; preds = %247
  %252 = load i8*, i8** %15, align 8
  %253 = icmp ne i8* %252, null
  br i1 %253, label %254, label %260

254:                                              ; preds = %251, %247
  %255 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 23
  %256 = load i8, i8* %255, align 2
  %257 = trunc i8 %256 to i1
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 22
  store i8 0, i8* %259, align 1
  br label %260

260:                                              ; preds = %258, %254, %251
  %261 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 22
  %262 = load i8, i8* %261, align 1
  %263 = trunc i8 %262 to i1
  br i1 %263, label %264, label %273

264:                                              ; preds = %260
  %265 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18
  %266 = load i8, i8* %265, align 1
  %267 = trunc i8 %266 to i1
  br i1 %267, label %271, label %268

268:                                              ; preds = %264
  %269 = load i8*, i8** %15, align 8
  %270 = icmp ne i8* %269, null
  br i1 %270, label %271, label %273

271:                                              ; preds = %268, %264
  %272 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.38, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %272)
  unreachable

273:                                              ; preds = %268, %260
  %274 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 23
  %275 = load i8, i8* %274, align 2
  %276 = trunc i8 %275 to i1
  br i1 %276, label %277, label %282

277:                                              ; preds = %273
  %278 = load i8, i8* @selinux_enabled, align 1
  %279 = trunc i8 %278 to i1
  br i1 %279, label %282, label %280

280:                                              ; preds = %277
  %281 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.39, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %281)
  unreachable

282:                                              ; preds = %277, %273
  %283 = load i8*, i8** %15, align 8
  %284 = icmp ne i8* %283, null
  br i1 %284, label %285, label %296

285:                                              ; preds = %282
  %286 = load i8*, i8** %15, align 8
  %287 = call i8* @se_const(i8* %286)
  %288 = call i32 @setfscreatecon(i8* %287)
  %289 = icmp slt i32 %288, 0
  br i1 %289, label %290, label %296

290:                                              ; preds = %285
  %291 = call i32* @__errno_location() #16
  %292 = load i32, i32* %291, align 4
  %293 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0)) #13
  %294 = load i8*, i8** %15, align 8
  %295 = call i8* @quote(i8* %294)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %292, i8* %293, i8* %295)
  unreachable

296:                                              ; preds = %285, %282
  %297 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 25
  %298 = load i8, i8* %297, align 8
  %299 = trunc i8 %298 to i1
  br i1 %299, label %300, label %302

300:                                              ; preds = %296
  %301 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.41, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %301)
  unreachable

302:                                              ; preds = %296
  call void @hash_init()
  %303 = load i32, i32* %4, align 4
  %304 = load i32, i32* @optind, align 4
  %305 = sub nsw i32 %303, %304
  %306 = load i8**, i8*** %5, align 8
  %307 = load i32, i32* @optind, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i8*, i8** %306, i64 %308
  %310 = load i8*, i8** %13, align 8
  %311 = load i8, i8* %14, align 1
  %312 = trunc i8 %311 to i1
  %313 = call zeroext i1 @do_copy(i32 %305, i8** %309, i8* %310, i1 zeroext %312, %struct.cp_options* %11)
  %314 = zext i1 %313 to i8
  store i8 %314, i8* %7, align 1
  %315 = load i8, i8* %7, align 1
  %316 = trunc i8 %315 to i1
  %317 = zext i1 %316 to i64
  %318 = select i1 %316, i32 0, i32 1
  ret i32 %318
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %0) #3 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  call void @cp_options_default(%struct.cp_options* %3)
  %4 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 5
  store i8 1, i8* %5, align 4
  %6 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %7 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 1
  store i32 1, i32* %7, align 4
  %8 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6
  store i8 0, i8* %9, align 1
  %10 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %11 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7
  store i8 0, i8* %11, align 2
  %12 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %13 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 8
  store i8 0, i8* %13, align 1
  %14 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %15 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 2
  store i32 4, i32* %15, align 8
  %16 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %17 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 9
  store i8 0, i8* %17, align 8
  %18 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 10
  store i8 0, i8* %19, align 1
  %20 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %21 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 13
  store i8 0, i8* %21, align 4
  %22 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 36
  store i32 0, i32* %23, align 8
  %24 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %25 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 14
  store i8 0, i8* %25, align 1
  %26 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %27 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 19
  store i8 0, i8* %27, align 2
  %28 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %29 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 15
  store i8 0, i8* %29, align 2
  %30 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 16
  store i8 0, i8* %31, align 1
  %32 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %33 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 17
  store i8 0, i8* %33, align 8
  %34 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 22
  store i8 0, i8* %35, align 1
  %36 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %37 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 23
  store i8 0, i8* %37, align 2
  %38 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %39 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 18
  store i8 0, i8* %39, align 1
  %40 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %41 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 24
  store i8 0, i8* %41, align 1
  %42 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %43 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 26
  store i8 0, i8* %43, align 1
  %44 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %45 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %44, i32 0, i32 25
  store i8 0, i8* %45, align 8
  %46 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %47 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 20
  store i8 1, i8* %47, align 1
  %48 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %49 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %48, i32 0, i32 21
  store i8 0, i8* %49, align 4
  %50 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %51 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 27
  store i8 0, i8* %51, align 2
  %52 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %53 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 3
  store i32 2, i32* %53, align 4
  %54 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %55 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 29
  store i8 0, i8* %55, align 4
  %56 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 28
  store i8 0, i8* %57, align 1
  %58 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %58, i32 0, i32 4
  store i32 0, i32* %59, align 8
  %60 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 32
  store i8 0, i8* %61, align 1
  %62 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 30
  store i8 0, i8* %63, align 1
  %64 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %65 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 31
  store i8 0, i8* %65, align 2
  %66 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i64 0, i64 0)) #13
  %67 = icmp ne i8* %66, null
  %68 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %69 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 33
  %70 = zext i1 %67 to i8
  store i8 %70, i8* %69, align 8
  %71 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %72 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 37
  store %struct.hash_table* null, %struct.hash_table** %72, align 8
  %73 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %74 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %73, i32 0, i32 38
  store %struct.hash_table* null, %struct.hash_table** %74, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @decode_preserve_arg(i8* %0, %struct.cp_options* %1, i1 zeroext %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.cp_options*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store %struct.cp_options* %1, %struct.cp_options** %5, align 8
  %11 = zext i1 %2 to i8
  store i8 %11, i8* %6, align 1
  %12 = load i8*, i8** %4, align 8
  %13 = call noalias i8* @xstrdup(i8* %12)
  store i8* %13, i8** %7, align 8
  %14 = load i8*, i8** %7, align 8
  store i8* %14, i8** %8, align 8
  br label %15

15:                                               ; preds = %130, %3
  %16 = load i8*, i8** %8, align 8
  %17 = call i8* @strchr(i8* %16, i32 44) #15
  store i8* %17, i8** %9, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = load i8*, i8** %9, align 8
  %22 = getelementptr inbounds i8, i8* %21, i32 1
  store i8* %22, i8** %9, align 8
  store i8 0, i8* %21, align 1
  br label %23

23:                                               ; preds = %20, %15
  %24 = load i8, i8* %6, align 1
  %25 = trunc i8 %24 to i1
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0)
  %28 = load i8*, i8** %8, align 8
  %29 = load void ()*, void ()** @argmatch_die, align 8
  %30 = call i64 @__xargmatch_internal(i8* %27, i8* %28, i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @decode_preserve_arg.preserve_args, i64 0, i64 0), i8* bitcast ([7 x i32]* @decode_preserve_arg.preserve_vals to i8*), i64 4, void ()* %29)
  %31 = getelementptr inbounds [7 x i32], [7 x i32]* @decode_preserve_arg.preserve_vals, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %10, align 4
  %33 = load i32, i32* %10, align 4
  switch i32 %33, label %127 [
    i32 0, label %34
    i32 1, label %46
    i32 2, label %52
    i32 3, label %58
    i32 4, label %64
    i32 5, label %75
    i32 6, label %86
  ]

34:                                               ; preds = %23
  %35 = load i8, i8* %6, align 1
  %36 = trunc i8 %35 to i1
  %37 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %38 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 15
  %39 = zext i1 %36 to i8
  store i8 %39, i8* %38, align 2
  %40 = load i8, i8* %6, align 1
  %41 = trunc i8 %40 to i1
  %42 = xor i1 %41, true
  %43 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %44 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %43, i32 0, i32 17
  %45 = zext i1 %42 to i8
  store i8 %45, i8* %44, align 8
  br label %128

46:                                               ; preds = %23
  %47 = load i8, i8* %6, align 1
  %48 = trunc i8 %47 to i1
  %49 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %50 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 16
  %51 = zext i1 %48 to i8
  store i8 %51, i8* %50, align 1
  br label %128

52:                                               ; preds = %23
  %53 = load i8, i8* %6, align 1
  %54 = trunc i8 %53 to i1
  %55 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %56 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 14
  %57 = zext i1 %54 to i8
  store i8 %57, i8* %56, align 1
  br label %128

58:                                               ; preds = %23
  %59 = load i8, i8* %6, align 1
  %60 = trunc i8 %59 to i1
  %61 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %62 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 19
  %63 = zext i1 %60 to i8
  store i8 %63, i8* %62, align 2
  br label %128

64:                                               ; preds = %23
  %65 = load i8, i8* %6, align 1
  %66 = trunc i8 %65 to i1
  %67 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %68 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 23
  %69 = zext i1 %66 to i8
  store i8 %69, i8* %68, align 2
  %70 = load i8, i8* %6, align 1
  %71 = trunc i8 %70 to i1
  %72 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %72, i32 0, i32 22
  %74 = zext i1 %71 to i8
  store i8 %74, i8* %73, align 1
  br label %128

75:                                               ; preds = %23
  %76 = load i8, i8* %6, align 1
  %77 = trunc i8 %76 to i1
  %78 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %79 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %78, i32 0, i32 24
  %80 = zext i1 %77 to i8
  store i8 %80, i8* %79, align 1
  %81 = load i8, i8* %6, align 1
  %82 = trunc i8 %81 to i1
  %83 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 25
  %85 = zext i1 %82 to i8
  store i8 %85, i8* %84, align 8
  br label %128

86:                                               ; preds = %23
  %87 = load i8, i8* %6, align 1
  %88 = trunc i8 %87 to i1
  %89 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %90 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 15
  %91 = zext i1 %88 to i8
  store i8 %91, i8* %90, align 2
  %92 = load i8, i8* %6, align 1
  %93 = trunc i8 %92 to i1
  %94 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %95 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 16
  %96 = zext i1 %93 to i8
  store i8 %96, i8* %95, align 1
  %97 = load i8, i8* %6, align 1
  %98 = trunc i8 %97 to i1
  %99 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 14
  %101 = zext i1 %98 to i8
  store i8 %101, i8* %100, align 1
  %102 = load i8, i8* %6, align 1
  %103 = trunc i8 %102 to i1
  %104 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %105 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 19
  %106 = zext i1 %103 to i8
  store i8 %106, i8* %105, align 2
  %107 = load i8, i8* %6, align 1
  %108 = trunc i8 %107 to i1
  %109 = xor i1 %108, true
  %110 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %111 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %110, i32 0, i32 17
  %112 = zext i1 %109 to i8
  store i8 %112, i8* %111, align 8
  %113 = load i8, i8* @selinux_enabled, align 1
  %114 = trunc i8 %113 to i1
  br i1 %114, label %115, label %121

115:                                              ; preds = %86
  %116 = load i8, i8* %6, align 1
  %117 = trunc i8 %116 to i1
  %118 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %119 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 22
  %120 = zext i1 %117 to i8
  store i8 %120, i8* %119, align 1
  br label %121

121:                                              ; preds = %115, %86
  %122 = load i8, i8* %6, align 1
  %123 = trunc i8 %122 to i1
  %124 = load %struct.cp_options*, %struct.cp_options** %5, align 8
  %125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 24
  %126 = zext i1 %123 to i8
  store i8 %126, i8* %125, align 1
  br label %128

127:                                              ; preds = %23
  call void @abort() #14
  unreachable

128:                                              ; preds = %121, %75, %64, %58, %52, %46, %34
  %129 = load i8*, i8** %9, align 8
  store i8* %129, i8** %8, align 8
  br label %130

130:                                              ; preds = %128
  %131 = load i8*, i8** %8, align 8
  %132 = icmp ne i8* %131, null
  br i1 %132, label %15, label %133, !llvm.loop !8

133:                                              ; preds = %130
  %134 = load i8*, i8** %7, align 8
  call void @free(i8* %134) #13
  ret void
}

declare dso_local void @error(i32, i32, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #1

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_copy(i32 %0, i8** %1, i8* %2, i1 zeroext %3, %struct.cp_options* %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.cp_options*, align 8
  %11 = alloca %struct.stat, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca %struct.dir_attr*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %struct.dir_attr*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i8*, align 8
  %37 = alloca i8, align 1
  store i32 %0, i32* %6, align 4
  store i8** %1, i8*** %7, align 8
  store i8* %2, i8** %8, align 8
  %38 = zext i1 %3 to i8
  store i8 %38, i8* %9, align 1
  store %struct.cp_options* %4, %struct.cp_options** %10, align 8
  store i8 0, i8* %12, align 1
  store i8 1, i8* %13, align 1
  %39 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %40 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %39, i32 0, i32 6
  %41 = load i8, i8* %40, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %48, label %43

43:                                               ; preds = %5
  %44 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %45 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %44, i32 0, i32 7
  %46 = load i8, i8* %45, align 2
  %47 = trunc i8 %46 to i1
  br label %48

48:                                               ; preds = %43, %5
  %49 = phi i1 [ true, %5 ], [ %47, %43 ]
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %14, align 1
  %51 = load i32, i32* %6, align 4
  %52 = load i8*, i8** %8, align 8
  %53 = icmp ne i8* %52, null
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = icmp sle i32 %51, %55
  br i1 %56, label %57, label %69

57:                                               ; preds = %48
  %58 = load i32, i32* %6, align 4
  %59 = icmp sle i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.101, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %61)
  br label %68

62:                                               ; preds = %57
  %63 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.102, i64 0, i64 0)) #13
  %64 = load i8**, i8*** %7, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 0
  %66 = load i8*, i8** %65, align 8
  %67 = call i8* @quotearg_style(i32 4, i8* %66)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %63, i8* %67)
  br label %68

68:                                               ; preds = %62, %60
  call void @usage(i32 1) #17
  unreachable

69:                                               ; preds = %48
  %70 = load i8, i8* %9, align 1
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %99

72:                                               ; preds = %69
  %73 = load i8*, i8** %8, align 8
  %74 = icmp ne i8* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.103, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %76)
  unreachable

77:                                               ; preds = %72
  %78 = load i32, i32* %6, align 4
  %79 = icmp slt i32 2, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %77
  %81 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0)) #13
  %82 = load i8**, i8*** %7, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 2
  %84 = load i8*, i8** %83, align 8
  %85 = call i8* @quotearg_style(i32 4, i8* %84)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %81, i8* %85)
  call void @usage(i32 1) #17
  unreachable

86:                                               ; preds = %77
  %87 = load i8**, i8*** %7, align 8
  %88 = load i32, i32* %6, align 4
  %89 = sub nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8*, i8** %87, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = load i8, i8* %14, align 1
  %94 = trunc i8 %93 to i1
  %95 = call zeroext i1 @target_directory_operand(i8* %92, %struct.stat* %11, i8* %12, i1 zeroext %94)
  %96 = zext i1 %95 to i8
  store i8 %96, i8* %15, align 1
  %97 = load i8, i8* %15, align 1
  %98 = trunc i8 %97 to i1
  br label %137

99:                                               ; preds = %69
  %100 = load i8*, i8** %8, align 8
  %101 = icmp ne i8* %100, null
  br i1 %101, label %136, label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %6, align 4
  %104 = icmp sle i32 2, %103
  br i1 %104, label %105, label %122

105:                                              ; preds = %102
  %106 = load i8**, i8*** %7, align 8
  %107 = load i32, i32* %6, align 4
  %108 = sub nsw i32 %107, 1
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8*, i8** %106, i64 %109
  %111 = load i8*, i8** %110, align 8
  %112 = load i8, i8* %14, align 1
  %113 = trunc i8 %112 to i1
  %114 = call zeroext i1 @target_directory_operand(i8* %111, %struct.stat* %11, i8* %12, i1 zeroext %113)
  br i1 %114, label %115, label %122

115:                                              ; preds = %105
  %116 = load i8**, i8*** %7, align 8
  %117 = load i32, i32* %6, align 4
  %118 = add nsw i32 %117, -1
  store i32 %118, i32* %6, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8*, i8** %116, i64 %119
  %121 = load i8*, i8** %120, align 8
  store i8* %121, i8** %8, align 8
  br label %135

122:                                              ; preds = %105, %102
  %123 = load i32, i32* %6, align 4
  %124 = icmp slt i32 2, %123
  br i1 %124, label %125, label %134

125:                                              ; preds = %122
  %126 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0)) #13
  %127 = load i8**, i8*** %7, align 8
  %128 = load i32, i32* %6, align 4
  %129 = sub nsw i32 %128, 1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %127, i64 %130
  %132 = load i8*, i8** %131, align 8
  %133 = call i8* @quotearg_style(i32 4, i8* %132)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %126, i8* %133)
  unreachable

134:                                              ; preds = %122
  br label %135

135:                                              ; preds = %134, %115
  br label %136

136:                                              ; preds = %135, %99
  br label %137

137:                                              ; preds = %136, %86
  %138 = load i8*, i8** %8, align 8
  %139 = icmp ne i8* %138, null
  br i1 %139, label %140, label %285

140:                                              ; preds = %137
  %141 = load i32, i32* %6, align 4
  %142 = icmp sle i32 2, %141
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  call void @dest_info_init(%struct.cp_options* %144)
  %145 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  call void @src_info_init(%struct.cp_options* %145)
  br label %146

146:                                              ; preds = %143, %140
  store i32 0, i32* %16, align 4
  br label %147

147:                                              ; preds = %281, %146
  %148 = load i32, i32* %16, align 4
  %149 = load i32, i32* %6, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %151, label %284

151:                                              ; preds = %147
  store i8 1, i8* %18, align 1
  store i8* null, i8** %20, align 8
  %152 = load i8**, i8*** %7, align 8
  %153 = load i32, i32* %16, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8*, i8** %152, i64 %154
  %156 = load i8*, i8** %155, align 8
  store i8* %156, i8** %21, align 8
  %157 = load i8, i8* @remove_trailing_slashes, align 1
  %158 = trunc i8 %157 to i1
  br i1 %158, label %159, label %162

159:                                              ; preds = %151
  %160 = load i8*, i8** %21, align 8
  %161 = call zeroext i1 @strip_trailing_slashes(i8* %160)
  br label %162

162:                                              ; preds = %159, %151
  %163 = load i8, i8* @parents_option, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %198

165:                                              ; preds = %162
  br label %166

166:                                              ; preds = %165
  %167 = load i8*, i8** %21, align 8
  store i8* %167, i8** %23, align 8
  %168 = load i8*, i8** %23, align 8
  %169 = call i64 @strlen(i8* %168) #15
  %170 = add i64 %169, 1
  store i64 %170, i64* %24, align 8
  %171 = load i64, i64* %24, align 8
  %172 = alloca i8, i64 %171, align 16
  store i8* %172, i8** %25, align 8
  %173 = load i8*, i8** %25, align 8
  %174 = load i8*, i8** %23, align 8
  %175 = load i64, i64* %24, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 %174, i64 %175, i1 false)
  store i8* %173, i8** %26, align 8
  %176 = load i8*, i8** %26, align 8
  store i8* %176, i8** %22, align 8
  br label %177

177:                                              ; preds = %166
  %178 = load i8*, i8** %22, align 8
  %179 = call zeroext i1 @strip_trailing_slashes(i8* %178)
  %180 = load i8*, i8** %8, align 8
  %181 = load i8*, i8** %22, align 8
  %182 = call i8* @file_name_concat(i8* %180, i8* %181, i8** %20)
  store i8* %182, i8** %17, align 8
  %183 = load i8*, i8** %17, align 8
  %184 = load i8*, i8** %20, align 8
  %185 = load i8*, i8** %17, align 8
  %186 = ptrtoint i8* %184 to i64
  %187 = ptrtoint i8* %185 to i64
  %188 = sub i64 %186, %187
  %189 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %190 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %189, i32 0, i32 31
  %191 = load i8, i8* %190, align 2
  %192 = trunc i8 %191 to i1
  %193 = zext i1 %192 to i64
  %194 = select i1 %192, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i8* null
  %195 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %196 = call zeroext i1 @make_dir_parents_private(i8* %183, i64 %188, i8* %194, %struct.dir_attr** %19, i8* %12, %struct.cp_options* %195)
  %197 = zext i1 %196 to i8
  store i8 %197, i8* %18, align 1
  br label %226

198:                                              ; preds = %162
  br label %199

199:                                              ; preds = %198
  %200 = load i8*, i8** %21, align 8
  %201 = call i8* @last_component(i8* %200) #15
  store i8* %201, i8** %28, align 8
  %202 = load i8*, i8** %28, align 8
  %203 = call i64 @strlen(i8* %202) #15
  %204 = add i64 %203, 1
  store i64 %204, i64* %29, align 8
  %205 = load i64, i64* %29, align 8
  %206 = alloca i8, i64 %205, align 16
  store i8* %206, i8** %30, align 8
  %207 = load i8*, i8** %30, align 8
  %208 = load i8*, i8** %28, align 8
  %209 = load i64, i64* %29, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %208, i64 %209, i1 false)
  store i8* %207, i8** %31, align 8
  %210 = load i8*, i8** %31, align 8
  store i8* %210, i8** %27, align 8
  br label %211

211:                                              ; preds = %199
  %212 = load i8*, i8** %27, align 8
  %213 = call zeroext i1 @strip_trailing_slashes(i8* %212)
  %214 = load i8*, i8** %27, align 8
  %215 = call i32 @strcmp(i8* %214, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.106, i64 0, i64 0)) #15
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %220

217:                                              ; preds = %211
  %218 = load i8*, i8** %8, align 8
  %219 = call noalias i8* @xstrdup(i8* %218)
  br label %224

220:                                              ; preds = %211
  %221 = load i8*, i8** %8, align 8
  %222 = load i8*, i8** %27, align 8
  %223 = call i8* @file_name_concat(i8* %221, i8* %222, i8** null)
  br label %224

224:                                              ; preds = %220, %217
  %225 = phi i8* [ %219, %217 ], [ %223, %220 ]
  store i8* %225, i8** %17, align 8
  br label %226

226:                                              ; preds = %224, %177
  %227 = load i8, i8* %18, align 1
  %228 = trunc i8 %227 to i1
  br i1 %228, label %230, label %229

229:                                              ; preds = %226
  store i8 0, i8* %13, align 1
  br label %264

230:                                              ; preds = %226
  %231 = load i8*, i8** %21, align 8
  %232 = load i8*, i8** %17, align 8
  %233 = load i8, i8* %12, align 1
  %234 = trunc i8 %233 to i1
  %235 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %236 = call zeroext i1 @copy(i8* %231, i8* %232, i1 zeroext %234, %struct.cp_options* %235, i8* %32, i8* null)
  %237 = zext i1 %236 to i32
  %238 = load i8, i8* %13, align 1
  %239 = trunc i8 %238 to i1
  %240 = zext i1 %239 to i32
  %241 = and i32 %240, %237
  %242 = icmp ne i32 %241, 0
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %13, align 1
  %244 = load i8, i8* @parents_option, align 1
  %245 = trunc i8 %244 to i1
  br i1 %245, label %246, label %263

246:                                              ; preds = %230
  %247 = load i8*, i8** %17, align 8
  %248 = load i8*, i8** %20, align 8
  %249 = load i8*, i8** %17, align 8
  %250 = ptrtoint i8* %248 to i64
  %251 = ptrtoint i8* %249 to i64
  %252 = sub i64 %250, %251
  %253 = load %struct.dir_attr*, %struct.dir_attr** %19, align 8
  %254 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %255 = call zeroext i1 @re_protect(i8* %247, i64 %252, %struct.dir_attr* %253, %struct.cp_options* %254)
  %256 = zext i1 %255 to i32
  %257 = load i8, i8* %13, align 1
  %258 = trunc i8 %257 to i1
  %259 = zext i1 %258 to i32
  %260 = and i32 %259, %256
  %261 = icmp ne i32 %260, 0
  %262 = zext i1 %261 to i8
  store i8 %262, i8* %13, align 1
  br label %263

263:                                              ; preds = %246, %230
  br label %264

264:                                              ; preds = %263, %229
  %265 = load i8, i8* @parents_option, align 1
  %266 = trunc i8 %265 to i1
  br i1 %266, label %267, label %279

267:                                              ; preds = %264
  br label %268

268:                                              ; preds = %271, %267
  %269 = load %struct.dir_attr*, %struct.dir_attr** %19, align 8
  %270 = icmp ne %struct.dir_attr* %269, null
  br i1 %270, label %271, label %278

271:                                              ; preds = %268
  %272 = load %struct.dir_attr*, %struct.dir_attr** %19, align 8
  store %struct.dir_attr* %272, %struct.dir_attr** %33, align 8
  %273 = load %struct.dir_attr*, %struct.dir_attr** %19, align 8
  %274 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %273, i32 0, i32 3
  %275 = load %struct.dir_attr*, %struct.dir_attr** %274, align 8
  store %struct.dir_attr* %275, %struct.dir_attr** %19, align 8
  %276 = load %struct.dir_attr*, %struct.dir_attr** %33, align 8
  %277 = bitcast %struct.dir_attr* %276 to i8*
  call void @free(i8* %277) #13
  br label %268, !llvm.loop !9

278:                                              ; preds = %268
  br label %279

279:                                              ; preds = %278, %264
  %280 = load i8*, i8** %17, align 8
  call void @free(i8* %280) #13
  br label %281

281:                                              ; preds = %279
  %282 = load i32, i32* %16, align 4
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %16, align 4
  br label %147, !llvm.loop !10

284:                                              ; preds = %147
  br label %335

285:                                              ; preds = %137
  %286 = load i8**, i8*** %7, align 8
  %287 = getelementptr inbounds i8*, i8** %286, i64 0
  %288 = load i8*, i8** %287, align 8
  store i8* %288, i8** %35, align 8
  %289 = load i8**, i8*** %7, align 8
  %290 = getelementptr inbounds i8*, i8** %289, i64 1
  %291 = load i8*, i8** %290, align 8
  store i8* %291, i8** %36, align 8
  %292 = load i8, i8* @parents_option, align 1
  %293 = trunc i8 %292 to i1
  br i1 %293, label %294, label %296

294:                                              ; preds = %285
  %295 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.107, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %295)
  call void @usage(i32 1) #17
  unreachable

296:                                              ; preds = %285
  %297 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %298 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %297, i32 0, i32 7
  %299 = load i8, i8* %298, align 2
  %300 = trunc i8 %299 to i1
  br i1 %300, label %301, label %327

301:                                              ; preds = %296
  %302 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %303 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %302, i32 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %306, label %327

306:                                              ; preds = %301
  %307 = load i8*, i8** %35, align 8
  %308 = load i8*, i8** %36, align 8
  %309 = call i32 @strcmp(i8* %307, i8* %308) #15
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %327

311:                                              ; preds = %306
  %312 = load i8, i8* %12, align 1
  %313 = trunc i8 %312 to i1
  br i1 %313, label %327, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3
  %316 = load i32, i32* %315, align 8
  %317 = and i32 %316, 61440
  %318 = icmp eq i32 %317, 32768
  br i1 %318, label %319, label %327

319:                                              ; preds = %314
  %320 = load i8*, i8** %36, align 8
  %321 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %322 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %321, i32 0, i32 0
  %323 = load i32, i32* %322, align 8
  %324 = call i8* @find_backup_file_name(i8* %320, i32 %323)
  store i8* %324, i8** %34, align 8
  %325 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %326 = bitcast %struct.cp_options* %325 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.cp_options* @do_copy.x_tmp to i8*), i8* align 8 %326, i64 80, i1 false)
  store i32 0, i32* getelementptr inbounds (%struct.cp_options, %struct.cp_options* @do_copy.x_tmp, i32 0, i32 0), align 8
  store %struct.cp_options* @do_copy.x_tmp, %struct.cp_options** %10, align 8
  br label %329

327:                                              ; preds = %314, %311, %306, %301, %296
  %328 = load i8*, i8** %36, align 8
  store i8* %328, i8** %34, align 8
  br label %329

329:                                              ; preds = %327, %319
  %330 = load i8*, i8** %35, align 8
  %331 = load i8*, i8** %34, align 8
  %332 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %333 = call zeroext i1 @copy(i8* %330, i8* %331, i1 zeroext false, %struct.cp_options* %332, i8* %37, i8* null)
  %334 = zext i1 %333 to i8
  store i8 %334, i8* %13, align 1
  br label %335

335:                                              ; preds = %329, %284
  %336 = load i8, i8* %13, align 1
  %337 = trunc i8 %336 to i1
  ret i1 %337
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %0, %struct.stat* %1, i8* %2, i1 zeroext %3) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  store %struct.stat* %1, %struct.stat** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = zext i1 %3 to i8
  store i8 %11, i8* %8, align 1
  %12 = load i8*, i8** %5, align 8
  %13 = load %struct.stat*, %struct.stat** %6, align 8
  %14 = call i32 @stat(i8* %12, %struct.stat* %13) #13
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %4
  br label %20

17:                                               ; preds = %4
  %18 = call i32* @__errno_location() #16
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %17, %16
  %21 = phi i32 [ 0, %16 ], [ %19, %17 ]
  store i32 %21, i32* %9, align 4
  %22 = load i32, i32* %9, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = load %struct.stat*, %struct.stat** %6, align 8
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 61440
  %29 = icmp eq i32 %28, 16384
  br label %30

30:                                               ; preds = %24, %20
  %31 = phi i1 [ false, %20 ], [ %29, %24 ]
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %10, align 1
  %33 = load i32, i32* %9, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %53

35:                                               ; preds = %30
  %36 = load i32, i32* %9, align 4
  %37 = icmp eq i32 %36, 2
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load i8*, i8** %7, align 8
  store i8 1, i8* %39, align 1
  br label %52

40:                                               ; preds = %35
  %41 = load i8, i8* %8, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load %struct.stat*, %struct.stat** %6, align 8
  %45 = getelementptr inbounds %struct.stat, %struct.stat* %44, i32 0, i32 3
  store i32 0, i32* %45, align 8
  br label %51

46:                                               ; preds = %40
  %47 = load i32, i32* %9, align 4
  %48 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0)) #13
  %49 = load i8*, i8** %5, align 8
  %50 = call i8* @quotearg_style(i32 4, i8* %49)
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %47, i8* %48, i8* %50)
  unreachable

51:                                               ; preds = %43
  br label %52

52:                                               ; preds = %51, %38
  br label %53

53:                                               ; preds = %52, %30
  %54 = load i8, i8* %10, align 1
  %55 = trunc i8 %54 to i1
  ret i1 %55
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @make_dir_parents_private(i8* %0, i64 %1, i8* %2, %struct.dir_attr** %3, i8* %4, %struct.cp_options* %5) #3 {
  %7 = alloca i1, align 1
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.dir_attr**, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.cp_options*, align 8
  %14 = alloca %struct.stat, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca %struct.dir_attr*, align 8
  %25 = alloca i8, align 1
  %26 = alloca %struct.stat, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store %struct.dir_attr** %3, %struct.dir_attr*** %11, align 8
  store i8* %4, i8** %12, align 8
  store %struct.cp_options* %5, %struct.cp_options** %13, align 8
  br label %31

31:                                               ; preds = %6
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %19, align 8
  %33 = load i8*, i8** %19, align 8
  %34 = call i64 @strlen(i8* %33) #15
  %35 = add i64 %34, 1
  store i64 %35, i64* %20, align 8
  %36 = load i64, i64* %20, align 8
  %37 = alloca i8, i64 %36, align 16
  store i8* %37, i8** %21, align 8
  %38 = load i8*, i8** %21, align 8
  %39 = load i8*, i8** %19, align 8
  %40 = load i64, i64* %20, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %39, i64 %40, i1 false)
  store i8* %38, i8** %22, align 8
  %41 = load i8*, i8** %22, align 8
  store i8* %41, i8** %15, align 8
  br label %42

42:                                               ; preds = %31
  %43 = load i8*, i8** %15, align 8
  %44 = load i64, i64* %9, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  store i8* %45, i8** %16, align 8
  %46 = load i8*, i8** %15, align 8
  %47 = call i64 @dir_len(i8* %46) #15
  store i64 %47, i64* %18, align 8
  %48 = load i64, i64* %18, align 8
  %49 = add i64 %48, 1
  %50 = alloca i8, i64 %49, align 16
  store i8* %50, i8** %17, align 8
  %51 = load i8*, i8** %17, align 8
  %52 = load i8*, i8** %15, align 8
  %53 = load i64, i64* %18, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %52, i64 %53, i1 false)
  %54 = load i8*, i8** %17, align 8
  %55 = load i64, i64* %18, align 8
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  store i8 0, i8* %56, align 1
  %57 = load %struct.dir_attr**, %struct.dir_attr*** %11, align 8
  store %struct.dir_attr* null, %struct.dir_attr** %57, align 8
  %58 = load i8*, i8** %17, align 8
  %59 = call i32 @stat(i8* %58, %struct.stat* %14) #13
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %344

61:                                               ; preds = %42
  %62 = load i8*, i8** %16, align 8
  store i8* %62, i8** %23, align 8
  br label %63

63:                                               ; preds = %68, %61
  %64 = load i8*, i8** %23, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 47
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = load i8*, i8** %23, align 8
  %70 = getelementptr inbounds i8, i8* %69, i32 1
  store i8* %70, i8** %23, align 8
  br label %63, !llvm.loop !11

71:                                               ; preds = %63
  br label %72

72:                                               ; preds = %342, %71
  %73 = load i8*, i8** %23, align 8
  %74 = call i8* @strchr(i8* %73, i32 47) #15
  store i8* %74, i8** %23, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %343

76:                                               ; preds = %72
  %77 = load i8*, i8** %23, align 8
  store i8 0, i8* %77, align 1
  %78 = load i8*, i8** %15, align 8
  %79 = call i32 @stat(i8* %78, %struct.stat* %14) #13
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i8
  store i8 %81, i8* %25, align 1
  %82 = load i8, i8* %25, align 1
  %83 = trunc i8 %82 to i1
  br i1 %83, label %99, label %84

84:                                               ; preds = %76
  %85 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %85, i32 0, i32 14
  %87 = load i8, i8* %86, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %99, label %89

89:                                               ; preds = %84
  %90 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 15
  %92 = load i8, i8* %91, align 2
  %93 = trunc i8 %92 to i1
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %96 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 16
  %97 = load i8, i8* %96, align 1
  %98 = trunc i8 %97 to i1
  br i1 %98, label %99, label %144

99:                                               ; preds = %94, %89, %84, %76
  %100 = load i8*, i8** %16, align 8
  %101 = call i32 @stat(i8* %100, %struct.stat* %26) #13
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = call i32* @__errno_location() #16
  %105 = load i32, i32* %104, align 4
  br label %113

106:                                              ; preds = %99
  %107 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 61440
  %110 = icmp eq i32 %109, 16384
  %111 = zext i1 %110 to i64
  %112 = select i1 %110, i32 0, i32 20
  br label %113

113:                                              ; preds = %106, %103
  %114 = phi i32 [ %105, %103 ], [ %112, %106 ]
  store i32 %114, i32* %27, align 4
  %115 = load i32, i32* %27, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %122

117:                                              ; preds = %113
  %118 = load i32, i32* %27, align 4
  %119 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.108, i64 0, i64 0)) #13
  %120 = load i8*, i8** %16, align 8
  %121 = call i8* @quotearg_style(i32 4, i8* %120)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %118, i8* %119, i8* %121)
  store i1 false, i1* %7, align 1
  br label %357

122:                                              ; preds = %113
  %123 = call noalias i8* @xmalloc(i64 168)
  %124 = bitcast i8* %123 to %struct.dir_attr*
  store %struct.dir_attr* %124, %struct.dir_attr** %24, align 8
  %125 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %126 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %125, i32 0, i32 0
  %127 = bitcast %struct.stat* %126 to i8*
  %128 = bitcast %struct.stat* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 144, i1 false)
  %129 = load i8*, i8** %23, align 8
  %130 = load i8*, i8** %15, align 8
  %131 = ptrtoint i8* %129 to i64
  %132 = ptrtoint i8* %130 to i64
  %133 = sub i64 %131, %132
  %134 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %135 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %134, i32 0, i32 2
  store i64 %133, i64* %135, align 8
  %136 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %137 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %136, i32 0, i32 1
  store i8 0, i8* %137, align 8
  %138 = load %struct.dir_attr**, %struct.dir_attr*** %11, align 8
  %139 = load %struct.dir_attr*, %struct.dir_attr** %138, align 8
  %140 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %141 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %140, i32 0, i32 3
  store %struct.dir_attr* %139, %struct.dir_attr** %141, align 8
  %142 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %143 = load %struct.dir_attr**, %struct.dir_attr*** %11, align 8
  store %struct.dir_attr* %142, %struct.dir_attr** %143, align 8
  br label %144

144:                                              ; preds = %122, %94
  %145 = load i8*, i8** %16, align 8
  %146 = load i8*, i8** %15, align 8
  %147 = load i8, i8* %25, align 1
  %148 = trunc i8 %147 to i1
  br i1 %148, label %149, label %154

149:                                              ; preds = %144
  %150 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %151 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %150, i32 0, i32 0
  %152 = getelementptr inbounds %struct.stat, %struct.stat* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 8
  br label %155

154:                                              ; preds = %144
  br label %155

155:                                              ; preds = %154, %149
  %156 = phi i32 [ %153, %149 ], [ 0, %154 ]
  %157 = load i8, i8* %25, align 1
  %158 = trunc i8 %157 to i1
  %159 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %160 = call zeroext i1 @set_process_security_ctx(i8* %145, i8* %146, i32 %156, i1 zeroext %158, %struct.cp_options* %159)
  br i1 %160, label %162, label %161

161:                                              ; preds = %155
  store i1 false, i1* %7, align 1
  br label %357

162:                                              ; preds = %155
  %163 = load i8, i8* %25, align 1
  %164 = trunc i8 %163 to i1
  br i1 %164, label %165, label %290

165:                                              ; preds = %162
  %166 = load i8*, i8** %12, align 8
  store i8 1, i8* %166, align 1
  %167 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %168 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %167, i32 0, i32 0
  %169 = getelementptr inbounds %struct.stat, %struct.stat* %168, i32 0, i32 3
  %170 = load i32, i32* %169, align 8
  store i32 %170, i32* %28, align 4
  %171 = load i32, i32* %28, align 4
  %172 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %173 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %172, i32 0, i32 14
  %174 = load i8, i8* %173, align 1
  %175 = trunc i8 %174 to i1
  br i1 %175, label %176, label %177

176:                                              ; preds = %165
  br label %184

177:                                              ; preds = %165
  %178 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %179 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %178, i32 0, i32 15
  %180 = load i8, i8* %179, align 2
  %181 = trunc i8 %180 to i1
  %182 = zext i1 %181 to i64
  %183 = select i1 %181, i32 18, i32 0
  br label %184

184:                                              ; preds = %177, %176
  %185 = phi i32 [ 63, %176 ], [ %183, %177 ]
  %186 = and i32 %171, %185
  store i32 %186, i32* %29, align 4
  %187 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %188 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %187, i32 0, i32 17
  %189 = load i8, i8* %188, align 8
  %190 = trunc i8 %189 to i1
  br i1 %190, label %191, label %192

191:                                              ; preds = %184
  br label %194

192:                                              ; preds = %184
  %193 = load i32, i32* %28, align 4
  br label %194

194:                                              ; preds = %192, %191
  %195 = phi i32 [ 511, %191 ], [ %193, %192 ]
  store i32 %195, i32* %30, align 4
  %196 = load i32, i32* %29, align 4
  %197 = xor i32 %196, -1
  %198 = and i32 4095, %197
  %199 = load i32, i32* %30, align 4
  %200 = and i32 %199, %198
  store i32 %200, i32* %30, align 4
  %201 = load i8*, i8** %15, align 8
  %202 = load i32, i32* %30, align 4
  %203 = call i32 @mkdir(i8* %201, i32 %202) #13
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %211

205:                                              ; preds = %194
  %206 = call i32* @__errno_location() #16
  %207 = load i32, i32* %206, align 4
  %208 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0)) #13
  %209 = load i8*, i8** %15, align 8
  %210 = call i8* @quotearg_style(i32 4, i8* %209)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %207, i8* %208, i8* %210)
  store i1 false, i1* %7, align 1
  br label %357

211:                                              ; preds = %194
  %212 = load i8*, i8** %10, align 8
  %213 = icmp ne i8* %212, null
  br i1 %213, label %214, label %219

214:                                              ; preds = %211
  %215 = load i8*, i8** %10, align 8
  %216 = load i8*, i8** %16, align 8
  %217 = load i8*, i8** %15, align 8
  %218 = call i32 (i8*, ...) @printf(i8* %215, i8* %216, i8* %217)
  br label %219

219:                                              ; preds = %214, %211
  br label %220

220:                                              ; preds = %219
  %221 = load i8*, i8** %15, align 8
  %222 = call i32 @lstat(i8* %221, %struct.stat* %14) #13
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %230

224:                                              ; preds = %220
  %225 = call i32* @__errno_location() #16
  %226 = load i32, i32* %225, align 4
  %227 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.108, i64 0, i64 0)) #13
  %228 = load i8*, i8** %15, align 8
  %229 = call i8* @quotearg_style(i32 4, i8* %228)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %226, i8* %227, i8* %229)
  store i1 false, i1* %7, align 1
  br label %357

230:                                              ; preds = %220
  %231 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 15
  %233 = load i8, i8* %232, align 2
  %234 = trunc i8 %233 to i1
  br i1 %234, label %270, label %235

235:                                              ; preds = %230
  %236 = load i32, i32* %29, align 4
  %237 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %238 = load i32, i32* %237, align 8
  %239 = xor i32 %238, -1
  %240 = and i32 %236, %239
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %242, label %247

242:                                              ; preds = %235
  %243 = call i32 @cached_umask()
  %244 = xor i32 %243, -1
  %245 = load i32, i32* %29, align 4
  %246 = and i32 %245, %244
  store i32 %246, i32* %29, align 4
  br label %247

247:                                              ; preds = %242, %235
  %248 = load i32, i32* %29, align 4
  %249 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %250 = load i32, i32* %249, align 8
  %251 = xor i32 %250, -1
  %252 = and i32 %248, %251
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %259, label %254

254:                                              ; preds = %247
  %255 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %256 = load i32, i32* %255, align 8
  %257 = and i32 %256, 448
  %258 = icmp ne i32 %257, 448
  br i1 %258, label %259, label %269

259:                                              ; preds = %254, %247
  %260 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %261 = load i32, i32* %260, align 8
  %262 = load i32, i32* %29, align 4
  %263 = or i32 %261, %262
  %264 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %265 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %264, i32 0, i32 0
  %266 = getelementptr inbounds %struct.stat, %struct.stat* %265, i32 0, i32 3
  store i32 %263, i32* %266, align 8
  %267 = load %struct.dir_attr*, %struct.dir_attr** %24, align 8
  %268 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %267, i32 0, i32 1
  store i8 1, i8* %268, align 8
  br label %269

269:                                              ; preds = %259, %254
  br label %270

270:                                              ; preds = %269, %230
  %271 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %272 = load i32, i32* %271, align 8
  %273 = and i32 %272, 448
  %274 = icmp ne i32 %273, 448
  br i1 %274, label %275, label %289

275:                                              ; preds = %270
  %276 = load i8*, i8** %15, align 8
  %277 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %278 = load i32, i32* %277, align 8
  %279 = or i32 %278, 448
  %280 = call i32 @chmod(i8* %276, i32 %279) #13
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %282, label %288

282:                                              ; preds = %275
  %283 = call i32* @__errno_location() #16
  %284 = load i32, i32* %283, align 4
  %285 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i64 0, i64 0)) #13
  %286 = load i8*, i8** %15, align 8
  %287 = call i8* @quotearg_style(i32 4, i8* %286)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %284, i8* %285, i8* %287)
  store i1 false, i1* %7, align 1
  br label %357

288:                                              ; preds = %275
  br label %289

289:                                              ; preds = %288, %270
  br label %302

290:                                              ; preds = %162
  %291 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %292 = load i32, i32* %291, align 8
  %293 = and i32 %292, 61440
  %294 = icmp eq i32 %293, 16384
  br i1 %294, label %299, label %295

295:                                              ; preds = %290
  %296 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.111, i64 0, i64 0)) #13
  %297 = load i8*, i8** %15, align 8
  %298 = call i8* @quotearg_style(i32 4, i8* %297)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %296, i8* %298)
  store i1 false, i1* %7, align 1
  br label %357

299:                                              ; preds = %290
  %300 = load i8*, i8** %12, align 8
  store i8 0, i8* %300, align 1
  br label %301

301:                                              ; preds = %299
  br label %302

302:                                              ; preds = %301, %289
  %303 = load i8*, i8** %12, align 8
  %304 = load i8, i8* %303, align 1
  %305 = trunc i8 %304 to i1
  br i1 %305, label %331, label %306

306:                                              ; preds = %302
  %307 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %307, i32 0, i32 18
  %309 = load i8, i8* %308, align 1
  %310 = trunc i8 %309 to i1
  br i1 %310, label %316, label %311

311:                                              ; preds = %306
  %312 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %313 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %312, i32 0, i32 22
  %314 = load i8, i8* %313, align 1
  %315 = trunc i8 %314 to i1
  br i1 %315, label %316, label %331

316:                                              ; preds = %311, %306
  %317 = load i8*, i8** %15, align 8
  %318 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %319 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %318, i32 0, i32 22
  %320 = load i8, i8* %319, align 1
  %321 = trunc i8 %320 to i1
  %322 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %323 = call zeroext i1 @set_file_security_ctx(i8* %317, i1 zeroext %321, i1 zeroext false, %struct.cp_options* %322)
  br i1 %323, label %330, label %324

324:                                              ; preds = %316
  %325 = load %struct.cp_options*, %struct.cp_options** %13, align 8
  %326 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %325, i32 0, i32 23
  %327 = load i8, i8* %326, align 2
  %328 = trunc i8 %327 to i1
  br i1 %328, label %329, label %330

329:                                              ; preds = %324
  store i1 false, i1* %7, align 1
  br label %357

330:                                              ; preds = %324, %316
  br label %331

331:                                              ; preds = %330, %311, %302
  %332 = load i8*, i8** %23, align 8
  %333 = getelementptr inbounds i8, i8* %332, i32 1
  store i8* %333, i8** %23, align 8
  store i8 47, i8* %332, align 1
  br label %334

334:                                              ; preds = %339, %331
  %335 = load i8*, i8** %23, align 8
  %336 = load i8, i8* %335, align 1
  %337 = sext i8 %336 to i32
  %338 = icmp eq i32 %337, 47
  br i1 %338, label %339, label %342

339:                                              ; preds = %334
  %340 = load i8*, i8** %23, align 8
  %341 = getelementptr inbounds i8, i8* %340, i32 1
  store i8* %341, i8** %23, align 8
  br label %334, !llvm.loop !12

342:                                              ; preds = %334
  br label %72, !llvm.loop !13

343:                                              ; preds = %72
  br label %356

344:                                              ; preds = %42
  %345 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %346 = load i32, i32* %345, align 8
  %347 = and i32 %346, 61440
  %348 = icmp eq i32 %347, 16384
  br i1 %348, label %353, label %349

349:                                              ; preds = %344
  %350 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.111, i64 0, i64 0)) #13
  %351 = load i8*, i8** %17, align 8
  %352 = call i8* @quotearg_style(i32 4, i8* %351)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %350, i8* %352)
  store i1 false, i1* %7, align 1
  br label %357

353:                                              ; preds = %344
  %354 = load i8*, i8** %12, align 8
  store i8 0, i8* %354, align 1
  br label %355

355:                                              ; preds = %353
  br label %356

356:                                              ; preds = %355, %343
  store i1 true, i1* %7, align 1
  br label %357

357:                                              ; preds = %356, %349, %329, %295, %282, %224, %205, %161, %117
  %358 = load i1, i1* %7, align 1
  ret i1 %358
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @re_protect(i8* %0, i64 %1, %struct.dir_attr* %2, %struct.cp_options* %3) #3 {
  %5 = alloca i1, align 1
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.dir_attr*, align 8
  %9 = alloca %struct.cp_options*, align 8
  %10 = alloca %struct.dir_attr*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca [2 x %struct.timespec], align 16
  %18 = alloca %struct.timespec, align 8
  %19 = alloca %struct.timespec, align 8
  %20 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store %struct.dir_attr* %2, %struct.dir_attr** %8, align 8
  store %struct.cp_options* %3, %struct.cp_options** %9, align 8
  br label %21

21:                                               ; preds = %4
  %22 = load i8*, i8** %6, align 8
  store i8* %22, i8** %13, align 8
  %23 = load i8*, i8** %13, align 8
  %24 = call i64 @strlen(i8* %23) #15
  %25 = add i64 %24, 1
  store i64 %25, i64* %14, align 8
  %26 = load i64, i64* %14, align 8
  %27 = alloca i8, i64 %26, align 16
  store i8* %27, i8** %15, align 8
  %28 = load i8*, i8** %15, align 8
  %29 = load i8*, i8** %13, align 8
  %30 = load i64, i64* %14, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false)
  store i8* %28, i8** %16, align 8
  %31 = load i8*, i8** %16, align 8
  store i8* %31, i8** %11, align 8
  br label %32

32:                                               ; preds = %21
  %33 = load i8*, i8** %11, align 8
  %34 = load i64, i64* %7, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  store i8* %35, i8** %12, align 8
  %36 = load %struct.dir_attr*, %struct.dir_attr** %8, align 8
  store %struct.dir_attr* %36, %struct.dir_attr** %10, align 8
  br label %37

37:                                               ; preds = %162, %32
  %38 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %39 = icmp ne %struct.dir_attr* %38, null
  br i1 %39, label %40, label %166

40:                                               ; preds = %37
  %41 = load i8*, i8** %11, align 8
  %42 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %43 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %42, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 %44
  store i8 0, i8* %45, align 1
  %46 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %47 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 16
  %48 = load i8, i8* %47, align 1
  %49 = trunc i8 %48 to i1
  br i1 %49, label %50, label %84

50:                                               ; preds = %40
  %51 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %17, i64 0, i64 0
  %52 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %53 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %52, i32 0, i32 0
  %54 = call { i64, i64 } @get_stat_atime(%struct.stat* %53) #15
  %55 = bitcast %struct.timespec* %18 to { i64, i64 }*
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 0
  %57 = extractvalue { i64, i64 } %54, 0
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %55, i32 0, i32 1
  %59 = extractvalue { i64, i64 } %54, 1
  store i64 %59, i64* %58, align 8
  %60 = bitcast %struct.timespec* %51 to i8*
  %61 = bitcast %struct.timespec* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %60, i8* align 8 %61, i64 16, i1 false)
  %62 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %17, i64 0, i64 1
  %63 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %64 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %63, i32 0, i32 0
  %65 = call { i64, i64 } @get_stat_mtime(%struct.stat* %64) #15
  %66 = bitcast %struct.timespec* %19 to { i64, i64 }*
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 0
  %68 = extractvalue { i64, i64 } %65, 0
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 1
  %70 = extractvalue { i64, i64 } %65, 1
  store i64 %70, i64* %69, align 8
  %71 = bitcast %struct.timespec* %62 to i8*
  %72 = bitcast %struct.timespec* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %71, i8* align 8 %72, i64 16, i1 false)
  %73 = load i8*, i8** %11, align 8
  %74 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %17, i64 0, i64 0
  %75 = call i32 @utimens(i8* %73, %struct.timespec* %74)
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %50
  %78 = call i32* @__errno_location() #16
  %79 = load i32, i32* %78, align 4
  %80 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.112, i64 0, i64 0)) #13
  %81 = load i8*, i8** %11, align 8
  %82 = call i8* @quotearg_style(i32 4, i8* %81)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %79, i8* %80, i8* %82)
  store i1 false, i1* %5, align 1
  br label %167

83:                                               ; preds = %50
  br label %84

84:                                               ; preds = %83, %40
  %85 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %85, i32 0, i32 14
  %87 = load i8, i8* %86, align 1
  %88 = trunc i8 %87 to i1
  br i1 %88, label %89, label %119

89:                                               ; preds = %84
  %90 = load i8*, i8** %11, align 8
  %91 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %92 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %91, i32 0, i32 0
  %93 = getelementptr inbounds %struct.stat, %struct.stat* %92, i32 0, i32 4
  %94 = load i32, i32* %93, align 4
  %95 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %96 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %95, i32 0, i32 0
  %97 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 5
  %98 = load i32, i32* %97, align 8
  %99 = call i32 @lchown(i8* %90, i32 %94, i32 %98) #13
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %118

101:                                              ; preds = %89
  %102 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %103 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %102) #15
  br i1 %103, label %110, label %104

104:                                              ; preds = %101
  %105 = call i32* @__errno_location() #16
  %106 = load i32, i32* %105, align 4
  %107 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.113, i64 0, i64 0)) #13
  %108 = load i8*, i8** %11, align 8
  %109 = call i8* @quotearg_style(i32 4, i8* %108)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %106, i8* %107, i8* %109)
  store i1 false, i1* %5, align 1
  br label %167

110:                                              ; preds = %101
  %111 = load i8*, i8** %11, align 8
  %112 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %113 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %112, i32 0, i32 0
  %114 = getelementptr inbounds %struct.stat, %struct.stat* %113, i32 0, i32 5
  %115 = load i32, i32* %114, align 8
  %116 = call i32 @lchown(i8* %111, i32 -1, i32 %115) #13
  store i32 %116, i32* %20, align 4
  %117 = load i32, i32* %20, align 4
  br label %118

118:                                              ; preds = %110, %89
  br label %119

119:                                              ; preds = %118, %84
  %120 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %121 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %120, i32 0, i32 15
  %122 = load i8, i8* %121, align 2
  %123 = trunc i8 %122 to i1
  br i1 %123, label %124, label %135

124:                                              ; preds = %119
  %125 = load i8*, i8** %12, align 8
  %126 = load i8*, i8** %11, align 8
  %127 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %128 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %127, i32 0, i32 0
  %129 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3
  %130 = load i32, i32* %129, align 8
  %131 = call i32 @copy_acl(i8* %125, i32 -1, i8* %126, i32 -1, i32 %130)
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %124
  store i1 false, i1* %5, align 1
  br label %167

134:                                              ; preds = %124
  br label %156

135:                                              ; preds = %119
  %136 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %137 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %136, i32 0, i32 1
  %138 = load i8, i8* %137, align 8
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %155

140:                                              ; preds = %135
  %141 = load i8*, i8** %11, align 8
  %142 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %143 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %142, i32 0, i32 0
  %144 = getelementptr inbounds %struct.stat, %struct.stat* %143, i32 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = call i32 @chmod(i8* %141, i32 %145) #13
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %140
  %149 = call i32* @__errno_location() #16
  %150 = load i32, i32* %149, align 4
  %151 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.114, i64 0, i64 0)) #13
  %152 = load i8*, i8** %11, align 8
  %153 = call i8* @quotearg_style(i32 4, i8* %152)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %150, i8* %151, i8* %153)
  store i1 false, i1* %5, align 1
  br label %167

154:                                              ; preds = %140
  br label %155

155:                                              ; preds = %154, %135
  br label %156

156:                                              ; preds = %155, %134
  %157 = load i8*, i8** %11, align 8
  %158 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %159 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %158, i32 0, i32 2
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds i8, i8* %157, i64 %160
  store i8 47, i8* %161, align 1
  br label %162

162:                                              ; preds = %156
  %163 = load %struct.dir_attr*, %struct.dir_attr** %10, align 8
  %164 = getelementptr inbounds %struct.dir_attr, %struct.dir_attr* %163, i32 0, i32 3
  %165 = load %struct.dir_attr*, %struct.dir_attr** %164, align 8
  store %struct.dir_attr* %165, %struct.dir_attr** %10, align 8
  br label %37, !llvm.loop !14

166:                                              ; preds = %37
  store i1 true, i1* %5, align 1
  br label %167

167:                                              ; preds = %166, %148, %133, %104, %77
  %168 = load i1, i1* %5, align 1
  ret i1 %168
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #6

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #1

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #4

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_process_security_ctx(i8* %0, i8* %1, i32 %2, i1 zeroext %3, %struct.cp_options* %4) #3 {
  %6 = alloca i1, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.cp_options*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8*, align 8
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  %15 = zext i1 %3 to i8
  store i8 %15, i8* %10, align 1
  store %struct.cp_options* %4, %struct.cp_options** %11, align 8
  %16 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %17 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 22
  %18 = load i8, i8* %17, align 1
  %19 = trunc i8 %18 to i1
  br i1 %19, label %20, label %101

20:                                               ; preds = %5
  %21 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %22 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 20
  %23 = load i8, i8* %22, align 1
  %24 = trunc i8 %23 to i1
  br i1 %24, label %25, label %30

25:                                               ; preds = %20
  %26 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %27 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 23
  %28 = load i8, i8* %27, align 2
  %29 = trunc i8 %28 to i1
  br label %30

30:                                               ; preds = %25, %20
  %31 = phi i1 [ true, %20 ], [ %29, %25 ]
  %32 = zext i1 %31 to i8
  store i8 %32, i8* %12, align 1
  %33 = load i8, i8* %12, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %37 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 26
  %38 = load i8, i8* %37, align 1
  %39 = trunc i8 %38 to i1
  %40 = xor i1 %39, true
  br label %41

41:                                               ; preds = %35, %30
  %42 = phi i1 [ false, %30 ], [ %40, %35 ]
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %13, align 1
  %44 = load i8*, i8** %7, align 8
  %45 = call i32 @lgetfilecon(i8* %44, i8** %14)
  %46 = icmp sle i32 0, %45
  br i1 %46, label %47, label %77

47:                                               ; preds = %41
  %48 = load i8*, i8** %14, align 8
  %49 = call i32 @setfscreatecon(i8* %48)
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %47
  %52 = load i8, i8* %12, align 1
  %53 = trunc i8 %52 to i1
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = load i8, i8* %13, align 1
  %56 = trunc i8 %55 to i1
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = call i32* @__errno_location() #16
  %59 = load i32, i32* %58, align 4
  %60 = call zeroext i1 @errno_unsupported(i32 %59)
  br i1 %60, label %67, label %61

61:                                               ; preds = %57, %51
  %62 = call i32* @__errno_location() #16
  %63 = load i32, i32* %62, align 4
  %64 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.115, i64 0, i64 0)) #13
  %65 = load i8*, i8** %14, align 8
  %66 = call i8* @quote(i8* %65)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %63, i8* %64, i8* %66)
  br label %67

67:                                               ; preds = %61, %57, %54
  %68 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %69 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 23
  %70 = load i8, i8* %69, align 2
  %71 = trunc i8 %70 to i1
  br i1 %71, label %72, label %74

72:                                               ; preds = %67
  %73 = load i8*, i8** %14, align 8
  call void @freecon(i8* %73)
  store i1 false, i1* %6, align 1
  br label %127

74:                                               ; preds = %67
  br label %75

75:                                               ; preds = %74, %47
  %76 = load i8*, i8** %14, align 8
  call void @freecon(i8* %76)
  br label %100

77:                                               ; preds = %41
  %78 = load i8, i8* %12, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = load i8, i8* %13, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %93

83:                                               ; preds = %80
  %84 = call i32* @__errno_location() #16
  %85 = load i32, i32* %84, align 4
  %86 = call zeroext i1 @errno_unsupported(i32 %85)
  br i1 %86, label %93, label %87

87:                                               ; preds = %83, %77
  %88 = call i32* @__errno_location() #16
  %89 = load i32, i32* %88, align 4
  %90 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.116, i64 0, i64 0)) #13
  %91 = load i8*, i8** %7, align 8
  %92 = call i8* @quotearg_style(i32 4, i8* %91)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %89, i8* %90, i8* %92)
  br label %93

93:                                               ; preds = %87, %83, %80
  %94 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %95 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 23
  %96 = load i8, i8* %95, align 2
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  store i1 false, i1* %6, align 1
  br label %127

99:                                               ; preds = %93
  br label %100

100:                                              ; preds = %99, %75
  br label %126

101:                                              ; preds = %5
  %102 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %103 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %102, i32 0, i32 18
  %104 = load i8, i8* %103, align 1
  %105 = trunc i8 %104 to i1
  br i1 %105, label %106, label %125

106:                                              ; preds = %101
  %107 = load i8, i8* %10, align 1
  %108 = trunc i8 %107 to i1
  br i1 %108, label %109, label %124

109:                                              ; preds = %106
  %110 = load i8*, i8** %8, align 8
  %111 = load i32, i32* %9, align 4
  %112 = call i32 @defaultcon(i8* %110, i32 %111)
  %113 = icmp slt i32 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %109
  %115 = call i32* @__errno_location() #16
  %116 = load i32, i32* %115, align 4
  %117 = call zeroext i1 @ignorable_ctx_err(i32 %116)
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = call i32* @__errno_location() #16
  %120 = load i32, i32* %119, align 4
  %121 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.117, i64 0, i64 0)) #13
  %122 = load i8*, i8** %8, align 8
  %123 = call i8* @quotearg_style(i32 4, i8* %122)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %120, i8* %121, i8* %123)
  br label %124

124:                                              ; preds = %118, %114, %109, %106
  br label %125

125:                                              ; preds = %124, %101
  br label %126

126:                                              ; preds = %125, %100
  store i1 true, i1* %6, align 1
  br label %127

127:                                              ; preds = %126, %98, %72
  %128 = load i1, i1* %6, align 1
  ret i1 %128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %0) #3 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 95
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 61
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = call i32* @__errno_location() #16
  store i32 95, i32* %5, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %0) #3 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 95
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 61
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @set_file_security_ctx(i8* %0, i1 zeroext %1, i1 zeroext %2, %struct.cp_options* %3) #3 {
  %5 = alloca i1, align 1
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %struct.cp_options*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store i8* %0, i8** %6, align 8
  %12 = zext i1 %1 to i8
  store i8 %12, i8* %7, align 1
  %13 = zext i1 %2 to i8
  store i8 %13, i8* %8, align 1
  store %struct.cp_options* %3, %struct.cp_options** %9, align 8
  %14 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %15 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 20
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  br i1 %17, label %18, label %23

18:                                               ; preds = %4
  %19 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 23
  %21 = load i8, i8* %20, align 2
  %22 = trunc i8 %21 to i1
  br label %23

23:                                               ; preds = %18, %4
  %24 = phi i1 [ true, %4 ], [ %22, %18 ]
  %25 = zext i1 %24 to i8
  store i8 %25, i8* %10, align 1
  %26 = load i8, i8* %10, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = load %struct.cp_options*, %struct.cp_options** %9, align 8
  %30 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 26
  %31 = load i8, i8* %30, align 1
  %32 = trunc i8 %31 to i1
  %33 = xor i1 %32, true
  br label %34

34:                                               ; preds = %28, %23
  %35 = phi i1 [ false, %23 ], [ %33, %28 ]
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %11, align 1
  %37 = load i8*, i8** %6, align 8
  %38 = load i8, i8* %8, align 1
  %39 = trunc i8 %38 to i1
  %40 = load i8, i8* %7, align 1
  %41 = trunc i8 %40 to i1
  %42 = call zeroext i1 @restorecon(i8* %37, i1 zeroext %39, i1 zeroext %41)
  br i1 %42, label %60, label %43

43:                                               ; preds = %34
  %44 = load i8, i8* %10, align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %53, label %46

46:                                               ; preds = %43
  %47 = load i8, i8* %11, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %59

49:                                               ; preds = %46
  %50 = call i32* @__errno_location() #16
  %51 = load i32, i32* %50, align 4
  %52 = call zeroext i1 @errno_unsupported(i32 %51)
  br i1 %52, label %59, label %53

53:                                               ; preds = %49, %43
  %54 = call i32* @__errno_location() #16
  %55 = load i32, i32* %54, align 4
  %56 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.120, i64 0, i64 0)) #13
  %57 = load i8*, i8** %6, align 8
  %58 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %57)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %55, i8* %56, i8* %58)
  br label %59

59:                                               ; preds = %53, %49, %46
  store i1 false, i1* %5, align 1
  br label %61

60:                                               ; preds = %34
  store i1 true, i1* %5, align 1
  br label %61

61:                                               ; preds = %60, %59
  %62 = load i1, i1* %5, align 1
  ret i1 %62
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %0, i1 zeroext %1, i1 zeroext %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  %7 = zext i1 %1 to i8
  store i8 %7, i8* %5, align 1
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  %9 = call i32* @__errno_location() #16
  store i32 95, i32* %9, align 4
  ret i1 false
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dest_info_init(%struct.cp_options* %0) #3 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free)
  %4 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 37
  store %struct.hash_table* %3, %struct.hash_table** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_info_init(%struct.cp_options* %0) #3 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free)
  %4 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 38
  store %struct.hash_table* %3, %struct.hash_table** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext %2, %struct.cp_options* %3, i8* %4, i8* %5) #3 {
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.cp_options*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  %14 = zext i1 %2 to i8
  store i8 %14, i8* %9, align 1
  store %struct.cp_options* %3, %struct.cp_options** %10, align 8
  store i8* %4, i8** %11, align 8
  store i8* %5, i8** %12, align 8
  %15 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %16 = call zeroext i1 @valid_options(%struct.cp_options* %15) #15
  br i1 %16, label %17, label %18

17:                                               ; preds = %6
  br label %19

18:                                               ; preds = %6
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.127, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2974, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #14
  unreachable

19:                                               ; preds = %17
  %20 = load i8*, i8** %7, align 8
  store i8* %20, i8** @top_level_src_name, align 8
  %21 = load i8*, i8** %8, align 8
  store i8* %21, i8** @top_level_dst_name, align 8
  store i8 0, i8* %13, align 1
  %22 = load i8*, i8** %7, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = load i8, i8* %9, align 1
  %25 = trunc i8 %24 to i1
  %26 = load %struct.cp_options*, %struct.cp_options** %10, align 8
  %27 = load i8*, i8** %11, align 8
  %28 = load i8*, i8** %12, align 8
  %29 = call zeroext i1 @copy_internal(i8* %22, i8* %23, i1 zeroext %25, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %26, i1 zeroext true, i8* %13, i8* %27, i8* %28)
  ret i1 %29
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %0) #8 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %4 = icmp ne %struct.cp_options* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %7

6:                                                ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.198, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2949, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

7:                                                ; preds = %5
  %8 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ule i32 %10, 3
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  br label %14

13:                                               ; preds = %7
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.199, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2950, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

14:                                               ; preds = %12
  %15 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %29, label %19

19:                                               ; preds = %14
  %20 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %21 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %26 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %30

29:                                               ; preds = %24, %19, %14
  br label %31

30:                                               ; preds = %24
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.200, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2951, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

31:                                               ; preds = %29
  %32 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %33 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 36
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %38 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 36
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %46, label %41

41:                                               ; preds = %36
  %42 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %43 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 36
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %46, label %47

46:                                               ; preds = %41, %36, %31
  br label %48

47:                                               ; preds = %41
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.201, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

48:                                               ; preds = %46
  %49 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %50 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 8
  %51 = load i8, i8* %50, align 1
  %52 = trunc i8 %51 to i1
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %55 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 29
  %56 = load i8, i8* %55, align 4
  %57 = trunc i8 %56 to i1
  br i1 %57, label %59, label %58

58:                                               ; preds = %53, %48
  br label %60

59:                                               ; preds = %53
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.202, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2953, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

60:                                               ; preds = %58
  %61 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %62 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 36
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 2
  br i1 %69, label %71, label %70

70:                                               ; preds = %65, %60
  br label %72

71:                                               ; preds = %65
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.203, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 2956, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #14
  unreachable

72:                                               ; preds = %70
  ret i1 true
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %0, i8* %1, i1 zeroext %2, %struct.stat* %3, %struct.dir_list* %4, %struct.cp_options* %5, i1 zeroext %6, i8* %7, i8* %8, i8* %9) #3 {
  %11 = alloca i1, align 1
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8, align 1
  %15 = alloca %struct.stat*, align 8
  %16 = alloca %struct.dir_list*, align 8
  %17 = alloca %struct.cp_options*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.stat, align 8
  %23 = alloca %struct.stat, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8, align 1
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i32, align 4
  %36 = alloca i8*, align 8
  %37 = alloca i8, align 1
  %38 = alloca i8, align 1
  %39 = alloca i32, align 4
  %40 = alloca i8, align 1
  %41 = alloca i32, align 4
  %42 = alloca i8*, align 8
  %43 = alloca i8*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca i8*, align 8
  %46 = alloca i64, align 8
  %47 = alloca i8*, align 8
  %48 = alloca i8*, align 8
  %49 = alloca i8, align 1
  %50 = alloca %struct.stat, align 8
  %51 = alloca %struct.stat*, align 8
  %52 = alloca %struct.dir_list*, align 8
  %53 = alloca %struct.stat, align 8
  %54 = alloca %struct.stat, align 8
  %55 = alloca i8*, align 8
  %56 = alloca i8, align 1
  %57 = alloca i8*, align 8
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i8*, align 8
  %61 = alloca %struct.stat, align 8
  %62 = alloca [2 x %struct.timespec], align 16
  %63 = alloca %struct.timespec, align 8
  %64 = alloca %struct.timespec, align 8
  %65 = alloca i32, align 4
  store i8* %0, i8** %12, align 8
  store i8* %1, i8** %13, align 8
  %66 = zext i1 %2 to i8
  store i8 %66, i8* %14, align 1
  store %struct.stat* %3, %struct.stat** %15, align 8
  store %struct.dir_list* %4, %struct.dir_list** %16, align 8
  store %struct.cp_options* %5, %struct.cp_options** %17, align 8
  %67 = zext i1 %6 to i8
  store i8 %67, i8* %18, align 1
  store i8* %7, i8** %19, align 8
  store i8* %8, i8** %20, align 8
  store i8* %9, i8** %21, align 8
  store i8 0, i8* %28, align 1
  store i8* null, i8** %29, align 8
  store i8* null, i8** %30, align 8
  store i8 0, i8* %32, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %34, align 1
  %68 = load i8*, i8** %20, align 8
  store i8 0, i8* %68, align 1
  %69 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %70 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %69, i32 0, i32 35
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %35, align 4
  %72 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %72, i32 0, i32 9
  %74 = load i8, i8* %73, align 8
  %75 = trunc i8 %74 to i1
  br i1 %75, label %76, label %102

76:                                               ; preds = %10
  %77 = load i32, i32* %35, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %76
  %80 = load i8*, i8** %12, align 8
  %81 = load i8*, i8** %13, align 8
  %82 = call i32 @renameat2(i32 -100, i8* %80, i32 -100, i8* %81, i32 1) #13
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = call i32* @__errno_location() #16
  %86 = load i32, i32* %85, align 4
  br label %88

87:                                               ; preds = %79
  br label %88

88:                                               ; preds = %87, %84
  %89 = phi i32 [ %86, %84 ], [ 0, %87 ]
  store i32 %89, i32* %35, align 4
  br label %90

90:                                               ; preds = %88, %76
  %91 = load i32, i32* %35, align 4
  %92 = icmp eq i32 %91, 0
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %14, align 1
  %94 = load i8*, i8** %21, align 8
  %95 = icmp ne i8* %94, null
  br i1 %95, label %96, label %101

96:                                               ; preds = %90
  %97 = load i8, i8* %14, align 1
  %98 = trunc i8 %97 to i1
  %99 = load i8*, i8** %21, align 8
  %100 = zext i1 %98 to i8
  store i8 %100, i8* %99, align 1
  br label %101

101:                                              ; preds = %96, %90
  br label %102

102:                                              ; preds = %101, %10
  %103 = load i32, i32* %35, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %102
  %106 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %107 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %106, i32 0, i32 34
  %108 = load i8, i8* %107, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %171, label %118

110:                                              ; preds = %102
  %111 = load i32, i32* %35, align 4
  %112 = icmp ne i32 %111, 17
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %115 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %114, i32 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = icmp ne i32 %116, 2
  br i1 %117, label %118, label %171

118:                                              ; preds = %113, %110, %105
  %119 = load i32, i32* %35, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  %122 = load i8*, i8** %13, align 8
  br label %125

123:                                              ; preds = %118
  %124 = load i8*, i8** %12, align 8
  br label %125

125:                                              ; preds = %123, %121
  %126 = phi i8* [ %122, %121 ], [ %124, %123 ]
  store i8* %126, i8** %36, align 8
  %127 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %128 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %134

131:                                              ; preds = %125
  %132 = load i8*, i8** %36, align 8
  %133 = call i32 @lstat(i8* %132, %struct.stat* %22) #13
  br label %137

134:                                              ; preds = %125
  %135 = load i8*, i8** %36, align 8
  %136 = call i32 @stat(i8* %135, %struct.stat* %22) #13
  br label %137

137:                                              ; preds = %134, %131
  %138 = phi i32 [ %133, %131 ], [ %136, %134 ]
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %137
  %141 = call i32* @__errno_location() #16
  %142 = load i32, i32* %141, align 4
  %143 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.129, i64 0, i64 0)) #13
  %144 = load i8*, i8** %36, align 8
  %145 = call i8* @quotearg_style(i32 4, i8* %144)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %142, i8* %143, i8* %145)
  store i1 false, i1* %11, align 1
  br label %1864

146:                                              ; preds = %137
  %147 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %24, align 4
  %149 = load i32, i32* %24, align 4
  %150 = and i32 %149, 61440
  %151 = icmp eq i32 %150, 16384
  br i1 %151, label %152, label %170

152:                                              ; preds = %146
  %153 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %154 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %153, i32 0, i32 27
  %155 = load i8, i8* %154, align 2
  %156 = trunc i8 %155 to i1
  br i1 %156, label %170, label %157

157:                                              ; preds = %152
  %158 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %159 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %158, i32 0, i32 10
  %160 = load i8, i8* %159, align 1
  %161 = trunc i8 %160 to i1
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  %163 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.130, i64 0, i64 0)) #13
  br label %166

164:                                              ; preds = %157
  %165 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.131, i64 0, i64 0)) #13
  br label %166

166:                                              ; preds = %164, %162
  %167 = phi i8* [ %163, %162 ], [ %165, %164 ]
  %168 = load i8*, i8** %12, align 8
  %169 = call i8* @quotearg_style(i32 4, i8* %168)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %167, i8* %169)
  store i1 false, i1* %11, align 1
  br label %1864

170:                                              ; preds = %152, %146
  br label %171

171:                                              ; preds = %170, %113, %105
  %172 = load i8, i8* %18, align 1
  %173 = trunc i8 %172 to i1
  br i1 %173, label %174, label %203

174:                                              ; preds = %171
  %175 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %176 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %175, i32 0, i32 38
  %177 = load %struct.hash_table*, %struct.hash_table** %176, align 8
  %178 = icmp ne %struct.hash_table* %177, null
  br i1 %178, label %179, label %203

179:                                              ; preds = %174
  %180 = load i32, i32* %24, align 4
  %181 = and i32 %180, 61440
  %182 = icmp eq i32 %181, 16384
  br i1 %182, label %198, label %183

183:                                              ; preds = %179
  %184 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %184, i32 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %198

188:                                              ; preds = %183
  %189 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %190 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %189, i32 0, i32 38
  %191 = load %struct.hash_table*, %struct.hash_table** %190, align 8
  %192 = load i8*, i8** %12, align 8
  %193 = call zeroext i1 @seen_file(%struct.hash_table* %191, i8* %192, %struct.stat* %22)
  br i1 %193, label %194, label %198

194:                                              ; preds = %188
  %195 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.132, i64 0, i64 0)) #13
  %196 = load i8*, i8** %12, align 8
  %197 = call i8* @quotearg_style(i32 4, i8* %196)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %195, i8* %197)
  store i1 true, i1* %11, align 1
  br label %1864

198:                                              ; preds = %188, %183, %179
  %199 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %200 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 38
  %201 = load %struct.hash_table*, %struct.hash_table** %200, align 8
  %202 = load i8*, i8** %12, align 8
  call void @record_file(%struct.hash_table* %201, i8* %202, %struct.stat* %22)
  br label %203

203:                                              ; preds = %198, %174, %171
  %204 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %205 = load i8, i8* %18, align 1
  %206 = trunc i8 %205 to i1
  %207 = call zeroext i1 @should_dereference(%struct.cp_options* %204, i1 zeroext %206) #15
  %208 = zext i1 %207 to i8
  store i8 %208, i8* %37, align 1
  %209 = load i8, i8* %14, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %664, label %211

211:                                              ; preds = %203
  %212 = load i32, i32* %35, align 4
  %213 = icmp eq i32 %212, 17
  br i1 %213, label %214, label %219

214:                                              ; preds = %211
  %215 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %216 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %215, i32 0, i32 2
  %217 = load i32, i32* %216, align 8
  %218 = icmp eq i32 %217, 2
  br i1 %218, label %300, label %219

219:                                              ; preds = %214, %211
  %220 = load i32, i32* %24, align 4
  %221 = and i32 %220, 61440
  %222 = icmp eq i32 %221, 32768
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %225 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %224, i32 0, i32 5
  %226 = load i8, i8* %225, align 4
  %227 = trunc i8 %226 to i1
  br i1 %227, label %228, label %261

228:                                              ; preds = %223
  %229 = load i32, i32* %24, align 4
  %230 = and i32 %229, 61440
  %231 = icmp eq i32 %230, 16384
  br i1 %231, label %261, label %232

232:                                              ; preds = %228
  %233 = load i32, i32* %24, align 4
  %234 = and i32 %233, 61440
  %235 = icmp eq i32 %234, 40960
  br i1 %235, label %261, label %236

236:                                              ; preds = %232, %219
  %237 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %238 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %237, i32 0, i32 9
  %239 = load i8, i8* %238, align 8
  %240 = trunc i8 %239 to i1
  br i1 %240, label %261, label %241

241:                                              ; preds = %236
  %242 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %243 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %242, i32 0, i32 29
  %244 = load i8, i8* %243, align 4
  %245 = trunc i8 %244 to i1
  br i1 %245, label %261, label %246

246:                                              ; preds = %241
  %247 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %248 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %247, i32 0, i32 8
  %249 = load i8, i8* %248, align 1
  %250 = trunc i8 %249 to i1
  br i1 %250, label %261, label %251

251:                                              ; preds = %246
  %252 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %253 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = icmp ne i32 %254, 0
  br i1 %255, label %261, label %256

256:                                              ; preds = %251
  %257 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %258 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %257, i32 0, i32 6
  %259 = load i8, i8* %258, align 1
  %260 = trunc i8 %259 to i1
  br label %261

261:                                              ; preds = %256, %251, %246, %241, %236, %232, %228, %223
  %262 = phi i1 [ true, %251 ], [ true, %246 ], [ true, %241 ], [ true, %236 ], [ true, %232 ], [ true, %228 ], [ true, %223 ], [ %260, %256 ]
  %263 = zext i1 %262 to i8
  store i8 %263, i8* %38, align 1
  %264 = load i8, i8* %38, align 1
  %265 = trunc i8 %264 to i1
  %266 = zext i1 %265 to i64
  %267 = select i1 %265, i32 256, i32 0
  store i32 %267, i32* %39, align 4
  %268 = load i8*, i8** %13, align 8
  %269 = load i32, i32* %39, align 4
  %270 = call i32 @fstatat(i32 -100, i8* %268, %struct.stat* %23, i32 %269) #13
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %276

272:                                              ; preds = %261
  %273 = load i8, i8* %38, align 1
  %274 = trunc i8 %273 to i1
  %275 = zext i1 %274 to i8
  store i8 %275, i8* %34, align 1
  store i32 17, i32* %35, align 4
  br label %299

276:                                              ; preds = %261
  %277 = call i32* @__errno_location() #16
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, 40
  br i1 %279, label %280, label %286

280:                                              ; preds = %276
  %281 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %282 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %281, i32 0, i32 7
  %283 = load i8, i8* %282, align 2
  %284 = trunc i8 %283 to i1
  br i1 %284, label %285, label %286

285:                                              ; preds = %280
  br label %298

286:                                              ; preds = %280, %276
  %287 = call i32* @__errno_location() #16
  %288 = load i32, i32* %287, align 4
  %289 = icmp ne i32 %288, 2
  br i1 %289, label %290, label %296

290:                                              ; preds = %286
  %291 = call i32* @__errno_location() #16
  %292 = load i32, i32* %291, align 4
  %293 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.129, i64 0, i64 0)) #13
  %294 = load i8*, i8** %13, align 8
  %295 = call i8* @quotearg_style(i32 4, i8* %294)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %292, i8* %293, i8* %295)
  store i1 false, i1* %11, align 1
  br label %1864

296:                                              ; preds = %286
  store i8 1, i8* %14, align 1
  br label %297

297:                                              ; preds = %296
  br label %298

298:                                              ; preds = %297, %285
  br label %299

299:                                              ; preds = %298, %272
  br label %300

300:                                              ; preds = %299, %214
  %301 = load i32, i32* %35, align 4
  %302 = icmp eq i32 %301, 17
  br i1 %302, label %303, label %663

303:                                              ; preds = %300
  store i8 0, i8* %40, align 1
  %304 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %305 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %304, i32 0, i32 2
  %306 = load i32, i32* %305, align 8
  %307 = icmp ne i32 %306, 2
  br i1 %307, label %308, label %319

308:                                              ; preds = %303
  %309 = load i8*, i8** %12, align 8
  %310 = load i8*, i8** %13, align 8
  %311 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %312 = call zeroext i1 @same_file_ok(i8* %309, %struct.stat* %22, i8* %310, %struct.stat* %23, %struct.cp_options* %311, i8* %40)
  br i1 %312, label %319, label %313

313:                                              ; preds = %308
  %314 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.133, i64 0, i64 0)) #13
  %315 = load i8*, i8** %12, align 8
  %316 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %315)
  %317 = load i8*, i8** %13, align 8
  %318 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %317)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %314, i8* %316, i8* %318)
  store i1 false, i1* %11, align 1
  br label %1864

319:                                              ; preds = %308, %303
  %320 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %321 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %320, i32 0, i32 30
  %322 = load i8, i8* %321, align 1
  %323 = trunc i8 %322 to i1
  br i1 %323, label %324, label %383

324:                                              ; preds = %319
  %325 = load i32, i32* %24, align 4
  %326 = and i32 %325, 61440
  %327 = icmp eq i32 %326, 16384
  br i1 %327, label %383, label %328

328:                                              ; preds = %324
  %329 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %330 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %329, i32 0, i32 16
  %331 = load i8, i8* %330, align 1
  %332 = trunc i8 %331 to i1
  br i1 %332, label %333, label %347

333:                                              ; preds = %328
  %334 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %334, i32 0, i32 9
  %336 = load i8, i8* %335, align 8
  %337 = trunc i8 %336 to i1
  br i1 %337, label %338, label %344

338:                                              ; preds = %333
  %339 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 0
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %342 = load i64, i64* %341, align 8
  %343 = icmp eq i64 %340, %342
  br label %344

344:                                              ; preds = %338, %333
  %345 = phi i1 [ false, %333 ], [ %343, %338 ]
  %346 = xor i1 %345, true
  br label %347

347:                                              ; preds = %344, %328
  %348 = phi i1 [ false, %328 ], [ %346, %344 ]
  %349 = zext i1 %348 to i64
  %350 = select i1 %348, i32 1, i32 0
  store i32 %350, i32* %41, align 4
  %351 = load i8*, i8** %13, align 8
  %352 = load i32, i32* %41, align 4
  %353 = call i32 @utimecmp(i8* %351, %struct.stat* %23, %struct.stat* %22, i32 %352)
  %354 = icmp sle i32 0, %353
  br i1 %354, label %355, label %382

355:                                              ; preds = %347
  %356 = load i8*, i8** %21, align 8
  %357 = icmp ne i8* %356, null
  br i1 %357, label %358, label %360

358:                                              ; preds = %355
  %359 = load i8*, i8** %21, align 8
  store i8 1, i8* %359, align 1
  br label %360

360:                                              ; preds = %358, %355
  %361 = load i8*, i8** %13, align 8
  %362 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = call i8* @remember_copied(i8* %361, i64 %363, i64 %365)
  store i8* %366, i8** %29, align 8
  %367 = load i8*, i8** %29, align 8
  %368 = icmp ne i8* %367, null
  br i1 %368, label %369, label %381

369:                                              ; preds = %360
  %370 = load i8*, i8** %29, align 8
  %371 = load i8*, i8** %13, align 8
  %372 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %373 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %372, i32 0, i32 31
  %374 = load i8, i8* %373, align 2
  %375 = trunc i8 %374 to i1
  %376 = load i8, i8* %37, align 1
  %377 = trunc i8 %376 to i1
  %378 = call zeroext i1 @create_hard_link(i8* %370, i8* %371, i1 zeroext true, i1 zeroext %375, i1 zeroext %377)
  br i1 %378, label %380, label %379

379:                                              ; preds = %369
  br label %1821

380:                                              ; preds = %369
  br label %381

381:                                              ; preds = %380, %360
  store i1 true, i1* %11, align 1
  br label %1864

382:                                              ; preds = %347
  br label %383

383:                                              ; preds = %382, %324, %319
  %384 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %385 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %384, i32 0, i32 9
  %386 = load i8, i8* %385, align 8
  %387 = trunc i8 %386 to i1
  br i1 %387, label %388, label %399

388:                                              ; preds = %383
  %389 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %390 = load i8*, i8** %13, align 8
  %391 = call zeroext i1 @abandon_move(%struct.cp_options* %389, i8* %390, %struct.stat* %23)
  br i1 %391, label %392, label %398

392:                                              ; preds = %388
  %393 = load i8*, i8** %21, align 8
  %394 = icmp ne i8* %393, null
  br i1 %394, label %395, label %397

395:                                              ; preds = %392
  %396 = load i8*, i8** %21, align 8
  store i8 1, i8* %396, align 1
  br label %397

397:                                              ; preds = %395, %392
  store i1 true, i1* %11, align 1
  br label %1864

398:                                              ; preds = %388
  br label %419

399:                                              ; preds = %383
  %400 = load i32, i32* %24, align 4
  %401 = and i32 %400, 61440
  %402 = icmp eq i32 %401, 16384
  br i1 %402, label %418, label %403

403:                                              ; preds = %399
  %404 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %405 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %404, i32 0, i32 2
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 2
  br i1 %407, label %417, label %408

408:                                              ; preds = %403
  %409 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %409, i32 0, i32 2
  %411 = load i32, i32* %410, align 8
  %412 = icmp eq i32 %411, 3
  br i1 %412, label %413, label %418

413:                                              ; preds = %408
  %414 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %415 = load i8*, i8** %13, align 8
  %416 = call zeroext i1 @overwrite_ok(%struct.cp_options* %414, i8* %415, %struct.stat* %23)
  br i1 %416, label %418, label %417

417:                                              ; preds = %413, %403
  store i1 true, i1* %11, align 1
  br label %1864

418:                                              ; preds = %413, %408, %399
  br label %419

419:                                              ; preds = %418, %398
  %420 = load i8, i8* %40, align 1
  %421 = trunc i8 %420 to i1
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  store i1 true, i1* %11, align 1
  br label %1864

423:                                              ; preds = %419
  %424 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %425 = load i32, i32* %424, align 8
  %426 = and i32 %425, 61440
  %427 = icmp eq i32 %426, 16384
  br i1 %427, label %471, label %428

428:                                              ; preds = %423
  %429 = load i32, i32* %24, align 4
  %430 = and i32 %429, 61440
  %431 = icmp eq i32 %430, 16384
  br i1 %431, label %432, label %450

432:                                              ; preds = %428
  %433 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %433, i32 0, i32 9
  %435 = load i8, i8* %434, align 8
  %436 = trunc i8 %435 to i1
  br i1 %436, label %437, label %443

437:                                              ; preds = %432
  %438 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %439 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %438, i32 0, i32 0
  %440 = load i32, i32* %439, align 8
  %441 = icmp ne i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %437
  br label %449

443:                                              ; preds = %437, %432
  %444 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.134, i64 0, i64 0)) #13
  %445 = load i8*, i8** %13, align 8
  %446 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %445)
  %447 = load i8*, i8** %12, align 8
  %448 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %447)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %444, i8* %446, i8* %448)
  store i1 false, i1* %11, align 1
  br label %1864

449:                                              ; preds = %442
  br label %450

450:                                              ; preds = %449, %428
  %451 = load i8, i8* %18, align 1
  %452 = trunc i8 %451 to i1
  br i1 %452, label %453, label %470

453:                                              ; preds = %450
  %454 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %455 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %454, i32 0, i32 0
  %456 = load i32, i32* %455, align 8
  %457 = icmp ne i32 %456, 3
  br i1 %457, label %458, label %470

458:                                              ; preds = %453
  %459 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %460 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %459, i32 0, i32 37
  %461 = load %struct.hash_table*, %struct.hash_table** %460, align 8
  %462 = load i8*, i8** %13, align 8
  %463 = call zeroext i1 @seen_file(%struct.hash_table* %461, i8* %462, %struct.stat* %23)
  br i1 %463, label %464, label %470

464:                                              ; preds = %458
  %465 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.135, i64 0, i64 0)) #13
  %466 = load i8*, i8** %13, align 8
  %467 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %466)
  %468 = load i8*, i8** %12, align 8
  %469 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %468)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %465, i8* %467, i8* %469)
  store i1 false, i1* %11, align 1
  br label %1864

470:                                              ; preds = %458, %453, %450
  br label %471

471:                                              ; preds = %470, %423
  %472 = load i32, i32* %24, align 4
  %473 = and i32 %472, 61440
  %474 = icmp eq i32 %473, 16384
  br i1 %474, label %497, label %475

475:                                              ; preds = %471
  %476 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %477 = load i32, i32* %476, align 8
  %478 = and i32 %477, 61440
  %479 = icmp eq i32 %478, 16384
  br i1 %479, label %480, label %496

480:                                              ; preds = %475
  %481 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %481, i32 0, i32 9
  %483 = load i8, i8* %482, align 8
  %484 = trunc i8 %483 to i1
  br i1 %484, label %485, label %491

485:                                              ; preds = %480
  %486 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %487 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 0
  %488 = load i32, i32* %487, align 8
  %489 = icmp ne i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %485
  br label %495

491:                                              ; preds = %485, %480
  %492 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.136, i64 0, i64 0)) #13
  %493 = load i8*, i8** %13, align 8
  %494 = call i8* @quotearg_style(i32 4, i8* %493)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %492, i8* %494)
  store i1 false, i1* %11, align 1
  br label %1864

495:                                              ; preds = %490
  br label %496

496:                                              ; preds = %495, %475
  br label %497

497:                                              ; preds = %496, %471
  %498 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %499 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %498, i32 0, i32 9
  %500 = load i8, i8* %499, align 8
  %501 = trunc i8 %500 to i1
  br i1 %501, label %502, label %524

502:                                              ; preds = %497
  %503 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3
  %504 = load i32, i32* %503, align 8
  %505 = and i32 %504, 61440
  %506 = icmp eq i32 %505, 16384
  br i1 %506, label %507, label %523

507:                                              ; preds = %502
  %508 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %509 = load i32, i32* %508, align 8
  %510 = and i32 %509, 61440
  %511 = icmp eq i32 %510, 16384
  br i1 %511, label %523, label %512

512:                                              ; preds = %507
  %513 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %514 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %513, i32 0, i32 0
  %515 = load i32, i32* %514, align 8
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %523

517:                                              ; preds = %512
  %518 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.137, i64 0, i64 0)) #13
  %519 = load i8*, i8** %12, align 8
  %520 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %519)
  %521 = load i8*, i8** %13, align 8
  %522 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %521)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %518, i8* %520, i8* %522)
  store i1 false, i1* %11, align 1
  br label %1864

523:                                              ; preds = %512, %507, %502
  br label %524

524:                                              ; preds = %523, %497
  %525 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %526 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %525, i32 0, i32 0
  %527 = load i32, i32* %526, align 8
  %528 = icmp ne i32 %527, 0
  br i1 %528, label %529, label %602

529:                                              ; preds = %524
  %530 = load i8*, i8** %12, align 8
  %531 = call i8* @last_component(i8* %530) #15
  store i8* %531, i8** %42, align 8
  %532 = call zeroext i1 @dot_or_dotdot(i8* %531)
  br i1 %532, label %602, label %533

533:                                              ; preds = %529
  %534 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %535 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %534, i32 0, i32 9
  %536 = load i8, i8* %535, align 8
  %537 = trunc i8 %536 to i1
  br i1 %537, label %543, label %538

538:                                              ; preds = %533
  %539 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %540 = load i32, i32* %539, align 8
  %541 = and i32 %540, 61440
  %542 = icmp eq i32 %541, 16384
  br i1 %542, label %602, label %543

543:                                              ; preds = %538, %533
  %544 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %545 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %544, i32 0, i32 0
  %546 = load i32, i32* %545, align 8
  %547 = icmp ne i32 %546, 3
  br i1 %547, label %548, label %568

548:                                              ; preds = %543
  %549 = load i8*, i8** %42, align 8
  %550 = load i8*, i8** %13, align 8
  %551 = call zeroext i1 @source_is_dst_backup(i8* %549, %struct.stat* %22, i8* %550)
  br i1 %551, label %552, label %568

552:                                              ; preds = %548
  %553 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %554 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %553, i32 0, i32 9
  %555 = load i8, i8* %554, align 8
  %556 = trunc i8 %555 to i1
  br i1 %556, label %557, label %559

557:                                              ; preds = %552
  %558 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.138, i64 0, i64 0)) #13
  br label %561

559:                                              ; preds = %552
  %560 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.139, i64 0, i64 0)) #13
  br label %561

561:                                              ; preds = %559, %557
  %562 = phi i8* [ %558, %557 ], [ %560, %559 ]
  store i8* %562, i8** %43, align 8
  %563 = load i8*, i8** %43, align 8
  %564 = load i8*, i8** %13, align 8
  %565 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %564)
  %566 = load i8*, i8** %12, align 8
  %567 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %566)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %563, i8* %565, i8* %567)
  store i1 false, i1* %11, align 1
  br label %1864

568:                                              ; preds = %548, %543
  %569 = load i8*, i8** %13, align 8
  %570 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %571 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %570, i32 0, i32 0
  %572 = load i32, i32* %571, align 8
  %573 = call i8* @backup_file_rename(i8* %569, i32 %572)
  store i8* %573, i8** %44, align 8
  %574 = load i8*, i8** %44, align 8
  %575 = icmp ne i8* %574, null
  br i1 %575, label %576, label %590

576:                                              ; preds = %568
  br label %577

577:                                              ; preds = %576
  %578 = load i8*, i8** %44, align 8
  store i8* %578, i8** %45, align 8
  %579 = load i8*, i8** %45, align 8
  %580 = call i64 @strlen(i8* %579) #15
  %581 = add i64 %580, 1
  store i64 %581, i64* %46, align 8
  %582 = load i64, i64* %46, align 8
  %583 = alloca i8, i64 %582, align 16
  store i8* %583, i8** %47, align 8
  %584 = load i8*, i8** %47, align 8
  %585 = load i8*, i8** %45, align 8
  %586 = load i64, i64* %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %584, i8* align 1 %585, i64 %586, i1 false)
  store i8* %584, i8** %48, align 8
  %587 = load i8*, i8** %48, align 8
  store i8* %587, i8** %30, align 8
  br label %588

588:                                              ; preds = %577
  %589 = load i8*, i8** %44, align 8
  call void @free(i8* %589) #13
  br label %601

590:                                              ; preds = %568
  %591 = call i32* @__errno_location() #16
  %592 = load i32, i32* %591, align 4
  %593 = icmp ne i32 %592, 2
  br i1 %593, label %594, label %600

594:                                              ; preds = %590
  %595 = call i32* @__errno_location() #16
  %596 = load i32, i32* %595, align 4
  %597 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.140, i64 0, i64 0)) #13
  %598 = load i8*, i8** %13, align 8
  %599 = call i8* @quotearg_style(i32 4, i8* %598)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %596, i8* %597, i8* %599)
  store i1 false, i1* %11, align 1
  br label %1864

600:                                              ; preds = %590
  br label %601

601:                                              ; preds = %600, %588
  store i8 1, i8* %14, align 1
  br label %662

602:                                              ; preds = %538, %529, %524
  %603 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %604 = load i32, i32* %603, align 8
  %605 = and i32 %604, 61440
  %606 = icmp eq i32 %605, 16384
  br i1 %606, label %661, label %607

607:                                              ; preds = %602
  %608 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %609 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %608, i32 0, i32 9
  %610 = load i8, i8* %609, align 8
  %611 = trunc i8 %610 to i1
  br i1 %611, label %661, label %612

612:                                              ; preds = %607
  %613 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %614 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %613, i32 0, i32 6
  %615 = load i8, i8* %614, align 1
  %616 = trunc i8 %615 to i1
  br i1 %616, label %636, label %617

617:                                              ; preds = %612
  %618 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %619 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %618, i32 0, i32 19
  %620 = load i8, i8* %619, align 2
  %621 = trunc i8 %620 to i1
  br i1 %621, label %622, label %626

622:                                              ; preds = %617
  %623 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 2
  %624 = load i64, i64* %623, align 8
  %625 = icmp ult i64 1, %624
  br i1 %625, label %636, label %626

626:                                              ; preds = %622, %617
  %627 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %628 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %627, i32 0, i32 1
  %629 = load i32, i32* %628, align 4
  %630 = icmp eq i32 %629, 2
  br i1 %630, label %631, label %661

631:                                              ; preds = %626
  %632 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3
  %633 = load i32, i32* %632, align 8
  %634 = and i32 %633, 61440
  %635 = icmp eq i32 %634, 32768
  br i1 %635, label %661, label %636

636:                                              ; preds = %631, %622, %612
  %637 = load i8*, i8** %13, align 8
  %638 = call i32 @unlink(i8* %637) #13
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %640, label %650

640:                                              ; preds = %636
  %641 = call i32* @__errno_location() #16
  %642 = load i32, i32* %641, align 4
  %643 = icmp ne i32 %642, 2
  br i1 %643, label %644, label %650

644:                                              ; preds = %640
  %645 = call i32* @__errno_location() #16
  %646 = load i32, i32* %645, align 4
  %647 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.141, i64 0, i64 0)) #13
  %648 = load i8*, i8** %13, align 8
  %649 = call i8* @quotearg_style(i32 4, i8* %648)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %646, i8* %647, i8* %649)
  store i1 false, i1* %11, align 1
  br label %1864

650:                                              ; preds = %640, %636
  store i8 1, i8* %14, align 1
  %651 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %652 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %651, i32 0, i32 31
  %653 = load i8, i8* %652, align 2
  %654 = trunc i8 %653 to i1
  br i1 %654, label %655, label %660

655:                                              ; preds = %650
  %656 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.142, i64 0, i64 0)) #13
  %657 = load i8*, i8** %13, align 8
  %658 = call i8* @quotearg_style(i32 4, i8* %657)
  %659 = call i32 (i8*, ...) @printf(i8* %656, i8* %658)
  br label %660

660:                                              ; preds = %655, %650
  br label %661

661:                                              ; preds = %660, %631, %626, %607, %602
  br label %662

662:                                              ; preds = %661, %601
  br label %663

663:                                              ; preds = %662, %300
  br label %664

664:                                              ; preds = %663, %203
  %665 = load i8, i8* %18, align 1
  %666 = trunc i8 %665 to i1
  br i1 %666, label %667, label %716

667:                                              ; preds = %664
  %668 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %669 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %668, i32 0, i32 37
  %670 = load %struct.hash_table*, %struct.hash_table** %669, align 8
  %671 = icmp ne %struct.hash_table* %670, null
  br i1 %671, label %672, label %716

672:                                              ; preds = %667
  %673 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %674 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %673, i32 0, i32 9
  %675 = load i8, i8* %674, align 8
  %676 = trunc i8 %675 to i1
  br i1 %676, label %716, label %677

677:                                              ; preds = %672
  %678 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %679 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %678, i32 0, i32 0
  %680 = load i32, i32* %679, align 8
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %682, label %716

682:                                              ; preds = %677
  store i8 1, i8* %49, align 1
  %683 = load i8, i8* %34, align 1
  %684 = trunc i8 %683 to i1
  br i1 %684, label %685, label %686

685:                                              ; preds = %682
  store %struct.stat* %23, %struct.stat** %51, align 8
  br label %693

686:                                              ; preds = %682
  %687 = load i8*, i8** %13, align 8
  %688 = call i32 @lstat(i8* %687, %struct.stat* %50) #13
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %691

690:                                              ; preds = %686
  store %struct.stat* %50, %struct.stat** %51, align 8
  br label %692

691:                                              ; preds = %686
  store i8 0, i8* %49, align 1
  br label %692

692:                                              ; preds = %691, %690
  br label %693

693:                                              ; preds = %692, %685
  %694 = load i8, i8* %49, align 1
  %695 = trunc i8 %694 to i1
  br i1 %695, label %696, label %715

696:                                              ; preds = %693
  %697 = load %struct.stat*, %struct.stat** %51, align 8
  %698 = getelementptr inbounds %struct.stat, %struct.stat* %697, i32 0, i32 3
  %699 = load i32, i32* %698, align 8
  %700 = and i32 %699, 61440
  %701 = icmp eq i32 %700, 40960
  br i1 %701, label %702, label %715

702:                                              ; preds = %696
  %703 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %704 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %703, i32 0, i32 37
  %705 = load %struct.hash_table*, %struct.hash_table** %704, align 8
  %706 = load i8*, i8** %13, align 8
  %707 = load %struct.stat*, %struct.stat** %51, align 8
  %708 = call zeroext i1 @seen_file(%struct.hash_table* %705, i8* %706, %struct.stat* %707)
  br i1 %708, label %709, label %715

709:                                              ; preds = %702
  %710 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.143, i64 0, i64 0)) #13
  %711 = load i8*, i8** %12, align 8
  %712 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %711)
  %713 = load i8*, i8** %13, align 8
  %714 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %713)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %710, i8* %712, i8* %714)
  store i1 false, i1* %11, align 1
  br label %1864

715:                                              ; preds = %702, %696, %693
  br label %716

716:                                              ; preds = %715, %677, %672, %667, %664
  %717 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %718 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %717, i32 0, i32 31
  %719 = load i8, i8* %718, align 2
  %720 = trunc i8 %719 to i1
  br i1 %720, label %721, label %734

721:                                              ; preds = %716
  %722 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %723 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %722, i32 0, i32 9
  %724 = load i8, i8* %723, align 8
  %725 = trunc i8 %724 to i1
  br i1 %725, label %734, label %726

726:                                              ; preds = %721
  %727 = load i32, i32* %24, align 4
  %728 = and i32 %727, 61440
  %729 = icmp eq i32 %728, 16384
  br i1 %729, label %734, label %730

730:                                              ; preds = %726
  %731 = load i8*, i8** %12, align 8
  %732 = load i8*, i8** %13, align 8
  %733 = load i8*, i8** %30, align 8
  call void @emit_verbose(i8* %731, i8* %732, i8* %733)
  br label %734

734:                                              ; preds = %730, %726, %721, %716
  %735 = load i32, i32* %35, align 4
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %737, label %738

737:                                              ; preds = %734
  store i8* null, i8** %29, align 8
  br label %816

738:                                              ; preds = %734
  %739 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %740 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %739, i32 0, i32 27
  %741 = load i8, i8* %740, align 2
  %742 = trunc i8 %741 to i1
  br i1 %742, label %743, label %764

743:                                              ; preds = %738
  %744 = load i32, i32* %24, align 4
  %745 = and i32 %744, 61440
  %746 = icmp eq i32 %745, 16384
  br i1 %746, label %747, label %764

747:                                              ; preds = %743
  %748 = load i8, i8* %18, align 1
  %749 = trunc i8 %748 to i1
  br i1 %749, label %750, label %757

750:                                              ; preds = %747
  %751 = load i8*, i8** %13, align 8
  %752 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %753 = load i64, i64* %752, align 8
  %754 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %755 = load i64, i64* %754, align 8
  %756 = call i8* @remember_copied(i8* %751, i64 %753, i64 %755)
  store i8* %756, i8** %29, align 8
  br label %763

757:                                              ; preds = %747
  %758 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %759 = load i64, i64* %758, align 8
  %760 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %761 = load i64, i64* %760, align 8
  %762 = call i8* @src_to_dest_lookup(i64 %759, i64 %761)
  store i8* %762, i8** %29, align 8
  br label %763

763:                                              ; preds = %757, %750
  br label %815

764:                                              ; preds = %743, %738
  %765 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %766 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %765, i32 0, i32 9
  %767 = load i8, i8* %766, align 8
  %768 = trunc i8 %767 to i1
  br i1 %768, label %769, label %779

769:                                              ; preds = %764
  %770 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 2
  %771 = load i64, i64* %770, align 8
  %772 = icmp eq i64 %771, 1
  br i1 %772, label %773, label %779

773:                                              ; preds = %769
  %774 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %775 = load i64, i64* %774, align 8
  %776 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %777 = load i64, i64* %776, align 8
  %778 = call i8* @src_to_dest_lookup(i64 %775, i64 %777)
  store i8* %778, i8** %29, align 8
  br label %814

779:                                              ; preds = %769, %764
  %780 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %781 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %780, i32 0, i32 19
  %782 = load i8, i8* %781, align 2
  %783 = trunc i8 %782 to i1
  br i1 %783, label %784, label %813

784:                                              ; preds = %779
  %785 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %786 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %785, i32 0, i32 8
  %787 = load i8, i8* %786, align 1
  %788 = trunc i8 %787 to i1
  br i1 %788, label %813, label %789

789:                                              ; preds = %784
  %790 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 2
  %791 = load i64, i64* %790, align 8
  %792 = icmp ult i64 1, %791
  br i1 %792, label %806, label %793

793:                                              ; preds = %789
  %794 = load i8, i8* %18, align 1
  %795 = trunc i8 %794 to i1
  br i1 %795, label %796, label %801

796:                                              ; preds = %793
  %797 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %798 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %797, i32 0, i32 1
  %799 = load i32, i32* %798, align 4
  %800 = icmp eq i32 %799, 3
  br i1 %800, label %806, label %801

801:                                              ; preds = %796, %793
  %802 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %803 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %802, i32 0, i32 1
  %804 = load i32, i32* %803, align 4
  %805 = icmp eq i32 %804, 4
  br i1 %805, label %806, label %813

806:                                              ; preds = %801, %796, %789
  %807 = load i8*, i8** %13, align 8
  %808 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %809 = load i64, i64* %808, align 8
  %810 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %811 = load i64, i64* %810, align 8
  %812 = call i8* @remember_copied(i8* %807, i64 %809, i64 %811)
  store i8* %812, i8** %29, align 8
  br label %813

813:                                              ; preds = %806, %801, %784, %779
  br label %814

814:                                              ; preds = %813, %773
  br label %815

815:                                              ; preds = %814, %763
  br label %816

816:                                              ; preds = %815, %737
  %817 = load i8*, i8** %29, align 8
  %818 = icmp ne i8* %817, null
  br i1 %818, label %819, label %888

819:                                              ; preds = %816
  %820 = load i32, i32* %24, align 4
  %821 = and i32 %820, 61440
  %822 = icmp eq i32 %821, 16384
  br i1 %822, label %823, label %875

823:                                              ; preds = %819
  %824 = load i8*, i8** %12, align 8
  %825 = load i8*, i8** %29, align 8
  %826 = call zeroext i1 @same_name(i8* %824, i8* %825)
  br i1 %826, label %827, label %834

827:                                              ; preds = %823
  %828 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.144, i64 0, i64 0)) #13
  %829 = load i8*, i8** @top_level_src_name, align 8
  %830 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %829)
  %831 = load i8*, i8** @top_level_dst_name, align 8
  %832 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %831)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %828, i8* %830, i8* %832)
  %833 = load i8*, i8** %20, align 8
  store i8 1, i8* %833, align 1
  br label %1821

834:                                              ; preds = %823
  %835 = load i8*, i8** %13, align 8
  %836 = load i8*, i8** %29, align 8
  %837 = call zeroext i1 @same_name(i8* %835, i8* %836)
  br i1 %837, label %838, label %852

838:                                              ; preds = %834
  %839 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.145, i64 0, i64 0)) #13
  %840 = load i8*, i8** @top_level_src_name, align 8
  %841 = call i8* @quotearg_style(i32 4, i8* %840)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %839, i8* %841)
  %842 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %843 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %842, i32 0, i32 9
  %844 = load i8, i8* %843, align 8
  %845 = trunc i8 %844 to i1
  br i1 %845, label %846, label %851

846:                                              ; preds = %838
  %847 = load i8*, i8** %21, align 8
  %848 = icmp ne i8* %847, null
  br i1 %848, label %849, label %851

849:                                              ; preds = %846
  %850 = load i8*, i8** %21, align 8
  store i8 1, i8* %850, align 1
  br label %851

851:                                              ; preds = %849, %846, %838
  store i1 true, i1* %11, align 1
  br label %1864

852:                                              ; preds = %834
  %853 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %854 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %853, i32 0, i32 1
  %855 = load i32, i32* %854, align 4
  %856 = icmp eq i32 %855, 4
  br i1 %856, label %865, label %857

857:                                              ; preds = %852
  %858 = load i8, i8* %18, align 1
  %859 = trunc i8 %858 to i1
  br i1 %859, label %860, label %866

860:                                              ; preds = %857
  %861 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %862 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %861, i32 0, i32 1
  %863 = load i32, i32* %862, align 4
  %864 = icmp eq i32 %863, 3
  br i1 %864, label %865, label %866

865:                                              ; preds = %860, %852
  br label %872

866:                                              ; preds = %860, %857
  %867 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.146, i64 0, i64 0)) #13
  %868 = load i8*, i8** %13, align 8
  %869 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %868)
  %870 = load i8*, i8** %29, align 8
  %871 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %870)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %867, i8* %869, i8* %871)
  br label %1821

872:                                              ; preds = %865
  br label %873

873:                                              ; preds = %872
  br label %874

874:                                              ; preds = %873
  br label %887

875:                                              ; preds = %819
  %876 = load i8*, i8** %29, align 8
  %877 = load i8*, i8** %13, align 8
  %878 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %879 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %878, i32 0, i32 31
  %880 = load i8, i8* %879, align 2
  %881 = trunc i8 %880 to i1
  %882 = load i8, i8* %37, align 1
  %883 = trunc i8 %882 to i1
  %884 = call zeroext i1 @create_hard_link(i8* %876, i8* %877, i1 zeroext true, i1 zeroext %881, i1 zeroext %883)
  br i1 %884, label %886, label %885

885:                                              ; preds = %875
  br label %1821

886:                                              ; preds = %875
  store i1 true, i1* %11, align 1
  br label %1864

887:                                              ; preds = %874
  br label %888

888:                                              ; preds = %887, %816
  %889 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %890 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %889, i32 0, i32 9
  %891 = load i8, i8* %890, align 8
  %892 = trunc i8 %891 to i1
  br i1 %892, label %893, label %1018

893:                                              ; preds = %888
  %894 = load i32, i32* %35, align 4
  %895 = icmp eq i32 %894, 17
  br i1 %895, label %896, label %907

896:                                              ; preds = %893
  %897 = load i8*, i8** %12, align 8
  %898 = load i8*, i8** %13, align 8
  %899 = call i32 @rename(i8* %897, i8* %898) #13
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %901, label %902

901:                                              ; preds = %896
  br label %905

902:                                              ; preds = %896
  %903 = call i32* @__errno_location() #16
  %904 = load i32, i32* %903, align 4
  br label %905

905:                                              ; preds = %902, %901
  %906 = phi i32 [ 0, %901 ], [ %904, %902 ]
  store i32 %906, i32* %35, align 4
  br label %907

907:                                              ; preds = %905, %893
  %908 = load i32, i32* %35, align 4
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %949

910:                                              ; preds = %907
  %911 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %911, i32 0, i32 31
  %913 = load i8, i8* %912, align 2
  %914 = trunc i8 %913 to i1
  br i1 %914, label %915, label %921

915:                                              ; preds = %910
  %916 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.147, i64 0, i64 0)) #13
  %917 = call i32 (i8*, ...) @printf(i8* %916)
  %918 = load i8*, i8** %12, align 8
  %919 = load i8*, i8** %13, align 8
  %920 = load i8*, i8** %30, align 8
  call void @emit_verbose(i8* %918, i8* %919, i8* %920)
  br label %921

921:                                              ; preds = %915, %910
  %922 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %923 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %922, i32 0, i32 18
  %924 = load i8, i8* %923, align 1
  %925 = trunc i8 %924 to i1
  br i1 %925, label %926, label %930

926:                                              ; preds = %921
  %927 = load i8*, i8** %13, align 8
  %928 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %929 = call zeroext i1 @set_file_security_ctx(i8* %927, i1 zeroext false, i1 zeroext true, %struct.cp_options* %928)
  br label %930

930:                                              ; preds = %926, %921
  %931 = load i8*, i8** %21, align 8
  %932 = icmp ne i8* %931, null
  br i1 %932, label %933, label %935

933:                                              ; preds = %930
  %934 = load i8*, i8** %21, align 8
  store i8 1, i8* %934, align 1
  br label %935

935:                                              ; preds = %933, %930
  %936 = load i8, i8* %18, align 1
  %937 = trunc i8 %936 to i1
  br i1 %937, label %938, label %948

938:                                              ; preds = %935
  %939 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %940 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %939, i32 0, i32 34
  %941 = load i8, i8* %940, align 1
  %942 = trunc i8 %941 to i1
  br i1 %942, label %948, label %943

943:                                              ; preds = %938
  %944 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %945 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %944, i32 0, i32 37
  %946 = load %struct.hash_table*, %struct.hash_table** %945, align 8
  %947 = load i8*, i8** %13, align 8
  call void @record_file(%struct.hash_table* %946, i8* %947, %struct.stat* %22)
  br label %948

948:                                              ; preds = %943, %938, %935
  store i1 true, i1* %11, align 1
  br label %1864

949:                                              ; preds = %907
  %950 = load i32, i32* %35, align 4
  %951 = icmp eq i32 %950, 22
  br i1 %951, label %952, label %959

952:                                              ; preds = %949
  %953 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.148, i64 0, i64 0)) #13
  %954 = load i8*, i8** @top_level_src_name, align 8
  %955 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %954)
  %956 = load i8*, i8** @top_level_dst_name, align 8
  %957 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %956)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %953, i8* %955, i8* %957)
  %958 = load i8*, i8** %20, align 8
  store i8 1, i8* %958, align 1
  store i1 true, i1* %11, align 1
  br label %1864

959:                                              ; preds = %949
  %960 = load i32, i32* %35, align 4
  %961 = icmp ne i32 %960, 18
  br i1 %961, label %962, label %973

962:                                              ; preds = %959
  %963 = load i32, i32* %35, align 4
  %964 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.149, i64 0, i64 0)) #13
  %965 = load i8*, i8** %12, align 8
  %966 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %965)
  %967 = load i8*, i8** %13, align 8
  %968 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %967)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %963, i8* %964, i8* %966, i8* %968)
  %969 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %970 = load i64, i64* %969, align 8
  %971 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %972 = load i64, i64* %971, align 8
  call void @forget_created(i64 %970, i64 %972)
  store i1 false, i1* %11, align 1
  br label %1864

973:                                              ; preds = %959
  %974 = load i32, i32* %24, align 4
  %975 = and i32 %974, 61440
  %976 = icmp eq i32 %975, 16384
  br i1 %976, label %977, label %980

977:                                              ; preds = %973
  %978 = load i8*, i8** %13, align 8
  %979 = call i32 @rmdir(i8* %978) #13
  br label %983

980:                                              ; preds = %973
  %981 = load i8*, i8** %13, align 8
  %982 = call i32 @unlink(i8* %981) #13
  br label %983

983:                                              ; preds = %980, %977
  %984 = phi i32 [ %979, %977 ], [ %982, %980 ]
  %985 = icmp ne i32 %984, 0
  br i1 %985, label %986, label %1002

986:                                              ; preds = %983
  %987 = call i32* @__errno_location() #16
  %988 = load i32, i32* %987, align 4
  %989 = icmp ne i32 %988, 2
  br i1 %989, label %990, label %1002

990:                                              ; preds = %986
  %991 = call i32* @__errno_location() #16
  %992 = load i32, i32* %991, align 4
  %993 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.150, i64 0, i64 0)) #13
  %994 = load i8*, i8** %12, align 8
  %995 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %994)
  %996 = load i8*, i8** %13, align 8
  %997 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %996)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %992, i8* %993, i8* %995, i8* %997)
  %998 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %999 = load i64, i64* %998, align 8
  %1000 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %1001 = load i64, i64* %1000, align 8
  call void @forget_created(i64 %999, i64 %1001)
  store i1 false, i1* %11, align 1
  br label %1864

1002:                                             ; preds = %986, %983
  %1003 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1004 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1003, i32 0, i32 31
  %1005 = load i8, i8* %1004, align 2
  %1006 = trunc i8 %1005 to i1
  br i1 %1006, label %1007, label %1017

1007:                                             ; preds = %1002
  %1008 = load i32, i32* %24, align 4
  %1009 = and i32 %1008, 61440
  %1010 = icmp eq i32 %1009, 16384
  br i1 %1010, label %1017, label %1011

1011:                                             ; preds = %1007
  %1012 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.151, i64 0, i64 0)) #13
  %1013 = call i32 (i8*, ...) @printf(i8* %1012)
  %1014 = load i8*, i8** %12, align 8
  %1015 = load i8*, i8** %13, align 8
  %1016 = load i8*, i8** %30, align 8
  call void @emit_verbose(i8* %1014, i8* %1015, i8* %1016)
  br label %1017

1017:                                             ; preds = %1011, %1007, %1002
  store i8 1, i8* %14, align 1
  br label %1018

1018:                                             ; preds = %1017, %888
  %1019 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1020 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1019, i32 0, i32 28
  %1021 = load i8, i8* %1020, align 1
  %1022 = trunc i8 %1021 to i1
  br i1 %1022, label %1023, label %1027

1023:                                             ; preds = %1018
  %1024 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1025 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1024, i32 0, i32 4
  %1026 = load i32, i32* %1025, align 8
  br label %1029

1027:                                             ; preds = %1018
  %1028 = load i32, i32* %24, align 4
  br label %1029

1029:                                             ; preds = %1027, %1023
  %1030 = phi i32 [ %1026, %1023 ], [ %1028, %1027 ]
  %1031 = and i32 %1030, 4095
  store i32 %1031, i32* %26, align 4
  %1032 = load i32, i32* %26, align 4
  %1033 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1034 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1033, i32 0, i32 14
  %1035 = load i8, i8* %1034, align 1
  %1036 = trunc i8 %1035 to i1
  br i1 %1036, label %1037, label %1038

1037:                                             ; preds = %1029
  br label %1044

1038:                                             ; preds = %1029
  %1039 = load i32, i32* %24, align 4
  %1040 = and i32 %1039, 61440
  %1041 = icmp eq i32 %1040, 16384
  %1042 = zext i1 %1041 to i64
  %1043 = select i1 %1041, i32 18, i32 0
  br label %1044

1044:                                             ; preds = %1038, %1037
  %1045 = phi i32 [ 63, %1037 ], [ %1043, %1038 ]
  %1046 = and i32 %1032, %1045
  store i32 %1046, i32* %27, align 4
  store i8 1, i8* %31, align 1
  %1047 = load i8*, i8** %12, align 8
  %1048 = load i8*, i8** %13, align 8
  %1049 = load i32, i32* %24, align 4
  %1050 = load i8, i8* %14, align 1
  %1051 = trunc i8 %1050 to i1
  %1052 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1053 = call zeroext i1 @set_process_security_ctx(i8* %1047, i8* %1048, i32 %1049, i1 zeroext %1051, %struct.cp_options* %1052)
  br i1 %1053, label %1055, label %1054

1054:                                             ; preds = %1044
  store i1 false, i1* %11, align 1
  br label %1864

1055:                                             ; preds = %1044
  %1056 = load i32, i32* %24, align 4
  %1057 = and i32 %1056, 61440
  %1058 = icmp eq i32 %1057, 16384
  br i1 %1058, label %1059, label %1219

1059:                                             ; preds = %1055
  %1060 = load %struct.dir_list*, %struct.dir_list** %16, align 8
  %1061 = call zeroext i1 @is_ancestor(%struct.stat* %22, %struct.dir_list* %1060) #15
  br i1 %1061, label %1062, label %1066

1062:                                             ; preds = %1059
  %1063 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.152, i64 0, i64 0)) #13
  %1064 = load i8*, i8** %12, align 8
  %1065 = call i8* @quotearg_style(i32 4, i8* %1064)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1063, i8* %1065)
  br label %1821

1066:                                             ; preds = %1059
  %1067 = alloca i8, i64 24, align 16
  %1068 = bitcast i8* %1067 to %struct.dir_list*
  store %struct.dir_list* %1068, %struct.dir_list** %52, align 8
  %1069 = load %struct.dir_list*, %struct.dir_list** %16, align 8
  %1070 = load %struct.dir_list*, %struct.dir_list** %52, align 8
  %1071 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1070, i32 0, i32 0
  store %struct.dir_list* %1069, %struct.dir_list** %1071, align 8
  %1072 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %1073 = load i64, i64* %1072, align 8
  %1074 = load %struct.dir_list*, %struct.dir_list** %52, align 8
  %1075 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1074, i32 0, i32 1
  store i64 %1073, i64* %1075, align 8
  %1076 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %1077 = load i64, i64* %1076, align 8
  %1078 = load %struct.dir_list*, %struct.dir_list** %52, align 8
  %1079 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1078, i32 0, i32 2
  store i64 %1077, i64* %1079, align 8
  %1080 = load i8, i8* %14, align 1
  %1081 = trunc i8 %1080 to i1
  br i1 %1081, label %1087, label %1082

1082:                                             ; preds = %1066
  %1083 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %1084 = load i32, i32* %1083, align 8
  %1085 = and i32 %1084, 61440
  %1086 = icmp eq i32 %1085, 16384
  br i1 %1086, label %1164, label %1087

1087:                                             ; preds = %1082, %1066
  %1088 = load i8*, i8** %13, align 8
  %1089 = load i32, i32* %26, align 4
  %1090 = load i32, i32* %27, align 4
  %1091 = xor i32 %1090, -1
  %1092 = and i32 %1089, %1091
  %1093 = call i32 @mkdir(i8* %1088, i32 %1092) #13
  %1094 = icmp ne i32 %1093, 0
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1087
  %1096 = call i32* @__errno_location() #16
  %1097 = load i32, i32* %1096, align 4
  %1098 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.153, i64 0, i64 0)) #13
  %1099 = load i8*, i8** %13, align 8
  %1100 = call i8* @quotearg_style(i32 4, i8* %1099)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1097, i8* %1098, i8* %1100)
  br label %1821

1101:                                             ; preds = %1087
  %1102 = load i8*, i8** %13, align 8
  %1103 = call i32 @lstat(i8* %1102, %struct.stat* %23) #13
  %1104 = icmp ne i32 %1103, 0
  br i1 %1104, label %1105, label %1111

1105:                                             ; preds = %1101
  %1106 = call i32* @__errno_location() #16
  %1107 = load i32, i32* %1106, align 4
  %1108 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.129, i64 0, i64 0)) #13
  %1109 = load i8*, i8** %13, align 8
  %1110 = call i8* @quotearg_style(i32 4, i8* %1109)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1107, i8* %1108, i8* %1110)
  br label %1821

1111:                                             ; preds = %1101
  %1112 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %1113 = load i32, i32* %1112, align 8
  %1114 = and i32 %1113, 448
  %1115 = icmp ne i32 %1114, 448
  br i1 %1115, label %1116, label %1131

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %1118 = load i32, i32* %1117, align 8
  store i32 %1118, i32* %25, align 4
  store i8 1, i8* %28, align 1
  %1119 = load i8*, i8** %13, align 8
  %1120 = load i32, i32* %25, align 4
  %1121 = or i32 %1120, 448
  %1122 = call i32 @chmod(i8* %1119, i32 %1121) #13
  %1123 = icmp ne i32 %1122, 0
  br i1 %1123, label %1124, label %1130

1124:                                             ; preds = %1116
  %1125 = call i32* @__errno_location() #16
  %1126 = load i32, i32* %1125, align 4
  %1127 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.154, i64 0, i64 0)) #13
  %1128 = load i8*, i8** %13, align 8
  %1129 = call i8* @quotearg_style(i32 4, i8* %1128)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1126, i8* %1127, i8* %1129)
  br label %1821

1130:                                             ; preds = %1116
  br label %1131

1131:                                             ; preds = %1130, %1111
  br label %1132

1132:                                             ; preds = %1131
  %1133 = load i8*, i8** %19, align 8
  %1134 = load i8, i8* %1133, align 1
  %1135 = trunc i8 %1134 to i1
  br i1 %1135, label %1144, label %1136

1136:                                             ; preds = %1132
  %1137 = load i8*, i8** %13, align 8
  %1138 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1
  %1139 = load i64, i64* %1138, align 8
  %1140 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 0
  %1141 = load i64, i64* %1140, align 8
  %1142 = call i8* @remember_copied(i8* %1137, i64 %1139, i64 %1141)
  %1143 = load i8*, i8** %19, align 8
  store i8 1, i8* %1143, align 1
  br label %1144

1144:                                             ; preds = %1136, %1132
  %1145 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1146 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1145, i32 0, i32 31
  %1147 = load i8, i8* %1146, align 2
  %1148 = trunc i8 %1147 to i1
  br i1 %1148, label %1149, label %1163

1149:                                             ; preds = %1144
  %1150 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1151 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1150, i32 0, i32 9
  %1152 = load i8, i8* %1151, align 8
  %1153 = trunc i8 %1152 to i1
  br i1 %1153, label %1154, label %1159

1154:                                             ; preds = %1149
  %1155 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.155, i64 0, i64 0)) #13
  %1156 = load i8*, i8** %13, align 8
  %1157 = call i8* @quotearg_style(i32 4, i8* %1156)
  %1158 = call i32 (i8*, ...) @printf(i8* %1155, i8* %1157)
  br label %1162

1159:                                             ; preds = %1149
  %1160 = load i8*, i8** %12, align 8
  %1161 = load i8*, i8** %13, align 8
  call void @emit_verbose(i8* %1160, i8* %1161, i8* null)
  br label %1162

1162:                                             ; preds = %1159, %1154
  br label %1163

1163:                                             ; preds = %1162, %1144
  br label %1191

1164:                                             ; preds = %1082
  store i32 0, i32* %27, align 4
  %1165 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1166 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1165, i32 0, i32 18
  %1167 = load i8, i8* %1166, align 1
  %1168 = trunc i8 %1167 to i1
  br i1 %1168, label %1174, label %1169

1169:                                             ; preds = %1164
  %1170 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1171 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1170, i32 0, i32 22
  %1172 = load i8, i8* %1171, align 1
  %1173 = trunc i8 %1172 to i1
  br i1 %1173, label %1174, label %1190

1174:                                             ; preds = %1169, %1164
  %1175 = load i8*, i8** %13, align 8
  %1176 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1177 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1176, i32 0, i32 22
  %1178 = load i8, i8* %1177, align 1
  %1179 = trunc i8 %1178 to i1
  %1180 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1181 = call zeroext i1 @set_file_security_ctx(i8* %1175, i1 zeroext %1179, i1 zeroext false, %struct.cp_options* %1180)
  br i1 %1181, label %1189, label %1182

1182:                                             ; preds = %1174
  %1183 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1184 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1183, i32 0, i32 23
  %1185 = load i8, i8* %1184, align 2
  %1186 = trunc i8 %1185 to i1
  br i1 %1186, label %1187, label %1188

1187:                                             ; preds = %1182
  br label %1821

1188:                                             ; preds = %1182
  br label %1189

1189:                                             ; preds = %1188, %1174
  br label %1190

1190:                                             ; preds = %1189, %1169
  br label %1191

1191:                                             ; preds = %1190, %1163
  %1192 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1193 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1192, i32 0, i32 13
  %1194 = load i8, i8* %1193, align 4
  %1195 = trunc i8 %1194 to i1
  br i1 %1195, label %1196, label %1207

1196:                                             ; preds = %1191
  %1197 = load %struct.stat*, %struct.stat** %15, align 8
  %1198 = icmp ne %struct.stat* %1197, null
  br i1 %1198, label %1199, label %1207

1199:                                             ; preds = %1196
  %1200 = load %struct.stat*, %struct.stat** %15, align 8
  %1201 = getelementptr inbounds %struct.stat, %struct.stat* %1200, i32 0, i32 0
  %1202 = load i64, i64* %1201, align 8
  %1203 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %1204 = load i64, i64* %1203, align 8
  %1205 = icmp ne i64 %1202, %1204
  br i1 %1205, label %1206, label %1207

1206:                                             ; preds = %1199
  br label %1218

1207:                                             ; preds = %1199, %1196, %1191
  %1208 = load i8*, i8** %12, align 8
  %1209 = load i8*, i8** %13, align 8
  %1210 = load i8, i8* %14, align 1
  %1211 = trunc i8 %1210 to i1
  %1212 = load %struct.dir_list*, %struct.dir_list** %52, align 8
  %1213 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1214 = load i8*, i8** %19, align 8
  %1215 = load i8*, i8** %20, align 8
  %1216 = call zeroext i1 @copy_dir(i8* %1208, i8* %1209, i1 zeroext %1211, %struct.stat* %22, %struct.dir_list* %1212, %struct.cp_options* %1213, i8* %1214, i8* %1215)
  %1217 = zext i1 %1216 to i8
  store i8 %1217, i8* %31, align 1
  br label %1218

1218:                                             ; preds = %1207, %1206
  br label %1508

1219:                                             ; preds = %1055
  %1220 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1221 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1220, i32 0, i32 29
  %1222 = load i8, i8* %1221, align 4
  %1223 = trunc i8 %1222 to i1
  br i1 %1223, label %1224, label %1285

1224:                                             ; preds = %1219
  store i8 1, i8* %33, align 1
  %1225 = load i8*, i8** %12, align 8
  %1226 = load i8, i8* %1225, align 1
  %1227 = sext i8 %1226 to i32
  %1228 = icmp ne i32 %1227, 47
  br i1 %1228, label %1229, label %1267

1229:                                             ; preds = %1224
  %1230 = load i8*, i8** %13, align 8
  %1231 = call i8* @dir_name(i8* %1230)
  store i8* %1231, i8** %55, align 8
  %1232 = load i8*, i8** %55, align 8
  %1233 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.156, i64 0, i64 0), i8* %1232) #15
  %1234 = icmp eq i32 %1233, 0
  br i1 %1234, label %1256, label %1235

1235:                                             ; preds = %1229
  %1236 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.156, i64 0, i64 0), %struct.stat* %53) #13
  %1237 = icmp ne i32 %1236, 0
  br i1 %1237, label %1256, label %1238

1238:                                             ; preds = %1235
  %1239 = load i8*, i8** %55, align 8
  %1240 = call i32 @stat(i8* %1239, %struct.stat* %54) #13
  %1241 = icmp ne i32 %1240, 0
  br i1 %1241, label %1256, label %1242

1242:                                             ; preds = %1238
  %1243 = getelementptr inbounds %struct.stat, %struct.stat* %53, i32 0, i32 1
  %1244 = load i64, i64* %1243, align 8
  %1245 = getelementptr inbounds %struct.stat, %struct.stat* %54, i32 0, i32 1
  %1246 = load i64, i64* %1245, align 8
  %1247 = icmp eq i64 %1244, %1246
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1242
  %1249 = getelementptr inbounds %struct.stat, %struct.stat* %53, i32 0, i32 0
  %1250 = load i64, i64* %1249, align 8
  %1251 = getelementptr inbounds %struct.stat, %struct.stat* %54, i32 0, i32 0
  %1252 = load i64, i64* %1251, align 8
  %1253 = icmp eq i64 %1250, %1252
  br label %1254

1254:                                             ; preds = %1248, %1242
  %1255 = phi i1 [ false, %1242 ], [ %1253, %1248 ]
  br label %1256

1256:                                             ; preds = %1254, %1238, %1235, %1229
  %1257 = phi i1 [ true, %1238 ], [ true, %1235 ], [ true, %1229 ], [ %1255, %1254 ]
  %1258 = zext i1 %1257 to i8
  store i8 %1258, i8* %56, align 1
  %1259 = load i8*, i8** %55, align 8
  call void @free(i8* %1259) #13
  %1260 = load i8, i8* %56, align 1
  %1261 = trunc i8 %1260 to i1
  br i1 %1261, label %1266, label %1262

1262:                                             ; preds = %1256
  %1263 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.157, i64 0, i64 0)) #13
  %1264 = load i8*, i8** %13, align 8
  %1265 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %1264)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1263, i8* %1265)
  br label %1821

1266:                                             ; preds = %1256
  br label %1267

1267:                                             ; preds = %1266, %1224
  %1268 = load i8*, i8** %12, align 8
  %1269 = load i8*, i8** %13, align 8
  %1270 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1271 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1270, i32 0, i32 7
  %1272 = load i8, i8* %1271, align 2
  %1273 = trunc i8 %1272 to i1
  %1274 = call i32 @force_symlinkat(i8* %1268, i32 -100, i8* %1269, i1 zeroext %1273)
  %1275 = icmp slt i32 %1274, 0
  br i1 %1275, label %1276, label %1284

1276:                                             ; preds = %1267
  %1277 = call i32* @__errno_location() #16
  %1278 = load i32, i32* %1277, align 4
  %1279 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.158, i64 0, i64 0)) #13
  %1280 = load i8*, i8** %13, align 8
  %1281 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %1280)
  %1282 = load i8*, i8** %12, align 8
  %1283 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1282)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1278, i8* %1279, i8* %1281, i8* %1283)
  br label %1821

1284:                                             ; preds = %1267
  br label %1507

1285:                                             ; preds = %1219
  %1286 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1287 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1286, i32 0, i32 8
  %1288 = load i8, i8* %1287, align 1
  %1289 = trunc i8 %1288 to i1
  br i1 %1289, label %1290, label %1302

1290:                                             ; preds = %1285
  %1291 = load i8*, i8** %12, align 8
  %1292 = load i8*, i8** %13, align 8
  %1293 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1294 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1293, i32 0, i32 7
  %1295 = load i8, i8* %1294, align 2
  %1296 = trunc i8 %1295 to i1
  %1297 = load i8, i8* %37, align 1
  %1298 = trunc i8 %1297 to i1
  %1299 = call zeroext i1 @create_hard_link(i8* %1291, i8* %1292, i1 zeroext %1296, i1 zeroext false, i1 zeroext %1298)
  br i1 %1299, label %1301, label %1300

1300:                                             ; preds = %1290
  br label %1821

1301:                                             ; preds = %1290
  br label %1506

1302:                                             ; preds = %1285
  %1303 = load i32, i32* %24, align 4
  %1304 = and i32 %1303, 61440
  %1305 = icmp eq i32 %1304, 32768
  br i1 %1305, label %1315, label %1306

1306:                                             ; preds = %1302
  %1307 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1307, i32 0, i32 5
  %1309 = load i8, i8* %1308, align 4
  %1310 = trunc i8 %1309 to i1
  br i1 %1310, label %1311, label %1325

1311:                                             ; preds = %1306
  %1312 = load i32, i32* %24, align 4
  %1313 = and i32 %1312, 61440
  %1314 = icmp eq i32 %1313, 40960
  br i1 %1314, label %1325, label %1315

1315:                                             ; preds = %1311, %1302
  store i8 1, i8* %32, align 1
  %1316 = load i8*, i8** %12, align 8
  %1317 = load i8*, i8** %13, align 8
  %1318 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1319 = load i32, i32* %26, align 4
  %1320 = and i32 %1319, 511
  %1321 = load i32, i32* %27, align 4
  %1322 = call zeroext i1 @copy_reg(i8* %1316, i8* %1317, %struct.cp_options* %1318, i32 %1320, i32 %1321, i8* %14, %struct.stat* %22)
  br i1 %1322, label %1324, label %1323

1323:                                             ; preds = %1315
  br label %1821

1324:                                             ; preds = %1315
  br label %1505

1325:                                             ; preds = %1311, %1306
  %1326 = load i32, i32* %24, align 4
  %1327 = and i32 %1326, 61440
  %1328 = icmp eq i32 %1327, 4096
  br i1 %1328, label %1329, label %1354

1329:                                             ; preds = %1325
  %1330 = load i8*, i8** %13, align 8
  %1331 = load i32, i32* %24, align 4
  %1332 = load i32, i32* %27, align 4
  %1333 = xor i32 %1332, -1
  %1334 = and i32 %1331, %1333
  %1335 = call i32 @mknod(i8* %1330, i32 %1334, i64 0) #13
  %1336 = icmp ne i32 %1335, 0
  br i1 %1336, label %1337, label %1353

1337:                                             ; preds = %1329
  %1338 = load i8*, i8** %13, align 8
  %1339 = load i32, i32* %24, align 4
  %1340 = and i32 %1339, -4097
  %1341 = load i32, i32* %27, align 4
  %1342 = xor i32 %1341, -1
  %1343 = and i32 %1340, %1342
  %1344 = call i32 @mkfifo(i8* %1338, i32 %1343) #13
  %1345 = icmp ne i32 %1344, 0
  br i1 %1345, label %1346, label %1352

1346:                                             ; preds = %1337
  %1347 = call i32* @__errno_location() #16
  %1348 = load i32, i32* %1347, align 4
  %1349 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.159, i64 0, i64 0)) #13
  %1350 = load i8*, i8** %13, align 8
  %1351 = call i8* @quotearg_style(i32 4, i8* %1350)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1348, i8* %1349, i8* %1351)
  br label %1821

1352:                                             ; preds = %1337
  br label %1353

1353:                                             ; preds = %1352, %1329
  br label %1504

1354:                                             ; preds = %1325
  %1355 = load i32, i32* %24, align 4
  %1356 = and i32 %1355, 61440
  %1357 = icmp eq i32 %1356, 24576
  br i1 %1357, label %1366, label %1358

1358:                                             ; preds = %1354
  %1359 = load i32, i32* %24, align 4
  %1360 = and i32 %1359, 61440
  %1361 = icmp eq i32 %1360, 8192
  br i1 %1361, label %1366, label %1362

1362:                                             ; preds = %1358
  %1363 = load i32, i32* %24, align 4
  %1364 = and i32 %1363, 61440
  %1365 = icmp eq i32 %1364, 49152
  br i1 %1365, label %1366, label %1383

1366:                                             ; preds = %1362, %1358, %1354
  %1367 = load i8*, i8** %13, align 8
  %1368 = load i32, i32* %24, align 4
  %1369 = load i32, i32* %27, align 4
  %1370 = xor i32 %1369, -1
  %1371 = and i32 %1368, %1370
  %1372 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 7
  %1373 = load i64, i64* %1372, align 8
  %1374 = call i32 @mknod(i8* %1367, i32 %1371, i64 %1373) #13
  %1375 = icmp ne i32 %1374, 0
  br i1 %1375, label %1376, label %1382

1376:                                             ; preds = %1366
  %1377 = call i32* @__errno_location() #16
  %1378 = load i32, i32* %1377, align 4
  %1379 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.160, i64 0, i64 0)) #13
  %1380 = load i8*, i8** %13, align 8
  %1381 = call i8* @quotearg_style(i32 4, i8* %1380)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1378, i8* %1379, i8* %1381)
  br label %1821

1382:                                             ; preds = %1366
  br label %1503

1383:                                             ; preds = %1362
  %1384 = load i32, i32* %24, align 4
  %1385 = and i32 %1384, 61440
  %1386 = icmp eq i32 %1385, 40960
  br i1 %1386, label %1387, label %1498

1387:                                             ; preds = %1383
  %1388 = load i8*, i8** %12, align 8
  %1389 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 8
  %1390 = load i64, i64* %1389, align 8
  %1391 = call i8* @areadlink_with_size(i8* %1388, i64 %1390)
  store i8* %1391, i8** %57, align 8
  store i8 1, i8* %33, align 1
  %1392 = load i8*, i8** %57, align 8
  %1393 = icmp eq i8* %1392, null
  br i1 %1393, label %1394, label %1400

1394:                                             ; preds = %1387
  %1395 = call i32* @__errno_location() #16
  %1396 = load i32, i32* %1395, align 4
  %1397 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.161, i64 0, i64 0)) #13
  %1398 = load i8*, i8** %12, align 8
  %1399 = call i8* @quotearg_style(i32 4, i8* %1398)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1396, i8* %1397, i8* %1399)
  br label %1821

1400:                                             ; preds = %1387
  %1401 = load i8*, i8** %57, align 8
  %1402 = load i8*, i8** %13, align 8
  %1403 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1404 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1403, i32 0, i32 7
  %1405 = load i8, i8* %1404, align 2
  %1406 = trunc i8 %1405 to i1
  %1407 = call i32 @force_symlinkat(i8* %1401, i32 -100, i8* %1402, i1 zeroext %1406)
  store i32 %1407, i32* %58, align 4
  %1408 = load i32, i32* %58, align 4
  %1409 = icmp slt i32 %1408, 0
  br i1 %1409, label %1410, label %1413

1410:                                             ; preds = %1400
  %1411 = call i32* @__errno_location() #16
  %1412 = load i32, i32* %1411, align 4
  br label %1414

1413:                                             ; preds = %1400
  br label %1414

1414:                                             ; preds = %1413, %1410
  %1415 = phi i32 [ %1412, %1410 ], [ 0, %1413 ]
  store i32 %1415, i32* %59, align 4
  %1416 = load i32, i32* %59, align 4
  %1417 = icmp ne i32 %1416, 0
  br i1 %1417, label %1418, label %1453

1418:                                             ; preds = %1414
  %1419 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1419, i32 0, i32 30
  %1421 = load i8, i8* %1420, align 1
  %1422 = trunc i8 %1421 to i1
  br i1 %1422, label %1423, label %1453

1423:                                             ; preds = %1418
  %1424 = load i8, i8* %14, align 1
  %1425 = trunc i8 %1424 to i1
  br i1 %1425, label %1453, label %1426

1426:                                             ; preds = %1423
  %1427 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %1428 = load i32, i32* %1427, align 8
  %1429 = and i32 %1428, 61440
  %1430 = icmp eq i32 %1429, 40960
  br i1 %1430, label %1431, label %1453

1431:                                             ; preds = %1426
  %1432 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 8
  %1433 = load i64, i64* %1432, align 8
  %1434 = load i8*, i8** %57, align 8
  %1435 = call i64 @strlen(i8* %1434) #15
  %1436 = icmp eq i64 %1433, %1435
  br i1 %1436, label %1437, label %1453

1437:                                             ; preds = %1431
  %1438 = load i8*, i8** %13, align 8
  %1439 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 8
  %1440 = load i64, i64* %1439, align 8
  %1441 = call i8* @areadlink_with_size(i8* %1438, i64 %1440)
  store i8* %1441, i8** %60, align 8
  %1442 = load i8*, i8** %60, align 8
  %1443 = icmp ne i8* %1442, null
  br i1 %1443, label %1444, label %1452

1444:                                             ; preds = %1437
  %1445 = load i8*, i8** %60, align 8
  %1446 = load i8*, i8** %57, align 8
  %1447 = call i32 @strcmp(i8* %1445, i8* %1446) #15
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1449, label %1450

1449:                                             ; preds = %1444
  store i32 0, i32* %59, align 4
  br label %1450

1450:                                             ; preds = %1449, %1444
  %1451 = load i8*, i8** %60, align 8
  call void @free(i8* %1451) #13
  br label %1452

1452:                                             ; preds = %1450, %1437
  br label %1453

1453:                                             ; preds = %1452, %1431, %1426, %1423, %1418, %1414
  %1454 = load i8*, i8** %57, align 8
  call void @free(i8* %1454) #13
  %1455 = load i32, i32* %59, align 4
  %1456 = icmp ne i32 %1455, 0
  br i1 %1456, label %1457, label %1462

1457:                                             ; preds = %1453
  %1458 = load i32, i32* %59, align 4
  %1459 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.162, i64 0, i64 0)) #13
  %1460 = load i8*, i8** %13, align 8
  %1461 = call i8* @quotearg_style(i32 4, i8* %1460)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1458, i8* %1459, i8* %1461)
  br label %1821

1462:                                             ; preds = %1453
  %1463 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1464 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1463, i32 0, i32 22
  %1465 = load i8, i8* %1464, align 1
  %1466 = trunc i8 %1465 to i1
  br i1 %1466, label %1467, label %1468

1467:                                             ; preds = %1462
  call void @restore_default_fscreatecon_or_die()
  br label %1468

1468:                                             ; preds = %1467, %1462
  %1469 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1470 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1469, i32 0, i32 14
  %1471 = load i8, i8* %1470, align 1
  %1472 = trunc i8 %1471 to i1
  br i1 %1472, label %1473, label %1497

1473:                                             ; preds = %1468
  %1474 = load i8*, i8** %13, align 8
  %1475 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 4
  %1476 = load i32, i32* %1475, align 4
  %1477 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 5
  %1478 = load i32, i32* %1477, align 8
  %1479 = call i32 @lchown(i8* %1474, i32 %1476, i32 %1478) #13
  %1480 = icmp ne i32 %1479, 0
  br i1 %1480, label %1481, label %1495

1481:                                             ; preds = %1473
  %1482 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1483 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %1482) #15
  br i1 %1483, label %1495, label %1484

1484:                                             ; preds = %1481
  %1485 = call i32* @__errno_location() #16
  %1486 = load i32, i32* %1485, align 4
  %1487 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.165, i64 0, i64 0)) #13
  %1488 = load i8*, i8** %13, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1486, i8* %1487, i8* %1488)
  %1489 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1489, i32 0, i32 21
  %1491 = load i8, i8* %1490, align 4
  %1492 = trunc i8 %1491 to i1
  br i1 %1492, label %1493, label %1494

1493:                                             ; preds = %1484
  br label %1821

1494:                                             ; preds = %1484
  br label %1496

1495:                                             ; preds = %1481, %1473
  br label %1496

1496:                                             ; preds = %1495, %1494
  br label %1497

1497:                                             ; preds = %1496, %1468
  br label %1502

1498:                                             ; preds = %1383
  %1499 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.166, i64 0, i64 0)) #13
  %1500 = load i8*, i8** %12, align 8
  %1501 = call i8* @quotearg_style(i32 4, i8* %1500)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1499, i8* %1501)
  br label %1821

1502:                                             ; preds = %1497
  br label %1503

1503:                                             ; preds = %1502, %1382
  br label %1504

1504:                                             ; preds = %1503, %1353
  br label %1505

1505:                                             ; preds = %1504, %1324
  br label %1506

1506:                                             ; preds = %1505, %1301
  br label %1507

1507:                                             ; preds = %1506, %1284
  br label %1508

1508:                                             ; preds = %1507, %1218
  %1509 = load i8, i8* %14, align 1
  %1510 = trunc i8 %1509 to i1
  br i1 %1510, label %1546, label %1511

1511:                                             ; preds = %1508
  %1512 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1513 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1512, i32 0, i32 5
  %1514 = load i8, i8* %1513, align 4
  %1515 = trunc i8 %1514 to i1
  br i1 %1515, label %1546, label %1516

1516:                                             ; preds = %1511
  %1517 = load i32, i32* %24, align 4
  %1518 = and i32 %1517, 61440
  %1519 = icmp eq i32 %1518, 16384
  br i1 %1519, label %1546, label %1520

1520:                                             ; preds = %1516
  %1521 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1522 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1521, i32 0, i32 18
  %1523 = load i8, i8* %1522, align 1
  %1524 = trunc i8 %1523 to i1
  br i1 %1524, label %1530, label %1525

1525:                                             ; preds = %1520
  %1526 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1527 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1526, i32 0, i32 22
  %1528 = load i8, i8* %1527, align 1
  %1529 = trunc i8 %1528 to i1
  br i1 %1529, label %1530, label %1546

1530:                                             ; preds = %1525, %1520
  %1531 = load i8*, i8** %13, align 8
  %1532 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1533 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1532, i32 0, i32 22
  %1534 = load i8, i8* %1533, align 1
  %1535 = trunc i8 %1534 to i1
  %1536 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1537 = call zeroext i1 @set_file_security_ctx(i8* %1531, i1 zeroext %1535, i1 zeroext false, %struct.cp_options* %1536)
  br i1 %1537, label %1545, label %1538

1538:                                             ; preds = %1530
  %1539 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1540 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1539, i32 0, i32 23
  %1541 = load i8, i8* %1540, align 2
  %1542 = trunc i8 %1541 to i1
  br i1 %1542, label %1543, label %1544

1543:                                             ; preds = %1538
  br label %1821

1544:                                             ; preds = %1538
  br label %1545

1545:                                             ; preds = %1544, %1530
  br label %1546

1546:                                             ; preds = %1545, %1525, %1516, %1511, %1508
  %1547 = load i8, i8* %18, align 1
  %1548 = trunc i8 %1547 to i1
  br i1 %1548, label %1549, label %1564

1549:                                             ; preds = %1546
  %1550 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1551 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1550, i32 0, i32 37
  %1552 = load %struct.hash_table*, %struct.hash_table** %1551, align 8
  %1553 = icmp ne %struct.hash_table* %1552, null
  br i1 %1553, label %1554, label %1564

1554:                                             ; preds = %1549
  %1555 = load i8*, i8** %13, align 8
  %1556 = call i32 @lstat(i8* %1555, %struct.stat* %61) #13
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1558, label %1563

1558:                                             ; preds = %1554
  %1559 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1559, i32 0, i32 37
  %1561 = load %struct.hash_table*, %struct.hash_table** %1560, align 8
  %1562 = load i8*, i8** %13, align 8
  call void @record_file(%struct.hash_table* %1561, i8* %1562, %struct.stat* %61)
  br label %1563

1563:                                             ; preds = %1558, %1554
  br label %1564

1564:                                             ; preds = %1563, %1549, %1546
  %1565 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1566 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1565, i32 0, i32 8
  %1567 = load i8, i8* %1566, align 1
  %1568 = trunc i8 %1567 to i1
  br i1 %1568, label %1569, label %1576

1569:                                             ; preds = %1564
  %1570 = load i32, i32* %24, align 4
  %1571 = and i32 %1570, 61440
  %1572 = icmp eq i32 %1571, 16384
  br i1 %1572, label %1576, label %1573

1573:                                             ; preds = %1569
  %1574 = load i8, i8* %31, align 1
  %1575 = trunc i8 %1574 to i1
  store i1 %1575, i1* %11, align 1
  br label %1864

1576:                                             ; preds = %1569, %1564
  %1577 = load i8, i8* %32, align 1
  %1578 = trunc i8 %1577 to i1
  br i1 %1578, label %1579, label %1582

1579:                                             ; preds = %1576
  %1580 = load i8, i8* %31, align 1
  %1581 = trunc i8 %1580 to i1
  store i1 %1581, i1* %11, align 1
  br label %1864

1582:                                             ; preds = %1576
  %1583 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1584 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1583, i32 0, i32 16
  %1585 = load i8, i8* %1584, align 1
  %1586 = trunc i8 %1585 to i1
  br i1 %1586, label %1587, label %1632

1587:                                             ; preds = %1582
  %1588 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %62, i64 0, i64 0
  %1589 = call { i64, i64 } @get_stat_atime(%struct.stat* %22) #15
  %1590 = bitcast %struct.timespec* %63 to { i64, i64 }*
  %1591 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1590, i32 0, i32 0
  %1592 = extractvalue { i64, i64 } %1589, 0
  store i64 %1592, i64* %1591, align 8
  %1593 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1590, i32 0, i32 1
  %1594 = extractvalue { i64, i64 } %1589, 1
  store i64 %1594, i64* %1593, align 8
  %1595 = bitcast %struct.timespec* %1588 to i8*
  %1596 = bitcast %struct.timespec* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1595, i8* align 8 %1596, i64 16, i1 false)
  %1597 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %62, i64 0, i64 1
  %1598 = call { i64, i64 } @get_stat_mtime(%struct.stat* %22) #15
  %1599 = bitcast %struct.timespec* %64 to { i64, i64 }*
  %1600 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1599, i32 0, i32 0
  %1601 = extractvalue { i64, i64 } %1598, 0
  store i64 %1601, i64* %1600, align 8
  %1602 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1599, i32 0, i32 1
  %1603 = extractvalue { i64, i64 } %1598, 1
  store i64 %1603, i64* %1602, align 8
  %1604 = bitcast %struct.timespec* %1597 to i8*
  %1605 = bitcast %struct.timespec* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %1604, i8* align 8 %1605, i64 16, i1 false)
  %1606 = load i8, i8* %33, align 1
  %1607 = trunc i8 %1606 to i1
  br i1 %1607, label %1608, label %1612

1608:                                             ; preds = %1587
  %1609 = load i8*, i8** %13, align 8
  %1610 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %62, i64 0, i64 0
  %1611 = call i32 @utimens_symlink(i8* %1609, %struct.timespec* %1610)
  br label %1616

1612:                                             ; preds = %1587
  %1613 = load i8*, i8** %13, align 8
  %1614 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %62, i64 0, i64 0
  %1615 = call i32 @utimens(i8* %1613, %struct.timespec* %1614)
  br label %1616

1616:                                             ; preds = %1612, %1608
  %1617 = phi i32 [ %1611, %1608 ], [ %1615, %1612 ]
  %1618 = icmp ne i32 %1617, 0
  br i1 %1618, label %1619, label %1631

1619:                                             ; preds = %1616
  %1620 = call i32* @__errno_location() #16
  %1621 = load i32, i32* %1620, align 4
  %1622 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.167, i64 0, i64 0)) #13
  %1623 = load i8*, i8** %13, align 8
  %1624 = call i8* @quotearg_style(i32 4, i8* %1623)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1621, i8* %1622, i8* %1624)
  %1625 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1626 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1625, i32 0, i32 21
  %1627 = load i8, i8* %1626, align 4
  %1628 = trunc i8 %1627 to i1
  br i1 %1628, label %1629, label %1630

1629:                                             ; preds = %1619
  store i1 false, i1* %11, align 1
  br label %1864

1630:                                             ; preds = %1619
  br label %1631

1631:                                             ; preds = %1630, %1616
  br label %1632

1632:                                             ; preds = %1631, %1582
  %1633 = load i8, i8* %33, align 1
  %1634 = trunc i8 %1633 to i1
  br i1 %1634, label %1666, label %1635

1635:                                             ; preds = %1632
  %1636 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1637 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1636, i32 0, i32 14
  %1638 = load i8, i8* %1637, align 1
  %1639 = trunc i8 %1638 to i1
  br i1 %1639, label %1640, label %1666

1640:                                             ; preds = %1635
  %1641 = load i8, i8* %14, align 1
  %1642 = trunc i8 %1641 to i1
  br i1 %1642, label %1655, label %1643

1643:                                             ; preds = %1640
  %1644 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 4
  %1645 = load i32, i32* %1644, align 4
  %1646 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 4
  %1647 = load i32, i32* %1646, align 4
  %1648 = icmp eq i32 %1645, %1647
  br i1 %1648, label %1649, label %1655

1649:                                             ; preds = %1643
  %1650 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 5
  %1651 = load i32, i32* %1650, align 8
  %1652 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 5
  %1653 = load i32, i32* %1652, align 8
  %1654 = icmp eq i32 %1651, %1653
  br i1 %1654, label %1666, label %1655

1655:                                             ; preds = %1649, %1643, %1640
  %1656 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1657 = load i8*, i8** %13, align 8
  %1658 = load i8, i8* %14, align 1
  %1659 = trunc i8 %1658 to i1
  %1660 = call i32 @set_owner(%struct.cp_options* %1656, i8* %1657, i32 -1, %struct.stat* %22, i1 zeroext %1659, %struct.stat* %23)
  switch i32 %1660, label %1665 [
    i32 -1, label %1661
    i32 0, label %1662
  ]

1661:                                             ; preds = %1655
  store i1 false, i1* %11, align 1
  br label %1864

1662:                                             ; preds = %1655
  %1663 = load i32, i32* %24, align 4
  %1664 = and i32 %1663, -3585
  store i32 %1664, i32* %24, align 4
  br label %1665

1665:                                             ; preds = %1662, %1655
  br label %1666

1666:                                             ; preds = %1665, %1649, %1635, %1632
  %1667 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1668 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1667, i32 0, i32 24
  %1669 = load i8, i8* %1668, align 1
  %1670 = trunc i8 %1669 to i1
  br i1 %1670, label %1671, label %1682

1671:                                             ; preds = %1666
  %1672 = load i8*, i8** %12, align 8
  %1673 = load i8*, i8** %13, align 8
  %1674 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1675 = call zeroext i1 @copy_attr(i8* %1672, i32 -1, i8* %1673, i32 -1, %struct.cp_options* %1674)
  br i1 %1675, label %1682, label %1676

1676:                                             ; preds = %1671
  %1677 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1678 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1677, i32 0, i32 25
  %1679 = load i8, i8* %1678, align 8
  %1680 = trunc i8 %1679 to i1
  br i1 %1680, label %1681, label %1682

1681:                                             ; preds = %1676
  store i1 false, i1* %11, align 1
  br label %1864

1682:                                             ; preds = %1676, %1671, %1666
  %1683 = load i8, i8* %33, align 1
  %1684 = trunc i8 %1683 to i1
  br i1 %1684, label %1685, label %1688

1685:                                             ; preds = %1682
  %1686 = load i8, i8* %31, align 1
  %1687 = trunc i8 %1686 to i1
  store i1 %1687, i1* %11, align 1
  br label %1864

1688:                                             ; preds = %1682
  %1689 = load i8*, i8** %13, align 8
  call void @set_author(i8* %1689, i32 -1, %struct.stat* %22)
  %1690 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1691 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1690, i32 0, i32 15
  %1692 = load i8, i8* %1691, align 2
  %1693 = trunc i8 %1692 to i1
  br i1 %1693, label %1699, label %1694

1694:                                             ; preds = %1688
  %1695 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1696 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1695, i32 0, i32 9
  %1697 = load i8, i8* %1696, align 8
  %1698 = trunc i8 %1697 to i1
  br i1 %1698, label %1699, label %1712

1699:                                             ; preds = %1694, %1688
  %1700 = load i8*, i8** %12, align 8
  %1701 = load i8*, i8** %13, align 8
  %1702 = load i32, i32* %24, align 4
  %1703 = call i32 @copy_acl(i8* %1700, i32 -1, i8* %1701, i32 -1, i32 %1702)
  %1704 = icmp ne i32 %1703, 0
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1699
  %1706 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1707 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1706, i32 0, i32 21
  %1708 = load i8, i8* %1707, align 4
  %1709 = trunc i8 %1708 to i1
  br i1 %1709, label %1710, label %1711

1710:                                             ; preds = %1705
  store i1 false, i1* %11, align 1
  br label %1864

1711:                                             ; preds = %1705, %1699
  br label %1818

1712:                                             ; preds = %1694
  %1713 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1714 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1713, i32 0, i32 28
  %1715 = load i8, i8* %1714, align 1
  %1716 = trunc i8 %1715 to i1
  br i1 %1716, label %1717, label %1726

1717:                                             ; preds = %1712
  %1718 = load i8*, i8** %13, align 8
  %1719 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1719, i32 0, i32 4
  %1721 = load i32, i32* %1720, align 8
  %1722 = call i32 @set_acl(i8* %1718, i32 -1, i32 %1721)
  %1723 = icmp ne i32 %1722, 0
  br i1 %1723, label %1724, label %1725

1724:                                             ; preds = %1717
  store i1 false, i1* %11, align 1
  br label %1864

1725:                                             ; preds = %1717
  br label %1817

1726:                                             ; preds = %1712
  %1727 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1728 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1727, i32 0, i32 17
  %1729 = load i8, i8* %1728, align 8
  %1730 = trunc i8 %1729 to i1
  br i1 %1730, label %1731, label %1755

1731:                                             ; preds = %1726
  %1732 = load i8, i8* %14, align 1
  %1733 = trunc i8 %1732 to i1
  br i1 %1733, label %1734, label %1755

1734:                                             ; preds = %1731
  %1735 = load i32, i32* %24, align 4
  %1736 = and i32 %1735, 61440
  %1737 = icmp eq i32 %1736, 16384
  br i1 %1737, label %1742, label %1738

1738:                                             ; preds = %1734
  %1739 = load i32, i32* %24, align 4
  %1740 = and i32 %1739, 61440
  %1741 = icmp eq i32 %1740, 49152
  br label %1742

1742:                                             ; preds = %1738, %1734
  %1743 = phi i1 [ true, %1734 ], [ %1741, %1738 ]
  %1744 = zext i1 %1743 to i64
  %1745 = select i1 %1743, i32 511, i32 438
  store i32 %1745, i32* %65, align 4
  %1746 = load i8*, i8** %13, align 8
  %1747 = load i32, i32* %65, align 4
  %1748 = call i32 @cached_umask()
  %1749 = xor i32 %1748, -1
  %1750 = and i32 %1747, %1749
  %1751 = call i32 @set_acl(i8* %1746, i32 -1, i32 %1750)
  %1752 = icmp ne i32 %1751, 0
  br i1 %1752, label %1753, label %1754

1753:                                             ; preds = %1742
  store i1 false, i1* %11, align 1
  br label %1864

1754:                                             ; preds = %1742
  br label %1816

1755:                                             ; preds = %1731, %1726
  %1756 = load i32, i32* %27, align 4
  %1757 = icmp ne i32 %1756, 0
  br i1 %1757, label %1758, label %1792

1758:                                             ; preds = %1755
  %1759 = call i32 @cached_umask()
  %1760 = xor i32 %1759, -1
  %1761 = load i32, i32* %27, align 4
  %1762 = and i32 %1761, %1760
  store i32 %1762, i32* %27, align 4
  %1763 = load i32, i32* %27, align 4
  %1764 = icmp ne i32 %1763, 0
  br i1 %1764, label %1765, label %1791

1765:                                             ; preds = %1758
  %1766 = load i8, i8* %28, align 1
  %1767 = trunc i8 %1766 to i1
  br i1 %1767, label %1791, label %1768

1768:                                             ; preds = %1765
  %1769 = load i8, i8* %14, align 1
  %1770 = trunc i8 %1769 to i1
  br i1 %1770, label %1771, label %1781

1771:                                             ; preds = %1768
  %1772 = load i8*, i8** %13, align 8
  %1773 = call i32 @lstat(i8* %1772, %struct.stat* %23) #13
  %1774 = icmp ne i32 %1773, 0
  br i1 %1774, label %1775, label %1781

1775:                                             ; preds = %1771
  %1776 = call i32* @__errno_location() #16
  %1777 = load i32, i32* %1776, align 4
  %1778 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.129, i64 0, i64 0)) #13
  %1779 = load i8*, i8** %13, align 8
  %1780 = call i8* @quotearg_style(i32 4, i8* %1779)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1777, i8* %1778, i8* %1780)
  store i1 false, i1* %11, align 1
  br label %1864

1781:                                             ; preds = %1771, %1768
  %1782 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %1783 = load i32, i32* %1782, align 8
  store i32 %1783, i32* %25, align 4
  %1784 = load i32, i32* %27, align 4
  %1785 = load i32, i32* %25, align 4
  %1786 = xor i32 %1785, -1
  %1787 = and i32 %1784, %1786
  %1788 = icmp ne i32 %1787, 0
  br i1 %1788, label %1789, label %1790

1789:                                             ; preds = %1781
  store i8 1, i8* %28, align 1
  br label %1790

1790:                                             ; preds = %1789, %1781
  br label %1791

1791:                                             ; preds = %1790, %1765, %1758
  br label %1792

1792:                                             ; preds = %1791, %1755
  %1793 = load i8, i8* %28, align 1
  %1794 = trunc i8 %1793 to i1
  br i1 %1794, label %1795, label %1815

1795:                                             ; preds = %1792
  %1796 = load i8*, i8** %13, align 8
  %1797 = load i32, i32* %25, align 4
  %1798 = load i32, i32* %27, align 4
  %1799 = or i32 %1797, %1798
  %1800 = call i32 @chmod(i8* %1796, i32 %1799) #13
  %1801 = icmp ne i32 %1800, 0
  br i1 %1801, label %1802, label %1814

1802:                                             ; preds = %1795
  %1803 = call i32* @__errno_location() #16
  %1804 = load i32, i32* %1803, align 4
  %1805 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.170, i64 0, i64 0)) #13
  %1806 = load i8*, i8** %13, align 8
  %1807 = call i8* @quotearg_style(i32 4, i8* %1806)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1804, i8* %1805, i8* %1807)
  %1808 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1809 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1808, i32 0, i32 21
  %1810 = load i8, i8* %1809, align 4
  %1811 = trunc i8 %1810 to i1
  br i1 %1811, label %1812, label %1813

1812:                                             ; preds = %1802
  store i1 false, i1* %11, align 1
  br label %1864

1813:                                             ; preds = %1802
  br label %1814

1814:                                             ; preds = %1813, %1795
  br label %1815

1815:                                             ; preds = %1814, %1792
  br label %1816

1816:                                             ; preds = %1815, %1754
  br label %1817

1817:                                             ; preds = %1816, %1725
  br label %1818

1818:                                             ; preds = %1817, %1711
  %1819 = load i8, i8* %31, align 1
  %1820 = trunc i8 %1819 to i1
  store i1 %1820, i1* %11, align 1
  br label %1864

1821:                                             ; preds = %1543, %1498, %1493, %1457, %1394, %1376, %1346, %1323, %1300, %1276, %1262, %1187, %1124, %1105, %1095, %1062, %885, %866, %827, %379
  %1822 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1823 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1822, i32 0, i32 22
  %1824 = load i8, i8* %1823, align 1
  %1825 = trunc i8 %1824 to i1
  br i1 %1825, label %1826, label %1827

1826:                                             ; preds = %1821
  call void @restore_default_fscreatecon_or_die()
  br label %1827

1827:                                             ; preds = %1826, %1821
  %1828 = load i8*, i8** %29, align 8
  %1829 = icmp eq i8* %1828, null
  br i1 %1829, label %1830, label %1835

1830:                                             ; preds = %1827
  %1831 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 1
  %1832 = load i64, i64* %1831, align 8
  %1833 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0
  %1834 = load i64, i64* %1833, align 8
  call void @forget_created(i64 %1832, i64 %1834)
  br label %1835

1835:                                             ; preds = %1830, %1827
  %1836 = load i8*, i8** %30, align 8
  %1837 = icmp ne i8* %1836, null
  br i1 %1837, label %1838, label %1863

1838:                                             ; preds = %1835
  %1839 = load i8*, i8** %30, align 8
  %1840 = load i8*, i8** %13, align 8
  %1841 = call i32 @rename(i8* %1839, i8* %1840) #13
  %1842 = icmp ne i32 %1841, 0
  br i1 %1842, label %1843, label %1849

1843:                                             ; preds = %1838
  %1844 = call i32* @__errno_location() #16
  %1845 = load i32, i32* %1844, align 4
  %1846 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.171, i64 0, i64 0)) #13
  %1847 = load i8*, i8** %13, align 8
  %1848 = call i8* @quotearg_style(i32 4, i8* %1847)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1845, i8* %1846, i8* %1848)
  br label %1862

1849:                                             ; preds = %1838
  %1850 = load %struct.cp_options*, %struct.cp_options** %17, align 8
  %1851 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1850, i32 0, i32 31
  %1852 = load i8, i8* %1851, align 2
  %1853 = trunc i8 %1852 to i1
  br i1 %1853, label %1854, label %1861

1854:                                             ; preds = %1849
  %1855 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.172, i64 0, i64 0)) #13
  %1856 = load i8*, i8** %30, align 8
  %1857 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %1856)
  %1858 = load i8*, i8** %13, align 8
  %1859 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1858)
  %1860 = call i32 (i8*, ...) @printf(i8* %1855, i8* %1857, i8* %1859)
  br label %1861

1861:                                             ; preds = %1854, %1849
  br label %1862

1862:                                             ; preds = %1861, %1843
  br label %1863

1863:                                             ; preds = %1862, %1835
  store i1 false, i1* %11, align 1
  br label %1864

1864:                                             ; preds = %1863, %1818, %1812, %1775, %1753, %1724, %1710, %1685, %1681, %1661, %1629, %1579, %1573, %1054, %990, %962, %952, %948, %886, %851, %709, %644, %594, %561, %517, %491, %464, %443, %422, %417, %397, %381, %313, %290, %194, %166, %140
  %1865 = load i1, i1* %11, align 1
  ret i1 %1865
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %0, i1 zeroext %1) #8 {
  %3 = alloca %struct.cp_options*, align 8
  %4 = alloca i8, align 1
  store %struct.cp_options* %0, %struct.cp_options** %3, align 8
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  %6 = load %struct.cp_options*, %struct.cp_options** %3, align 8
  %7 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = load %struct.cp_options*, %struct.cp_options** %3, align 8
  %12 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = load i8, i8* %4, align 1
  %17 = trunc i8 %16 to i1
  br label %18

18:                                               ; preds = %15, %10
  %19 = phi i1 [ false, %10 ], [ %17, %15 ]
  br label %20

20:                                               ; preds = %18, %2
  %21 = phi i1 [ true, %2 ], [ %19, %18 ]
  ret i1 %21
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %0, %struct.stat* %1, i8* %2, %struct.stat* %3, %struct.cp_options* %4, i8* %5) #3 {
  %7 = alloca i1, align 1
  %8 = alloca i8*, align 8
  %9 = alloca %struct.stat*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.stat*, align 8
  %12 = alloca %struct.cp_options*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.stat*, align 8
  %15 = alloca %struct.stat*, align 8
  %16 = alloca %struct.stat, align 8
  %17 = alloca %struct.stat, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  store i8* %0, i8** %8, align 8
  store %struct.stat* %1, %struct.stat** %9, align 8
  store i8* %2, i8** %10, align 8
  store %struct.stat* %3, %struct.stat** %11, align 8
  store %struct.cp_options* %4, %struct.cp_options** %12, align 8
  store i8* %5, i8** %13, align 8
  %23 = load %struct.stat*, %struct.stat** %9, align 8
  %24 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = load %struct.stat*, %struct.stat** %11, align 8
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %25, %28
  br i1 %29, label %30, label %38

30:                                               ; preds = %6
  %31 = load %struct.stat*, %struct.stat** %9, align 8
  %32 = getelementptr inbounds %struct.stat, %struct.stat* %31, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = load %struct.stat*, %struct.stat** %11, align 8
  %35 = getelementptr inbounds %struct.stat, %struct.stat* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %33, %36
  br label %38

38:                                               ; preds = %30, %6
  %39 = phi i1 [ false, %6 ], [ %37, %30 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %19, align 1
  %41 = load i8*, i8** %13, align 8
  store i8 0, i8* %41, align 1
  %42 = load i8, i8* %19, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %51

44:                                               ; preds = %38
  %45 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %46 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %45, i32 0, i32 8
  %47 = load i8, i8* %46, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load i8*, i8** %13, align 8
  store i8 1, i8* %50, align 1
  store i1 true, i1* %7, align 1
  br label %371

51:                                               ; preds = %44, %38
  %52 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %53 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %102

56:                                               ; preds = %51
  %57 = load i8, i8* %19, align 1
  %58 = trunc i8 %57 to i1
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %18, align 1
  %60 = load %struct.stat*, %struct.stat** %9, align 8
  %61 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 61440
  %64 = icmp eq i32 %63, 40960
  br i1 %64, label %65, label %99

65:                                               ; preds = %56
  %66 = load %struct.stat*, %struct.stat** %11, align 8
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 61440
  %70 = icmp eq i32 %69, 40960
  br i1 %70, label %71, label %99

71:                                               ; preds = %65
  %72 = load i8*, i8** %8, align 8
  %73 = load i8*, i8** %10, align 8
  %74 = call zeroext i1 @same_name(i8* %72, i8* %73)
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %20, align 1
  %76 = load i8, i8* %20, align 1
  %77 = trunc i8 %76 to i1
  br i1 %77, label %95, label %78

78:                                               ; preds = %71
  %79 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %80 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %79, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  store i1 true, i1* %7, align 1
  br label %371

84:                                               ; preds = %78
  %85 = load i8, i8* %18, align 1
  %86 = trunc i8 %85 to i1
  br i1 %86, label %87, label %94

87:                                               ; preds = %84
  %88 = load i8*, i8** %13, align 8
  store i8 1, i8* %88, align 1
  %89 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %90 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 9
  %91 = load i8, i8* %90, align 8
  %92 = trunc i8 %91 to i1
  %93 = xor i1 %92, true
  store i1 %93, i1* %7, align 1
  br label %371

94:                                               ; preds = %84
  br label %95

95:                                               ; preds = %94, %71
  %96 = load i8, i8* %20, align 1
  %97 = trunc i8 %96 to i1
  %98 = xor i1 %97, true
  store i1 %98, i1* %7, align 1
  br label %371

99:                                               ; preds = %65, %56
  %100 = load %struct.stat*, %struct.stat** %9, align 8
  store %struct.stat* %100, %struct.stat** %14, align 8
  %101 = load %struct.stat*, %struct.stat** %11, align 8
  store %struct.stat* %101, %struct.stat** %15, align 8
  br label %152

102:                                              ; preds = %51
  %103 = load i8, i8* %19, align 1
  %104 = trunc i8 %103 to i1
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  store i1 true, i1* %7, align 1
  br label %371

106:                                              ; preds = %102
  %107 = load i8*, i8** %10, align 8
  %108 = call i32 @lstat(i8* %107, %struct.stat* %16) #13
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8*, i8** %8, align 8
  %112 = call i32 @lstat(i8* %111, %struct.stat* %17) #13
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %110, %106
  store i1 true, i1* %7, align 1
  br label %371

115:                                              ; preds = %110
  store %struct.stat* %17, %struct.stat** %14, align 8
  store %struct.stat* %16, %struct.stat** %15, align 8
  %116 = load %struct.stat*, %struct.stat** %14, align 8
  %117 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = load %struct.stat*, %struct.stat** %15, align 8
  %120 = getelementptr inbounds %struct.stat, %struct.stat* %119, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %118, %121
  br i1 %122, label %123, label %131

123:                                              ; preds = %115
  %124 = load %struct.stat*, %struct.stat** %14, align 8
  %125 = getelementptr inbounds %struct.stat, %struct.stat* %124, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = load %struct.stat*, %struct.stat** %15, align 8
  %128 = getelementptr inbounds %struct.stat, %struct.stat* %127, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %126, %129
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i1 [ false, %115 ], [ %130, %123 ]
  %133 = zext i1 %132 to i8
  store i8 %133, i8* %18, align 1
  %134 = load %struct.stat*, %struct.stat** %14, align 8
  %135 = getelementptr inbounds %struct.stat, %struct.stat* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 61440
  %138 = icmp eq i32 %137, 40960
  br i1 %138, label %139, label %151

139:                                              ; preds = %131
  %140 = load %struct.stat*, %struct.stat** %15, align 8
  %141 = getelementptr inbounds %struct.stat, %struct.stat* %140, i32 0, i32 3
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 61440
  %144 = icmp eq i32 %143, 40960
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %147 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %146, i32 0, i32 6
  %148 = load i8, i8* %147, align 1
  %149 = trunc i8 %148 to i1
  br i1 %149, label %150, label %151

150:                                              ; preds = %145
  store i1 true, i1* %7, align 1
  br label %371

151:                                              ; preds = %145, %139, %131
  br label %152

152:                                              ; preds = %151, %99
  %153 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %154 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %189

157:                                              ; preds = %152
  %158 = load i8, i8* %18, align 1
  %159 = trunc i8 %158 to i1
  br i1 %159, label %184, label %160

160:                                              ; preds = %157
  %161 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %162 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 9
  %163 = load i8, i8* %162, align 8
  %164 = trunc i8 %163 to i1
  br i1 %164, label %183, label %165

165:                                              ; preds = %160
  %166 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %167 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp ne i32 %168, 2
  br i1 %169, label %170, label %183

170:                                              ; preds = %165
  %171 = load %struct.stat*, %struct.stat** %14, align 8
  %172 = getelementptr inbounds %struct.stat, %struct.stat* %171, i32 0, i32 3
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 61440
  %175 = icmp eq i32 %174, 40960
  br i1 %175, label %176, label %183

176:                                              ; preds = %170
  %177 = load %struct.stat*, %struct.stat** %15, align 8
  %178 = getelementptr inbounds %struct.stat, %struct.stat* %177, i32 0, i32 3
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 61440
  %181 = icmp eq i32 %180, 40960
  br i1 %181, label %183, label %182

182:                                              ; preds = %176
  store i1 false, i1* %7, align 1
  br label %371

183:                                              ; preds = %176, %170, %165, %160
  store i1 true, i1* %7, align 1
  br label %371

184:                                              ; preds = %157
  %185 = load i8*, i8** %8, align 8
  %186 = load i8*, i8** %10, align 8
  %187 = call zeroext i1 @same_name(i8* %185, i8* %186)
  %188 = xor i1 %187, true
  store i1 %188, i1* %7, align 1
  br label %371

189:                                              ; preds = %152
  %190 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %191 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %190, i32 0, i32 9
  %192 = load i8, i8* %191, align 8
  %193 = trunc i8 %192 to i1
  br i1 %193, label %199, label %194

194:                                              ; preds = %189
  %195 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %196 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %195, i32 0, i32 6
  %197 = load i8, i8* %196, align 1
  %198 = trunc i8 %197 to i1
  br i1 %198, label %199, label %225

199:                                              ; preds = %194, %189
  %200 = load %struct.stat*, %struct.stat** %15, align 8
  %201 = getelementptr inbounds %struct.stat, %struct.stat* %200, i32 0, i32 3
  %202 = load i32, i32* %201, align 8
  %203 = and i32 %202, 61440
  %204 = icmp eq i32 %203, 40960
  br i1 %204, label %205, label %206

205:                                              ; preds = %199
  store i1 true, i1* %7, align 1
  br label %371

206:                                              ; preds = %199
  %207 = load i8, i8* %18, align 1
  %208 = trunc i8 %207 to i1
  br i1 %208, label %209, label %224

209:                                              ; preds = %206
  %210 = load %struct.stat*, %struct.stat** %15, align 8
  %211 = getelementptr inbounds %struct.stat, %struct.stat* %210, i32 0, i32 2
  %212 = load i64, i64* %211, align 8
  %213 = icmp ult i64 1, %212
  br i1 %213, label %214, label %224

214:                                              ; preds = %209
  %215 = load i8*, i8** %8, align 8
  %216 = load i8*, i8** %10, align 8
  %217 = call zeroext i1 @same_name(i8* %215, i8* %216)
  br i1 %217, label %224, label %218

218:                                              ; preds = %214
  %219 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %220 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 9
  %221 = load i8, i8* %220, align 8
  %222 = trunc i8 %221 to i1
  %223 = xor i1 %222, true
  store i1 %223, i1* %7, align 1
  br label %371

224:                                              ; preds = %214, %209, %206
  br label %225

225:                                              ; preds = %224, %194
  %226 = load %struct.stat*, %struct.stat** %14, align 8
  %227 = getelementptr inbounds %struct.stat, %struct.stat* %226, i32 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = and i32 %228, 61440
  %230 = icmp eq i32 %229, 40960
  br i1 %230, label %262, label %231

231:                                              ; preds = %225
  %232 = load %struct.stat*, %struct.stat** %15, align 8
  %233 = getelementptr inbounds %struct.stat, %struct.stat* %232, i32 0, i32 3
  %234 = load i32, i32* %233, align 8
  %235 = and i32 %234, 61440
  %236 = icmp eq i32 %235, 40960
  br i1 %236, label %262, label %237

237:                                              ; preds = %231
  %238 = load %struct.stat*, %struct.stat** %14, align 8
  %239 = getelementptr inbounds %struct.stat, %struct.stat* %238, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  %241 = load %struct.stat*, %struct.stat** %15, align 8
  %242 = getelementptr inbounds %struct.stat, %struct.stat* %241, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = icmp eq i64 %240, %243
  br i1 %244, label %245, label %253

245:                                              ; preds = %237
  %246 = load %struct.stat*, %struct.stat** %14, align 8
  %247 = getelementptr inbounds %struct.stat, %struct.stat* %246, i32 0, i32 0
  %248 = load i64, i64* %247, align 8
  %249 = load %struct.stat*, %struct.stat** %15, align 8
  %250 = getelementptr inbounds %struct.stat, %struct.stat* %249, i32 0, i32 0
  %251 = load i64, i64* %250, align 8
  %252 = icmp eq i64 %248, %251
  br i1 %252, label %254, label %253

253:                                              ; preds = %245, %237
  store i1 true, i1* %7, align 1
  br label %371

254:                                              ; preds = %245
  %255 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %256 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %255, i32 0, i32 8
  %257 = load i8, i8* %256, align 1
  %258 = trunc i8 %257 to i1
  br i1 %258, label %259, label %261

259:                                              ; preds = %254
  %260 = load i8*, i8** %13, align 8
  store i8 1, i8* %260, align 1
  store i1 true, i1* %7, align 1
  br label %371

261:                                              ; preds = %254
  br label %262

262:                                              ; preds = %261, %231, %225
  %263 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %264 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %263, i32 0, i32 9
  %265 = load i8, i8* %264, align 8
  %266 = trunc i8 %265 to i1
  br i1 %266, label %267, label %293

267:                                              ; preds = %262
  %268 = load %struct.stat*, %struct.stat** %9, align 8
  %269 = getelementptr inbounds %struct.stat, %struct.stat* %268, i32 0, i32 3
  %270 = load i32, i32* %269, align 8
  %271 = and i32 %270, 61440
  %272 = icmp eq i32 %271, 40960
  br i1 %272, label %273, label %293

273:                                              ; preds = %267
  %274 = load %struct.stat*, %struct.stat** %15, align 8
  %275 = getelementptr inbounds %struct.stat, %struct.stat* %274, i32 0, i32 2
  %276 = load i64, i64* %275, align 8
  %277 = icmp ult i64 1, %276
  br i1 %277, label %278, label %293

278:                                              ; preds = %273
  %279 = load i8*, i8** %8, align 8
  %280 = call i8* @canonicalize_file_name(i8* %279) #13
  store i8* %280, i8** %21, align 8
  %281 = load i8*, i8** %21, align 8
  %282 = icmp ne i8* %281, null
  br i1 %282, label %283, label %292

283:                                              ; preds = %278
  %284 = load i8*, i8** %21, align 8
  %285 = load i8*, i8** %10, align 8
  %286 = call zeroext i1 @same_name(i8* %284, i8* %285)
  %287 = xor i1 %286, true
  %288 = zext i1 %287 to i8
  store i8 %288, i8* %22, align 1
  %289 = load i8*, i8** %21, align 8
  call void @free(i8* %289) #13
  %290 = load i8, i8* %22, align 1
  %291 = trunc i8 %290 to i1
  store i1 %291, i1* %7, align 1
  br label %371

292:                                              ; preds = %278
  br label %293

293:                                              ; preds = %292, %273, %267, %262
  %294 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %295 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %294, i32 0, i32 29
  %296 = load i8, i8* %295, align 4
  %297 = trunc i8 %296 to i1
  br i1 %297, label %298, label %305

298:                                              ; preds = %293
  %299 = load %struct.stat*, %struct.stat** %15, align 8
  %300 = getelementptr inbounds %struct.stat, %struct.stat* %299, i32 0, i32 3
  %301 = load i32, i32* %300, align 8
  %302 = and i32 %301, 61440
  %303 = icmp eq i32 %302, 40960
  br i1 %303, label %304, label %305

304:                                              ; preds = %298
  store i1 true, i1* %7, align 1
  br label %371

305:                                              ; preds = %298, %293
  %306 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %307 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %306, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = icmp eq i32 %308, 2
  br i1 %309, label %310, label %370

310:                                              ; preds = %305
  %311 = load %struct.stat*, %struct.stat** %14, align 8
  %312 = getelementptr inbounds %struct.stat, %struct.stat* %311, i32 0, i32 3
  %313 = load i32, i32* %312, align 8
  %314 = and i32 %313, 61440
  %315 = icmp eq i32 %314, 40960
  br i1 %315, label %320, label %316

316:                                              ; preds = %310
  %317 = load %struct.stat*, %struct.stat** %14, align 8
  %318 = bitcast %struct.stat* %17 to i8*
  %319 = bitcast %struct.stat* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %319, i64 144, i1 false)
  br label %326

320:                                              ; preds = %310
  %321 = load i8*, i8** %8, align 8
  %322 = call i32 @stat(i8* %321, %struct.stat* %17) #13
  %323 = icmp ne i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %320
  store i1 true, i1* %7, align 1
  br label %371

325:                                              ; preds = %320
  br label %326

326:                                              ; preds = %325, %316
  %327 = load %struct.stat*, %struct.stat** %15, align 8
  %328 = getelementptr inbounds %struct.stat, %struct.stat* %327, i32 0, i32 3
  %329 = load i32, i32* %328, align 8
  %330 = and i32 %329, 61440
  %331 = icmp eq i32 %330, 40960
  br i1 %331, label %336, label %332

332:                                              ; preds = %326
  %333 = load %struct.stat*, %struct.stat** %15, align 8
  %334 = bitcast %struct.stat* %16 to i8*
  %335 = bitcast %struct.stat* %333 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 144, i1 false)
  br label %342

336:                                              ; preds = %326
  %337 = load i8*, i8** %10, align 8
  %338 = call i32 @stat(i8* %337, %struct.stat* %16) #13
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %336
  store i1 true, i1* %7, align 1
  br label %371

341:                                              ; preds = %336
  br label %342

342:                                              ; preds = %341, %332
  %343 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 1
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = icmp eq i64 %344, %346
  br i1 %347, label %348, label %354

348:                                              ; preds = %342
  %349 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0
  %352 = load i64, i64* %351, align 8
  %353 = icmp eq i64 %350, %352
  br i1 %353, label %355, label %354

354:                                              ; preds = %348, %342
  store i1 true, i1* %7, align 1
  br label %371

355:                                              ; preds = %348
  %356 = load %struct.cp_options*, %struct.cp_options** %12, align 8
  %357 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %356, i32 0, i32 8
  %358 = load i8, i8* %357, align 1
  %359 = trunc i8 %358 to i1
  br i1 %359, label %360, label %369

360:                                              ; preds = %355
  %361 = load %struct.stat*, %struct.stat** %15, align 8
  %362 = getelementptr inbounds %struct.stat, %struct.stat* %361, i32 0, i32 3
  %363 = load i32, i32* %362, align 8
  %364 = and i32 %363, 61440
  %365 = icmp eq i32 %364, 40960
  %366 = xor i1 %365, true
  %367 = load i8*, i8** %13, align 8
  %368 = zext i1 %366 to i8
  store i8 %368, i8* %367, align 1
  store i1 true, i1* %7, align 1
  br label %371

369:                                              ; preds = %355
  br label %370

370:                                              ; preds = %369, %305
  store i1 false, i1* %7, align 1
  br label %371

371:                                              ; preds = %370, %360, %354, %340, %324, %304, %283, %259, %253, %218, %205, %184, %183, %182, %150, %114, %105, %95, %87, %83, %49
  %372 = load i1, i1* %7, align 1
  ret i1 %372
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %0, i8* %1, i1 zeroext %2, i1 zeroext %3, i1 zeroext %4) #3 {
  %6 = alloca i1, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i8* %1, i8** %8, align 8
  %13 = zext i1 %2 to i8
  store i8 %13, i8* %9, align 1
  %14 = zext i1 %3 to i8
  store i8 %14, i8* %10, align 1
  %15 = zext i1 %4 to i8
  store i8 %15, i8* %11, align 1
  %16 = load i8*, i8** %7, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = load i8, i8* %11, align 1
  %19 = trunc i8 %18 to i1
  %20 = zext i1 %19 to i64
  %21 = select i1 %19, i32 1024, i32 0
  %22 = load i8, i8* %9, align 1
  %23 = trunc i8 %22 to i1
  %24 = call i32 @force_linkat(i32 -100, i8* %16, i32 -100, i8* %17, i32 %21, i1 zeroext %23)
  store i32 %24, i32* %12, align 4
  %25 = load i32, i32* %12, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %5
  %28 = call i32* @__errno_location() #16
  %29 = load i32, i32* %28, align 4
  %30 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.197, i64 0, i64 0)) #13
  %31 = load i8*, i8** %8, align 8
  %32 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %31)
  %33 = load i8*, i8** %7, align 8
  %34 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %33)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* %30, i8* %32, i8* %34)
  store i1 false, i1* %6, align 1
  br label %47

35:                                               ; preds = %5
  %36 = load i32, i32* %12, align 4
  %37 = icmp slt i32 0, %36
  br i1 %37, label %38, label %46

38:                                               ; preds = %35
  %39 = load i8, i8* %10, align 1
  %40 = trunc i8 %39 to i1
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.142, i64 0, i64 0)) #13
  %43 = load i8*, i8** %8, align 8
  %44 = call i8* @quotearg_style(i32 4, i8* %43)
  %45 = call i32 (i8*, ...) @printf(i8* %42, i8* %44)
  br label %46

46:                                               ; preds = %41, %38, %35
  store i1 true, i1* %6, align 1
  br label %47

47:                                               ; preds = %46, %27
  %48 = load i1, i1* %6, align 1
  ret i1 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %0, i8* %1, %struct.stat* %2) #3 {
  %4 = alloca %struct.cp_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.stat* %2, %struct.stat** %6, align 8
  %7 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = trunc i8 %9 to i1
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %13

12:                                               ; preds = %3
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.196, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.128, i64 0, i64 0), i32 1746, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #14
  unreachable

13:                                               ; preds = %11
  %14 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %15 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %47, label %18

18:                                               ; preds = %13
  %19 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %39, label %23

23:                                               ; preds = %18
  %24 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %25 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %30 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 32
  %31 = load i8, i8* %30, align 1
  %32 = trunc i8 %31 to i1
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  %34 = load i8*, i8** %5, align 8
  %35 = load %struct.stat*, %struct.stat** %6, align 8
  %36 = getelementptr inbounds %struct.stat, %struct.stat* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = call zeroext i1 @writable_destination(i8* %34, i32 %37)
  br i1 %38, label %45, label %39

39:                                               ; preds = %33, %18
  %40 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %41 = load i8*, i8** %5, align 8
  %42 = load %struct.stat*, %struct.stat** %6, align 8
  %43 = call zeroext i1 @overwrite_ok(%struct.cp_options* %40, i8* %41, %struct.stat* %42)
  %44 = xor i1 %43, true
  br label %45

45:                                               ; preds = %39, %33, %28, %23
  %46 = phi i1 [ false, %33 ], [ false, %28 ], [ false, %23 ], [ %44, %39 ]
  br label %47

47:                                               ; preds = %45, %13
  %48 = phi i1 [ true, %13 ], [ %46, %45 ]
  ret i1 %48
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %0, i8* %1, %struct.stat* %2) #3 {
  %4 = alloca %struct.cp_options*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca [12 x i8], align 1
  store %struct.cp_options* %0, %struct.cp_options** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.stat* %2, %struct.stat** %6, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load %struct.stat*, %struct.stat** %6, align 8
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = call zeroext i1 @writable_destination(i8* %8, i32 %11)
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = load %struct.stat*, %struct.stat** %6, align 8
  %15 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 0
  call void @strmode(i32 %16, i8* %17)
  %18 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 10
  store i8 0, i8* %18, align 1
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %21 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 9
  %22 = load i8, i8* %21, align 8
  %23 = trunc i8 %22 to i1
  br i1 %23, label %34, label %24

24:                                               ; preds = %13
  %25 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %26 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 6
  %27 = load i8, i8* %26, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = load %struct.cp_options*, %struct.cp_options** %4, align 8
  %31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 7
  %32 = load i8, i8* %31, align 2
  %33 = trunc i8 %32 to i1
  br i1 %33, label %34, label %36

34:                                               ; preds = %29, %24, %13
  %35 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.193, i64 0, i64 0)) #13
  br label %38

36:                                               ; preds = %29
  %37 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.194, i64 0, i64 0)) #13
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i8* [ %35, %34 ], [ %37, %36 ]
  %40 = load i8*, i8** @program_name, align 8
  %41 = load i8*, i8** %5, align 8
  %42 = call i8* @quotearg_style(i32 4, i8* %41)
  %43 = load %struct.stat*, %struct.stat** %6, align 8
  %44 = getelementptr inbounds %struct.stat, %struct.stat* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 4095
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 1
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %39, i8* %40, i8* %42, i64 %47, i8* %48)
  br label %57

50:                                               ; preds = %3
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.195, i64 0, i64 0)) #13
  %53 = load i8*, i8** @program_name, align 8
  %54 = load i8*, i8** %5, align 8
  %55 = call i8* @quotearg_style(i32 4, i8* %54)
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* %52, i8* %53, i8* %55)
  br label %57

57:                                               ; preds = %50, %38
  %58 = call zeroext i1 @yesno()
  ret i1 %58
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %0) #3 {
  %2 = alloca i1, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 46
  br i1 %9, label %10, label %30

10:                                               ; preds = %1
  %11 = load i8*, i8** %3, align 8
  %12 = load i8*, i8** %3, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 46
  %17 = zext i1 %16 to i32
  %18 = add nsw i32 %17, 1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %11, i64 %19
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %4, align 1
  %22 = load i8, i8* %4, align 1
  %23 = icmp ne i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %10
  %25 = load i8, i8* %4, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 47
  br label %28

28:                                               ; preds = %24, %10
  %29 = phi i1 [ true, %10 ], [ %27, %24 ]
  store i1 %29, i1* %2, align 1
  br label %31

30:                                               ; preds = %1
  store i1 false, i1* %2, align 1
  br label %31

31:                                               ; preds = %30, %28
  %32 = load i1, i1* %2, align 1
  ret i1 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %0, %struct.stat* %1, i8* %2) #3 {
  %4 = alloca i1, align 1
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.stat, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store %struct.stat* %1, %struct.stat** %6, align 8
  store i8* %2, i8** %7, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = call i64 @strlen(i8* %16) #15
  store i64 %17, i64* %8, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = call i8* @last_component(i8* %18) #15
  store i8* %19, i8** %9, align 8
  %20 = load i8*, i8** %9, align 8
  %21 = call i64 @strlen(i8* %20) #15
  store i64 %21, i64* %10, align 8
  %22 = load i8*, i8** @simple_backup_suffix, align 8
  %23 = call i64 @strlen(i8* %22) #15
  store i64 %23, i64* %11, align 8
  %24 = load i64, i64* %8, align 8
  %25 = load i64, i64* %10, align 8
  %26 = load i64, i64* %11, align 8
  %27 = add i64 %25, %26
  %28 = icmp eq i64 %24, %27
  br i1 %28, label %29, label %42

29:                                               ; preds = %3
  %30 = load i8*, i8** %5, align 8
  %31 = load i8*, i8** %9, align 8
  %32 = load i64, i64* %10, align 8
  %33 = call i32 @memcmp(i8* %30, i8* %31, i64 %32) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = load i8*, i8** %5, align 8
  %37 = load i64, i64* %10, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8*, i8** @simple_backup_suffix, align 8
  %40 = call i32 @strcmp(i8* %38, i8* %39) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %35, %29, %3
  store i1 false, i1* %4, align 1
  br label %80

43:                                               ; preds = %35
  %44 = load i8*, i8** %7, align 8
  %45 = call i64 @strlen(i8* %44) #15
  store i64 %45, i64* %12, align 8
  %46 = load i64, i64* %12, align 8
  %47 = load i64, i64* %11, align 8
  %48 = add i64 %46, %47
  %49 = add i64 %48, 1
  %50 = call noalias i8* @xmalloc(i64 %49)
  store i8* %50, i8** %13, align 8
  %51 = load i8*, i8** %13, align 8
  %52 = load i8*, i8** %7, align 8
  %53 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %52, i64 %53, i1 false)
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = load i8*, i8** @simple_backup_suffix, align 8
  %56 = call i8* @strcpy(i8* %54, i8* %55) #13
  %57 = load i8*, i8** %13, align 8
  %58 = call i32 @stat(i8* %57, %struct.stat* %14) #13
  store i32 %58, i32* %15, align 4
  %59 = load i8*, i8** %13, align 8
  call void @free(i8* %59) #13
  %60 = load i32, i32* %15, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %43
  %63 = load %struct.stat*, %struct.stat** %6, align 8
  %64 = getelementptr inbounds %struct.stat, %struct.stat* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %65, %67
  br i1 %68, label %69, label %76

69:                                               ; preds = %62
  %70 = load %struct.stat*, %struct.stat** %6, align 8
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %70, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %72, %74
  br label %76

76:                                               ; preds = %69, %62
  %77 = phi i1 [ false, %62 ], [ %75, %69 ]
  br label %78

78:                                               ; preds = %76, %43
  %79 = phi i1 [ false, %43 ], [ %77, %76 ]
  store i1 %79, i1* %4, align 1
  br label %80

80:                                               ; preds = %78, %42
  %81 = load i1, i1* %4, align 1
  ret i1 %81
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %0, i8* %1, i8* %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7)
  %9 = load i8*, i8** %5, align 8
  %10 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %9)
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.191, i64 0, i64 0), i8* %8, i8* %10)
  %12 = load i8*, i8** %6, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.192, i64 0, i64 0)) #13
  %16 = load i8*, i8** %6, align 8
  %17 = call i8* @quotearg_style(i32 4, i8* %16)
  %18 = call i32 (i8*, ...) @printf(i8* %15, i8* %17)
  br label %19

19:                                               ; preds = %14, %3
  %20 = call i32 @putchar_unlocked(i32 10)
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #1

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %0, %struct.dir_list* %1) #8 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.stat*, align 8
  %5 = alloca %struct.dir_list*, align 8
  store %struct.stat* %0, %struct.stat** %4, align 8
  store %struct.dir_list* %1, %struct.dir_list** %5, align 8
  br label %6

6:                                                ; preds = %26, %2
  %7 = load %struct.dir_list*, %struct.dir_list** %5, align 8
  %8 = icmp ne %struct.dir_list* %7, null
  br i1 %8, label %9, label %30

9:                                                ; preds = %6
  %10 = load %struct.dir_list*, %struct.dir_list** %5, align 8
  %11 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %10, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = load %struct.stat*, %struct.stat** %4, align 8
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %12, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %9
  %18 = load %struct.dir_list*, %struct.dir_list** %5, align 8
  %19 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %18, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = load %struct.stat*, %struct.stat** %4, align 8
  %22 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %20, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %17
  store i1 true, i1* %3, align 1
  br label %31

26:                                               ; preds = %17, %9
  %27 = load %struct.dir_list*, %struct.dir_list** %5, align 8
  %28 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %27, i32 0, i32 0
  %29 = load %struct.dir_list*, %struct.dir_list** %28, align 8
  store %struct.dir_list* %29, %struct.dir_list** %5, align 8
  br label %6, !llvm.loop !15

30:                                               ; preds = %6
  store i1 false, i1* %3, align 1
  br label %31

31:                                               ; preds = %30, %25
  %32 = load i1, i1* %3, align 1
  ret i1 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %0, i8* %1, i1 zeroext %2, %struct.stat* %3, %struct.dir_list* %4, %struct.cp_options* %5, i8* %6, i8* %7) #3 {
  %9 = alloca i1, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %struct.stat*, align 8
  %14 = alloca %struct.dir_list*, align 8
  %15 = alloca %struct.cp_options*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %struct.cp_options, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  store i8* %0, i8** %10, align 8
  store i8* %1, i8** %11, align 8
  %27 = zext i1 %2 to i8
  store i8 %27, i8* %12, align 1
  store %struct.stat* %3, %struct.stat** %13, align 8
  store %struct.dir_list* %4, %struct.dir_list** %14, align 8
  store %struct.cp_options* %5, %struct.cp_options** %15, align 8
  store i8* %6, i8** %16, align 8
  store i8* %7, i8** %17, align 8
  %28 = load %struct.cp_options*, %struct.cp_options** %15, align 8
  %29 = bitcast %struct.cp_options* %20 to i8*
  %30 = bitcast %struct.cp_options* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 80, i1 false)
  store i8 1, i8* %21, align 1
  %31 = load i8*, i8** %10, align 8
  %32 = call i8* @savedir(i8* %31, i32 2)
  store i8* %32, i8** %18, align 8
  %33 = load i8*, i8** %18, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %41

35:                                               ; preds = %8
  %36 = call i32* @__errno_location() #16
  %37 = load i32, i32* %36, align 4
  %38 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.190, i64 0, i64 0)) #13
  %39 = load i8*, i8** %10, align 8
  %40 = call i8* @quotearg_style(i32 4, i8* %39)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %37, i8* %38, i8* %40)
  store i1 false, i1* %9, align 1
  br label %118

41:                                               ; preds = %8
  %42 = load %struct.cp_options*, %struct.cp_options** %15, align 8
  %43 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 3
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 1
  store i32 2, i32* %47, align 4
  br label %48

48:                                               ; preds = %46, %41
  store i8 0, i8* %22, align 1
  %49 = load i8*, i8** %18, align 8
  store i8* %49, i8** %19, align 8
  br label %50

50:                                               ; preds = %95, %48
  %51 = load i8*, i8** %19, align 8
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %110

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 8
  %57 = load i8*, i8** %19, align 8
  %58 = call i8* @file_name_concat(i8* %56, i8* %57, i8** null)
  store i8* %58, i8** %24, align 8
  %59 = load i8*, i8** %11, align 8
  %60 = load i8*, i8** %19, align 8
  %61 = call i8* @file_name_concat(i8* %59, i8* %60, i8** null)
  store i8* %61, i8** %25, align 8
  %62 = load i8*, i8** %16, align 8
  %63 = load i8, i8* %62, align 1
  %64 = trunc i8 %63 to i1
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %26, align 1
  %66 = load i8*, i8** %24, align 8
  %67 = load i8*, i8** %25, align 8
  %68 = load i8, i8* %12, align 1
  %69 = trunc i8 %68 to i1
  %70 = load %struct.stat*, %struct.stat** %13, align 8
  %71 = load %struct.dir_list*, %struct.dir_list** %14, align 8
  %72 = call zeroext i1 @copy_internal(i8* %66, i8* %67, i1 zeroext %69, %struct.stat* %70, %struct.dir_list* %71, %struct.cp_options* %20, i1 zeroext false, i8* %26, i8* %23, i8* null)
  %73 = zext i1 %72 to i32
  %74 = load i8, i8* %21, align 1
  %75 = trunc i8 %74 to i1
  %76 = zext i1 %75 to i32
  %77 = and i32 %76, %73
  %78 = icmp ne i32 %77, 0
  %79 = zext i1 %78 to i8
  store i8 %79, i8* %21, align 1
  %80 = load i8, i8* %23, align 1
  %81 = trunc i8 %80 to i1
  %82 = zext i1 %81 to i32
  %83 = load i8*, i8** %17, align 8
  %84 = load i8, i8* %83, align 1
  %85 = trunc i8 %84 to i1
  %86 = zext i1 %85 to i32
  %87 = or i32 %86, %82
  %88 = icmp ne i32 %87, 0
  %89 = zext i1 %88 to i8
  store i8 %89, i8* %83, align 1
  %90 = load i8*, i8** %25, align 8
  call void @free(i8* %90) #13
  %91 = load i8*, i8** %24, align 8
  call void @free(i8* %91) #13
  %92 = load i8, i8* %23, align 1
  %93 = trunc i8 %92 to i1
  br i1 %93, label %94, label %95

94:                                               ; preds = %55
  br label %110

95:                                               ; preds = %55
  %96 = load i8, i8* %26, align 1
  %97 = trunc i8 %96 to i1
  %98 = zext i1 %97 to i32
  %99 = load i8, i8* %22, align 1
  %100 = trunc i8 %99 to i1
  %101 = zext i1 %100 to i32
  %102 = or i32 %101, %98
  %103 = icmp ne i32 %102, 0
  %104 = zext i1 %103 to i8
  store i8 %104, i8* %22, align 1
  %105 = load i8*, i8** %19, align 8
  %106 = call i64 @strlen(i8* %105) #15
  %107 = add i64 %106, 1
  %108 = load i8*, i8** %19, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  store i8* %109, i8** %19, align 8
  br label %50, !llvm.loop !16

110:                                              ; preds = %94, %50
  %111 = load i8*, i8** %18, align 8
  call void @free(i8* %111) #13
  %112 = load i8, i8* %22, align 1
  %113 = trunc i8 %112 to i1
  %114 = load i8*, i8** %16, align 8
  %115 = zext i1 %113 to i8
  store i8 %115, i8* %114, align 1
  %116 = load i8, i8* %21, align 1
  %117 = trunc i8 %116 to i1
  store i1 %117, i1* %9, align 1
  br label %118

118:                                              ; preds = %110, %35
  %119 = load i1, i1* %9, align 1
  ret i1 %119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %0, i8* %1, %struct.cp_options* %2, i32 %3, i32 %4, i8* %5, %struct.stat* %6) #3 {
  %8 = alloca i1, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.cp_options*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca %struct.stat*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.stat, align 8
  %24 = alloca %struct.stat, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %struct.stat, align 8
  %30 = alloca i8, align 1
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca i8, align 1
  %39 = alloca i64, align 8
  %40 = alloca i8, align 1
  %41 = alloca [2 x %struct.timespec], align 16
  %42 = alloca %struct.timespec, align 8
  %43 = alloca %struct.timespec, align 8
  %44 = alloca i8, align 1
  store i8* %0, i8** %9, align 8
  store i8* %1, i8** %10, align 8
  store %struct.cp_options* %2, %struct.cp_options** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i8* %5, i8** %14, align 8
  store %struct.stat* %6, %struct.stat** %15, align 8
  store i8* null, i8** %17, align 8
  store i8* null, i8** %18, align 8
  %45 = load %struct.stat*, %struct.stat** %15, align 8
  %46 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %22, align 4
  store i8 1, i8* %25, align 1
  %48 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %49 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %48, i32 0, i32 20
  %50 = load i8, i8* %49, align 1
  %51 = trunc i8 %50 to i1
  %52 = zext i1 %51 to i8
  store i8 %52, i8* %26, align 1
  %53 = load i8*, i8** %9, align 8
  %54 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %55 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 2
  %58 = zext i1 %57 to i64
  %59 = select i1 %57, i32 131072, i32 0
  %60 = or i32 0, %59
  %61 = call i32 (i8*, i32, ...) @open_safer(i8* %53, i32 %60)
  store i32 %61, i32* %21, align 4
  %62 = load i32, i32* %21, align 4
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %7
  %65 = call i32* @__errno_location() #16
  %66 = load i32, i32* %65, align 4
  %67 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.175, i64 0, i64 0)) #13
  %68 = load i8*, i8** %9, align 8
  %69 = call i8* @quotearg_style(i32 4, i8* %68)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %66, i8* %67, i8* %69)
  store i1 false, i1* %8, align 1
  br label %735

70:                                               ; preds = %7
  %71 = load i32, i32* %21, align 4
  %72 = call i32 @fstat(i32 %71, %struct.stat* %24) #13
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = call i32* @__errno_location() #16
  %76 = load i32, i32* %75, align 4
  %77 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.176, i64 0, i64 0)) #13
  %78 = load i8*, i8** %9, align 8
  %79 = call i8* @quotearg_style(i32 4, i8* %78)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %76, i8* %77, i8* %79)
  store i8 0, i8* %25, align 1
  br label %720

80:                                               ; preds = %70
  %81 = load %struct.stat*, %struct.stat** %15, align 8
  %82 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %83, %85
  br i1 %86, label %87, label %94

87:                                               ; preds = %80
  %88 = load %struct.stat*, %struct.stat** %15, align 8
  %89 = getelementptr inbounds %struct.stat, %struct.stat* %88, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %90, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %87, %80
  %95 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.177, i64 0, i64 0)) #13
  %96 = load i8*, i8** %9, align 8
  %97 = call i8* @quotearg_style(i32 4, i8* %96)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %95, i8* %97)
  store i8 0, i8* %25, align 1
  br label %720

98:                                               ; preds = %87
  %99 = load i8*, i8** %14, align 8
  %100 = load i8, i8* %99, align 1
  %101 = trunc i8 %100 to i1
  br i1 %101, label %190, label %102

102:                                              ; preds = %98
  %103 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %103, i32 0, i32 20
  %105 = load i8, i8* %104, align 1
  %106 = trunc i8 %105 to i1
  %107 = zext i1 %106 to i64
  %108 = select i1 %106, i32 512, i32 0
  %109 = or i32 1, %108
  store i32 %109, i32* %27, align 4
  %110 = load i8*, i8** %10, align 8
  %111 = load i32, i32* %27, align 4
  %112 = call i32 (i8*, i32, ...) @open_safer(i8* %110, i32 %111)
  store i32 %112, i32* %19, align 4
  %113 = call i32* @__errno_location() #16
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %20, align 4
  %115 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %116 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 18
  %117 = load i8, i8* %116, align 1
  %118 = trunc i8 %117 to i1
  br i1 %118, label %124, label %119

119:                                              ; preds = %102
  %120 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %121 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %120, i32 0, i32 22
  %122 = load i8, i8* %121, align 1
  %123 = trunc i8 %122 to i1
  br i1 %123, label %124, label %143

124:                                              ; preds = %119, %102
  %125 = load i32, i32* %19, align 4
  %126 = icmp sle i32 0, %125
  br i1 %126, label %127, label %143

127:                                              ; preds = %124
  %128 = load i8*, i8** %10, align 8
  %129 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %130 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %129, i32 0, i32 22
  %131 = load i8, i8* %130, align 1
  %132 = trunc i8 %131 to i1
  %133 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %134 = call zeroext i1 @set_file_security_ctx(i8* %128, i1 zeroext %132, i1 zeroext false, %struct.cp_options* %133)
  br i1 %134, label %142, label %135

135:                                              ; preds = %127
  %136 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %137 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %136, i32 0, i32 23
  %138 = load i8, i8* %137, align 2
  %139 = trunc i8 %138 to i1
  br i1 %139, label %140, label %141

140:                                              ; preds = %135
  store i8 0, i8* %25, align 1
  br label %709

141:                                              ; preds = %135
  br label %142

142:                                              ; preds = %141, %127
  br label %143

143:                                              ; preds = %142, %124, %119
  %144 = load i32, i32* %19, align 4
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %146, label %189

146:                                              ; preds = %143
  %147 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %148 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 7
  %149 = load i8, i8* %148, align 2
  %150 = trunc i8 %149 to i1
  br i1 %150, label %151, label %189

151:                                              ; preds = %146
  %152 = load i8*, i8** %10, align 8
  %153 = call i32 @unlink(i8* %152) #13
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = call i32* @__errno_location() #16
  %157 = load i32, i32* %156, align 4
  %158 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.141, i64 0, i64 0)) #13
  %159 = load i8*, i8** %10, align 8
  %160 = call i8* @quotearg_style(i32 4, i8* %159)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %157, i8* %158, i8* %160)
  store i8 0, i8* %25, align 1
  br label %720

161:                                              ; preds = %151
  %162 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %163 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %162, i32 0, i32 31
  %164 = load i8, i8* %163, align 2
  %165 = trunc i8 %164 to i1
  br i1 %165, label %166, label %171

166:                                              ; preds = %161
  %167 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.142, i64 0, i64 0)) #13
  %168 = load i8*, i8** %10, align 8
  %169 = call i8* @quotearg_style(i32 4, i8* %168)
  %170 = call i32 (i8*, ...) @printf(i8* %167, i8* %169)
  br label %171

171:                                              ; preds = %166, %161
  %172 = load i8*, i8** %14, align 8
  store i8 1, i8* %172, align 1
  %173 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %174 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %173, i32 0, i32 18
  %175 = load i8, i8* %174, align 1
  %176 = trunc i8 %175 to i1
  br i1 %176, label %177, label %188

177:                                              ; preds = %171
  %178 = load i8*, i8** %9, align 8
  %179 = load i8*, i8** %10, align 8
  %180 = load i32, i32* %12, align 4
  %181 = load i8*, i8** %14, align 8
  %182 = load i8, i8* %181, align 1
  %183 = trunc i8 %182 to i1
  %184 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %185 = call zeroext i1 @set_process_security_ctx(i8* %178, i8* %179, i32 %180, i1 zeroext %183, %struct.cp_options* %184)
  br i1 %185, label %187, label %186

186:                                              ; preds = %177
  store i8 0, i8* %25, align 1
  br label %720

187:                                              ; preds = %177
  br label %188

188:                                              ; preds = %187, %171
  br label %189

189:                                              ; preds = %188, %146, %143
  br label %190

190:                                              ; preds = %189, %98
  %191 = load i8*, i8** %14, align 8
  %192 = load i8, i8* %191, align 1
  %193 = trunc i8 %192 to i1
  br i1 %193, label %194, label %268

194:                                              ; preds = %190
  br label %195

195:                                              ; preds = %284, %194
  store i32 65, i32* %28, align 4
  %196 = load i8*, i8** %10, align 8
  %197 = load i32, i32* %28, align 4
  %198 = or i32 %197, 128
  %199 = load i32, i32* %12, align 4
  %200 = load i32, i32* %13, align 4
  %201 = xor i32 %200, -1
  %202 = and i32 %199, %201
  %203 = call i32 (i8*, i32, ...) @open_safer(i8* %196, i32 %198, i32 %202)
  store i32 %203, i32* %19, align 4
  %204 = call i32* @__errno_location() #16
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %20, align 4
  %206 = load i32, i32* %19, align 4
  %207 = icmp slt i32 %206, 0
  br i1 %207, label %208, label %246

208:                                              ; preds = %195
  %209 = load i32, i32* %20, align 4
  %210 = icmp eq i32 %209, 17
  br i1 %210, label %211, label %246

211:                                              ; preds = %208
  %212 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %213 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9
  %214 = load i8, i8* %213, align 8
  %215 = trunc i8 %214 to i1
  br i1 %215, label %246, label %216

216:                                              ; preds = %211
  %217 = load i8*, i8** %10, align 8
  %218 = call i32 @lstat(i8* %217, %struct.stat* %29) #13
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %245

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.stat, %struct.stat* %29, i32 0, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = and i32 %222, 61440
  %224 = icmp eq i32 %223, 40960
  br i1 %224, label %225, label %245

225:                                              ; preds = %220
  %226 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %227 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %226, i32 0, i32 33
  %228 = load i8, i8* %227, align 8
  %229 = trunc i8 %228 to i1
  br i1 %229, label %230, label %240

230:                                              ; preds = %225
  %231 = load i8*, i8** %10, align 8
  %232 = load i32, i32* %28, align 4
  %233 = load i32, i32* %12, align 4
  %234 = load i32, i32* %13, align 4
  %235 = xor i32 %234, -1
  %236 = and i32 %233, %235
  %237 = call i32 (i8*, i32, ...) @open_safer(i8* %231, i32 %232, i32 %236)
  store i32 %237, i32* %19, align 4
  %238 = call i32* @__errno_location() #16
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %20, align 4
  br label %244

240:                                              ; preds = %225
  %241 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.178, i64 0, i64 0)) #13
  %242 = load i8*, i8** %10, align 8
  %243 = call i8* @quotearg_style(i32 4, i8* %242)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %241, i8* %243)
  store i8 0, i8* %25, align 1
  br label %720

244:                                              ; preds = %230
  br label %245

245:                                              ; preds = %244, %220, %216
  br label %246

246:                                              ; preds = %245, %211, %208, %195
  %247 = load i32, i32* %19, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %249, label %267

249:                                              ; preds = %246
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 21
  br i1 %251, label %252, label %267

252:                                              ; preds = %249
  %253 = load i8*, i8** %10, align 8
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %257, label %267

257:                                              ; preds = %252
  %258 = load i8*, i8** %10, align 8
  %259 = load i8*, i8** %10, align 8
  %260 = call i64 @strlen(i8* %259) #15
  %261 = sub i64 %260, 1
  %262 = getelementptr inbounds i8, i8* %258, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = sext i8 %263 to i32
  %265 = icmp eq i32 %264, 47
  br i1 %265, label %266, label %267

266:                                              ; preds = %257
  store i32 20, i32* %20, align 4
  br label %267

267:                                              ; preds = %266, %257, %252, %249, %246
  br label %269

268:                                              ; preds = %190
  store i32 0, i32* %13, align 4
  br label %269

269:                                              ; preds = %268, %267
  %270 = load i32, i32* %19, align 4
  %271 = icmp slt i32 %270, 0
  br i1 %271, label %272, label %291

272:                                              ; preds = %269
  %273 = load i32, i32* %20, align 4
  %274 = icmp eq i32 %273, 2
  br i1 %274, label %275, label %286

275:                                              ; preds = %272
  %276 = load i8*, i8** %14, align 8
  %277 = load i8, i8* %276, align 1
  %278 = trunc i8 %277 to i1
  br i1 %278, label %286, label %279

279:                                              ; preds = %275
  %280 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %281 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 9
  %282 = load i8, i8* %281, align 8
  %283 = trunc i8 %282 to i1
  br i1 %283, label %286, label %284

284:                                              ; preds = %279
  %285 = load i8*, i8** %14, align 8
  store i8 1, i8* %285, align 1
  br label %195

286:                                              ; preds = %279, %275, %272
  %287 = load i32, i32* %20, align 4
  %288 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.179, i64 0, i64 0)) #13
  %289 = load i8*, i8** %10, align 8
  %290 = call i8* @quotearg_style(i32 4, i8* %289)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %287, i8* %288, i8* %290)
  store i8 0, i8* %25, align 1
  br label %720

291:                                              ; preds = %269
  %292 = load i32, i32* %19, align 4
  %293 = call i32 @fstat(i32 %292, %struct.stat* %23) #13
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = call i32* @__errno_location() #16
  %297 = load i32, i32* %296, align 4
  %298 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.176, i64 0, i64 0)) #13
  %299 = load i8*, i8** %10, align 8
  %300 = call i8* @quotearg_style(i32 4, i8* %299)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %297, i8* %298, i8* %300)
  store i8 0, i8* %25, align 1
  br label %709

301:                                              ; preds = %291
  %302 = load i8, i8* %26, align 1
  %303 = trunc i8 %302 to i1
  br i1 %303, label %304, label %335

304:                                              ; preds = %301
  %305 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %306 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %305, i32 0, i32 36
  %307 = load i32, i32* %306, align 8
  %308 = icmp ne i32 %307, 0
  br i1 %308, label %309, label %335

309:                                              ; preds = %304
  %310 = load i32, i32* %19, align 4
  %311 = load i32, i32* %21, align 4
  %312 = call i32 @clone_file(i32 %310, i32 %311)
  %313 = icmp eq i32 %312, 0
  %314 = zext i1 %313 to i8
  store i8 %314, i8* %30, align 1
  %315 = load i8, i8* %30, align 1
  %316 = trunc i8 %315 to i1
  br i1 %316, label %322, label %317

317:                                              ; preds = %309
  %318 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %319 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %318, i32 0, i32 36
  %320 = load i32, i32* %319, align 8
  %321 = icmp eq i32 %320, 2
  br i1 %321, label %322, label %334

322:                                              ; preds = %317, %309
  %323 = load i8, i8* %30, align 1
  %324 = trunc i8 %323 to i1
  br i1 %324, label %333, label %325

325:                                              ; preds = %322
  %326 = call i32* @__errno_location() #16
  %327 = load i32, i32* %326, align 4
  %328 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.180, i64 0, i64 0)) #13
  %329 = load i8*, i8** %10, align 8
  %330 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %329)
  %331 = load i8*, i8** %9, align 8
  %332 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %331)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %328, i8* %330, i8* %332)
  store i8 0, i8* %25, align 1
  br label %709

333:                                              ; preds = %322
  store i8 0, i8* %26, align 1
  br label %334

334:                                              ; preds = %333, %317
  br label %335

335:                                              ; preds = %334, %304, %301
  %336 = load i8, i8* %26, align 1
  %337 = trunc i8 %336 to i1
  br i1 %337, label %338, label %492

338:                                              ; preds = %335
  %339 = call i32 @getpagesize() #16
  %340 = sext i32 %339 to i64
  store i64 %340, i64* %31, align 8
  %341 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %23)
  store i64 %341, i64* %32, align 8
  %342 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 9
  %343 = load i64, i64* %342, align 8
  %344 = icmp slt i64 0, %343
  br i1 %344, label %345, label %352

345:                                              ; preds = %338
  %346 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 9
  %347 = load i64, i64* %346, align 8
  %348 = icmp ule i64 %347, 2305843009213693952
  br i1 %348, label %349, label %352

349:                                              ; preds = %345
  %350 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 9
  %351 = load i64, i64* %350, align 8
  br label %353

352:                                              ; preds = %345, %338
  br label %353

353:                                              ; preds = %352, %349
  %354 = phi i64 [ %351, %349 ], [ 512, %352 ]
  store i64 %354, i64* %33, align 8
  %355 = load i32, i32* %21, align 4
  call void @fdadvise(i32 %355, i64 0, i64 0, i32 2)
  store i8 0, i8* %34, align 1
  %356 = call zeroext i1 @is_probably_sparse(%struct.stat* %24)
  %357 = zext i1 %356 to i8
  store i8 %357, i8* %35, align 1
  %358 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %359 = load i32, i32* %358, align 8
  %360 = and i32 %359, 61440
  %361 = icmp eq i32 %360, 32768
  br i1 %361, label %362, label %378

362:                                              ; preds = %353
  %363 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %364 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %363, i32 0, i32 3
  %365 = load i32, i32* %364, align 4
  %366 = icmp eq i32 %365, 3
  br i1 %366, label %367, label %368

367:                                              ; preds = %362
  store i8 1, i8* %34, align 1
  br label %368

368:                                              ; preds = %367, %362
  %369 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %370 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %369, i32 0, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 2
  br i1 %372, label %373, label %377

373:                                              ; preds = %368
  %374 = load i8, i8* %35, align 1
  %375 = trunc i8 %374 to i1
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  store i8 1, i8* %34, align 1
  br label %377

377:                                              ; preds = %376, %373, %368
  br label %378

378:                                              ; preds = %377, %353
  %379 = load i8, i8* %34, align 1
  %380 = trunc i8 %379 to i1
  br i1 %380, label %420, label %381

381:                                              ; preds = %378
  %382 = load i64, i64* %31, align 8
  %383 = sub i64 9223372036854775807, %382
  store i64 %383, i64* %36, align 8
  %384 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %24)
  %385 = load i64, i64* %32, align 8
  %386 = load i64, i64* %36, align 8
  %387 = call i64 @buffer_lcm(i64 %384, i64 %385, i64 %386) #16
  store i64 %387, i64* %37, align 8
  %388 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3
  %389 = load i32, i32* %388, align 8
  %390 = and i32 %389, 61440
  %391 = icmp eq i32 %390, 32768
  br i1 %391, label %392, label %401

392:                                              ; preds = %381
  %393 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 8
  %394 = load i64, i64* %393, align 8
  %395 = load i64, i64* %32, align 8
  %396 = icmp ult i64 %394, %395
  br i1 %396, label %397, label %401

397:                                              ; preds = %392
  %398 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 8
  %399 = load i64, i64* %398, align 8
  %400 = add nsw i64 %399, 1
  store i64 %400, i64* %32, align 8
  br label %401

401:                                              ; preds = %397, %392, %381
  %402 = load i64, i64* %37, align 8
  %403 = sub i64 %402, 1
  %404 = load i64, i64* %32, align 8
  %405 = add i64 %404, %403
  store i64 %405, i64* %32, align 8
  %406 = load i64, i64* %32, align 8
  %407 = load i64, i64* %37, align 8
  %408 = urem i64 %406, %407
  %409 = load i64, i64* %32, align 8
  %410 = sub i64 %409, %408
  store i64 %410, i64* %32, align 8
  %411 = load i64, i64* %32, align 8
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %417, label %413

413:                                              ; preds = %401
  %414 = load i64, i64* %36, align 8
  %415 = load i64, i64* %32, align 8
  %416 = icmp ult i64 %414, %415
  br i1 %416, label %417, label %419

417:                                              ; preds = %413, %401
  %418 = load i64, i64* %37, align 8
  store i64 %418, i64* %32, align 8
  br label %419

419:                                              ; preds = %417, %413
  br label %420

420:                                              ; preds = %419, %378
  %421 = load i64, i64* %32, align 8
  %422 = load i64, i64* %31, align 8
  %423 = add i64 %421, %422
  %424 = call noalias i8* @xmalloc(i64 %423)
  store i8* %424, i8** %17, align 8
  %425 = load i8*, i8** %17, align 8
  %426 = load i64, i64* %31, align 8
  %427 = call i8* @ptr_align(i8* %425, i64 %426)
  store i8* %427, i8** %16, align 8
  %428 = load i8, i8* %35, align 1
  %429 = trunc i8 %428 to i1
  br i1 %429, label %430, label %456

430:                                              ; preds = %420
  %431 = load i32, i32* %21, align 4
  %432 = load i32, i32* %19, align 4
  %433 = load i8*, i8** %16, align 8
  %434 = load i64, i64* %32, align 8
  %435 = load i64, i64* %33, align 8
  %436 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 8
  %437 = load i64, i64* %436, align 8
  %438 = load i8, i8* %34, align 1
  %439 = trunc i8 %438 to i1
  br i1 %439, label %440, label %444

440:                                              ; preds = %430
  %441 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %442 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %441, i32 0, i32 3
  %443 = load i32, i32* %442, align 4
  br label %445

444:                                              ; preds = %430
  br label %445

445:                                              ; preds = %444, %440
  %446 = phi i32 [ %443, %440 ], [ 1, %444 ]
  %447 = load i8*, i8** %9, align 8
  %448 = load i8*, i8** %10, align 8
  %449 = call zeroext i1 @extent_copy(i32 %431, i32 %432, i8* %433, i64 %434, i64 %435, i64 %437, i32 %446, i8* %447, i8* %448, i8* %38)
  br i1 %449, label %450, label %451

450:                                              ; preds = %445
  br label %493

451:                                              ; preds = %445
  %452 = load i8, i8* %38, align 1
  %453 = trunc i8 %452 to i1
  br i1 %453, label %455, label %454

454:                                              ; preds = %451
  store i8 0, i8* %25, align 1
  br label %709

455:                                              ; preds = %451
  br label %456

456:                                              ; preds = %455, %420
  %457 = load i32, i32* %21, align 4
  %458 = load i32, i32* %19, align 4
  %459 = load i8*, i8** %16, align 8
  %460 = load i64, i64* %32, align 8
  %461 = load i8, i8* %34, align 1
  %462 = trunc i8 %461 to i1
  br i1 %462, label %463, label %465

463:                                              ; preds = %456
  %464 = load i64, i64* %33, align 8
  br label %466

465:                                              ; preds = %456
  br label %466

466:                                              ; preds = %465, %463
  %467 = phi i64 [ %464, %463 ], [ 0, %465 ]
  %468 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %469 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %468, i32 0, i32 3
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, 3
  %472 = load i8*, i8** %9, align 8
  %473 = load i8*, i8** %10, align 8
  %474 = call zeroext i1 @sparse_copy(i32 %457, i32 %458, i8* %459, i64 %460, i64 %467, i1 zeroext %471, i8* %472, i8* %473, i64 -1, i64* %39, i8* %40)
  br i1 %474, label %476, label %475

475:                                              ; preds = %466
  store i8 0, i8* %25, align 1
  br label %709

476:                                              ; preds = %466
  %477 = load i8, i8* %40, align 1
  %478 = trunc i8 %477 to i1
  br i1 %478, label %479, label %490

479:                                              ; preds = %476
  %480 = load i32, i32* %19, align 4
  %481 = load i64, i64* %39, align 8
  %482 = call i32 @ftruncate(i32 %480, i64 %481) #13
  %483 = icmp slt i32 %482, 0
  br i1 %483, label %484, label %490

484:                                              ; preds = %479
  %485 = call i32* @__errno_location() #16
  %486 = load i32, i32* %485, align 4
  %487 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.181, i64 0, i64 0)) #13
  %488 = load i8*, i8** %10, align 8
  %489 = call i8* @quotearg_style(i32 4, i8* %488)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %486, i8* %487, i8* %489)
  store i8 0, i8* %25, align 1
  br label %709

490:                                              ; preds = %479, %476
  br label %491

491:                                              ; preds = %490
  br label %492

492:                                              ; preds = %491, %335
  br label %493

493:                                              ; preds = %492, %450
  %494 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %495 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %494, i32 0, i32 16
  %496 = load i8, i8* %495, align 1
  %497 = trunc i8 %496 to i1
  br i1 %497, label %498, label %537

498:                                              ; preds = %493
  %499 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %41, i64 0, i64 0
  %500 = load %struct.stat*, %struct.stat** %15, align 8
  %501 = call { i64, i64 } @get_stat_atime(%struct.stat* %500) #15
  %502 = bitcast %struct.timespec* %42 to { i64, i64 }*
  %503 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %502, i32 0, i32 0
  %504 = extractvalue { i64, i64 } %501, 0
  store i64 %504, i64* %503, align 8
  %505 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %502, i32 0, i32 1
  %506 = extractvalue { i64, i64 } %501, 1
  store i64 %506, i64* %505, align 8
  %507 = bitcast %struct.timespec* %499 to i8*
  %508 = bitcast %struct.timespec* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %507, i8* align 8 %508, i64 16, i1 false)
  %509 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %41, i64 0, i64 1
  %510 = load %struct.stat*, %struct.stat** %15, align 8
  %511 = call { i64, i64 } @get_stat_mtime(%struct.stat* %510) #15
  %512 = bitcast %struct.timespec* %43 to { i64, i64 }*
  %513 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %512, i32 0, i32 0
  %514 = extractvalue { i64, i64 } %511, 0
  store i64 %514, i64* %513, align 8
  %515 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %512, i32 0, i32 1
  %516 = extractvalue { i64, i64 } %511, 1
  store i64 %516, i64* %515, align 8
  %517 = bitcast %struct.timespec* %509 to i8*
  %518 = bitcast %struct.timespec* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %517, i8* align 8 %518, i64 16, i1 false)
  %519 = load i32, i32* %19, align 4
  %520 = load i8*, i8** %10, align 8
  %521 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %41, i64 0, i64 0
  %522 = call i32 @fdutimens(i32 %519, i8* %520, %struct.timespec* %521)
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %524, label %536

524:                                              ; preds = %498
  %525 = call i32* @__errno_location() #16
  %526 = load i32, i32* %525, align 4
  %527 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.167, i64 0, i64 0)) #13
  %528 = load i8*, i8** %10, align 8
  %529 = call i8* @quotearg_style(i32 4, i8* %528)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %526, i8* %527, i8* %529)
  %530 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %531 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 21
  %532 = load i8, i8* %531, align 4
  %533 = trunc i8 %532 to i1
  br i1 %533, label %534, label %535

534:                                              ; preds = %524
  store i8 0, i8* %25, align 1
  br label %709

535:                                              ; preds = %524
  br label %536

536:                                              ; preds = %535, %498
  br label %537

537:                                              ; preds = %536, %493
  %538 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %539 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %538, i32 0, i32 14
  %540 = load i8, i8* %539, align 1
  %541 = trunc i8 %540 to i1
  br i1 %541, label %542, label %570

542:                                              ; preds = %537
  %543 = load %struct.stat*, %struct.stat** %15, align 8
  %544 = getelementptr inbounds %struct.stat, %struct.stat* %543, i32 0, i32 4
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 4
  %547 = load i32, i32* %546, align 4
  %548 = icmp eq i32 %545, %547
  br i1 %548, label %549, label %556

549:                                              ; preds = %542
  %550 = load %struct.stat*, %struct.stat** %15, align 8
  %551 = getelementptr inbounds %struct.stat, %struct.stat* %550, i32 0, i32 5
  %552 = load i32, i32* %551, align 8
  %553 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 5
  %554 = load i32, i32* %553, align 8
  %555 = icmp eq i32 %552, %554
  br i1 %555, label %570, label %556

556:                                              ; preds = %549, %542
  %557 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %558 = load i8*, i8** %10, align 8
  %559 = load i32, i32* %19, align 4
  %560 = load %struct.stat*, %struct.stat** %15, align 8
  %561 = load i8*, i8** %14, align 8
  %562 = load i8, i8* %561, align 1
  %563 = trunc i8 %562 to i1
  %564 = call i32 @set_owner(%struct.cp_options* %557, i8* %558, i32 %559, %struct.stat* %560, i1 zeroext %563, %struct.stat* %23)
  switch i32 %564, label %569 [
    i32 -1, label %565
    i32 0, label %566
  ]

565:                                              ; preds = %556
  store i8 0, i8* %25, align 1
  br label %709

566:                                              ; preds = %556
  %567 = load i32, i32* %22, align 4
  %568 = and i32 %567, -3585
  store i32 %568, i32* %22, align 4
  br label %569

569:                                              ; preds = %566, %556
  br label %570

570:                                              ; preds = %569, %549, %537
  %571 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %572 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %571, i32 0, i32 24
  %573 = load i8, i8* %572, align 1
  %574 = trunc i8 %573 to i1
  br i1 %574, label %575, label %614

575:                                              ; preds = %570
  store i8 0, i8* %44, align 1
  %576 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 3
  %577 = load i32, i32* %576, align 8
  %578 = and i32 %577, 128
  %579 = icmp ne i32 %578, 0
  br i1 %579, label %589, label %580

580:                                              ; preds = %575
  %581 = call i32 @geteuid() #13
  %582 = icmp ne i32 %581, 0
  br i1 %582, label %583, label %589

583:                                              ; preds = %580
  %584 = load i32, i32* %19, align 4
  %585 = load i8*, i8** %10, align 8
  %586 = call i32 @fchmod_or_lchmod(i32 %584, i8* %585, i32 384)
  %587 = icmp eq i32 %586, 0
  %588 = zext i1 %587 to i8
  store i8 %588, i8* %44, align 1
  br label %589

589:                                              ; preds = %583, %580, %575
  %590 = load i8*, i8** %9, align 8
  %591 = load i32, i32* %21, align 4
  %592 = load i8*, i8** %10, align 8
  %593 = load i32, i32* %19, align 4
  %594 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %595 = call zeroext i1 @copy_attr(i8* %590, i32 %591, i8* %592, i32 %593, %struct.cp_options* %594)
  br i1 %595, label %602, label %596

596:                                              ; preds = %589
  %597 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %598 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 25
  %599 = load i8, i8* %598, align 8
  %600 = trunc i8 %599 to i1
  br i1 %600, label %601, label %602

601:                                              ; preds = %596
  store i8 0, i8* %25, align 1
  br label %602

602:                                              ; preds = %601, %596, %589
  %603 = load i8, i8* %44, align 1
  %604 = trunc i8 %603 to i1
  br i1 %604, label %605, label %613

605:                                              ; preds = %602
  %606 = load i32, i32* %19, align 4
  %607 = load i8*, i8** %10, align 8
  %608 = load i32, i32* %12, align 4
  %609 = load i32, i32* %13, align 4
  %610 = xor i32 %609, -1
  %611 = and i32 %608, %610
  %612 = call i32 @fchmod_or_lchmod(i32 %606, i8* %607, i32 %611)
  br label %613

613:                                              ; preds = %605, %602
  br label %614

614:                                              ; preds = %613, %570
  %615 = load i8*, i8** %10, align 8
  %616 = load i32, i32* %19, align 4
  %617 = load %struct.stat*, %struct.stat** %15, align 8
  call void @set_author(i8* %615, i32 %616, %struct.stat* %617)
  %618 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %619 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %618, i32 0, i32 15
  %620 = load i8, i8* %619, align 2
  %621 = trunc i8 %620 to i1
  br i1 %621, label %627, label %622

622:                                              ; preds = %614
  %623 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %624 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %623, i32 0, i32 9
  %625 = load i8, i8* %624, align 8
  %626 = trunc i8 %625 to i1
  br i1 %626, label %627, label %642

627:                                              ; preds = %622, %614
  %628 = load i8*, i8** %9, align 8
  %629 = load i32, i32* %21, align 4
  %630 = load i8*, i8** %10, align 8
  %631 = load i32, i32* %19, align 4
  %632 = load i32, i32* %22, align 4
  %633 = call i32 @copy_acl(i8* %628, i32 %629, i8* %630, i32 %631, i32 %632)
  %634 = icmp ne i32 %633, 0
  br i1 %634, label %635, label %641

635:                                              ; preds = %627
  %636 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %637 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %636, i32 0, i32 21
  %638 = load i8, i8* %637, align 4
  %639 = trunc i8 %638 to i1
  br i1 %639, label %640, label %641

640:                                              ; preds = %635
  store i8 0, i8* %25, align 1
  br label %641

641:                                              ; preds = %640, %635, %627
  br label %708

642:                                              ; preds = %622
  %643 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 28
  %645 = load i8, i8* %644, align 1
  %646 = trunc i8 %645 to i1
  br i1 %646, label %647, label %657

647:                                              ; preds = %642
  %648 = load i8*, i8** %10, align 8
  %649 = load i32, i32* %19, align 4
  %650 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %651 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %650, i32 0, i32 4
  %652 = load i32, i32* %651, align 8
  %653 = call i32 @set_acl(i8* %648, i32 %649, i32 %652)
  %654 = icmp ne i32 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %647
  store i8 0, i8* %25, align 1
  br label %656

656:                                              ; preds = %655, %647
  br label %707

657:                                              ; preds = %642
  %658 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %658, i32 0, i32 17
  %660 = load i8, i8* %659, align 8
  %661 = trunc i8 %660 to i1
  br i1 %661, label %662, label %676

662:                                              ; preds = %657
  %663 = load i8*, i8** %14, align 8
  %664 = load i8, i8* %663, align 1
  %665 = trunc i8 %664 to i1
  br i1 %665, label %666, label %676

666:                                              ; preds = %662
  %667 = load i8*, i8** %10, align 8
  %668 = load i32, i32* %19, align 4
  %669 = call i32 @cached_umask()
  %670 = xor i32 %669, -1
  %671 = and i32 438, %670
  %672 = call i32 @set_acl(i8* %667, i32 %668, i32 %671)
  %673 = icmp ne i32 %672, 0
  br i1 %673, label %674, label %675

674:                                              ; preds = %666
  store i8 0, i8* %25, align 1
  br label %675

675:                                              ; preds = %674, %666
  br label %706

676:                                              ; preds = %662, %657
  %677 = load i32, i32* %13, align 4
  %678 = icmp ne i32 %677, 0
  br i1 %678, label %679, label %705

679:                                              ; preds = %676
  %680 = call i32 @cached_umask()
  %681 = xor i32 %680, -1
  %682 = load i32, i32* %13, align 4
  %683 = and i32 %682, %681
  store i32 %683, i32* %13, align 4
  %684 = load i32, i32* %13, align 4
  %685 = icmp ne i32 %684, 0
  br i1 %685, label %686, label %704

686:                                              ; preds = %679
  %687 = load i32, i32* %19, align 4
  %688 = load i8*, i8** %10, align 8
  %689 = load i32, i32* %12, align 4
  %690 = call i32 @fchmod_or_lchmod(i32 %687, i8* %688, i32 %689)
  %691 = icmp ne i32 %690, 0
  br i1 %691, label %692, label %704

692:                                              ; preds = %686
  %693 = call i32* @__errno_location() #16
  %694 = load i32, i32* %693, align 4
  %695 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.170, i64 0, i64 0)) #13
  %696 = load i8*, i8** %10, align 8
  %697 = call i8* @quotearg_style(i32 4, i8* %696)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %694, i8* %695, i8* %697)
  %698 = load %struct.cp_options*, %struct.cp_options** %11, align 8
  %699 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %698, i32 0, i32 21
  %700 = load i8, i8* %699, align 4
  %701 = trunc i8 %700 to i1
  br i1 %701, label %702, label %703

702:                                              ; preds = %692
  store i8 0, i8* %25, align 1
  br label %703

703:                                              ; preds = %702, %692
  br label %704

704:                                              ; preds = %703, %686, %679
  br label %705

705:                                              ; preds = %704, %676
  br label %706

706:                                              ; preds = %705, %675
  br label %707

707:                                              ; preds = %706, %656
  br label %708

708:                                              ; preds = %707, %641
  br label %709

709:                                              ; preds = %708, %565, %534, %484, %475, %454, %325, %295, %140
  %710 = load i32, i32* %19, align 4
  %711 = call i32 @close(i32 %710)
  %712 = icmp slt i32 %711, 0
  br i1 %712, label %713, label %719

713:                                              ; preds = %709
  %714 = call i32* @__errno_location() #16
  %715 = load i32, i32* %714, align 4
  %716 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.182, i64 0, i64 0)) #13
  %717 = load i8*, i8** %10, align 8
  %718 = call i8* @quotearg_style(i32 4, i8* %717)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %715, i8* %716, i8* %718)
  store i8 0, i8* %25, align 1
  br label %719

719:                                              ; preds = %713, %709
  br label %720

720:                                              ; preds = %719, %286, %240, %186, %155, %94, %74
  %721 = load i32, i32* %21, align 4
  %722 = call i32 @close(i32 %721)
  %723 = icmp slt i32 %722, 0
  br i1 %723, label %724, label %730

724:                                              ; preds = %720
  %725 = call i32* @__errno_location() #16
  %726 = load i32, i32* %725, align 4
  %727 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.182, i64 0, i64 0)) #13
  %728 = load i8*, i8** %9, align 8
  %729 = call i8* @quotearg_style(i32 4, i8* %728)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %726, i8* %727, i8* %729)
  store i8 0, i8* %25, align 1
  br label %730

730:                                              ; preds = %724, %720
  %731 = load i8*, i8** %17, align 8
  call void @free(i8* %731) #13
  %732 = load i8*, i8** %18, align 8
  call void @free(i8* %732) #13
  %733 = load i8, i8* %25, align 1
  %734 = trunc i8 %733 to i1
  store i1 %734, i1* %8, align 1
  br label %735

735:                                              ; preds = %730, %64
  %736 = load i1, i1* %8, align 1
  ret i1 %736
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #1

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #3 {
  %1 = call i32 @setfscreatecon(i8* null)
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = call i32* @__errno_location() #16
  %5 = load i32, i32* %4, align 4
  %6 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.174, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %6)
  unreachable

7:                                                ; preds = %0
  ret void
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @chown_failure_ok(%struct.cp_options* %0) #8 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = call i32* @__errno_location() #16
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = call i32* @__errno_location() #16
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 22
  br i1 %9, label %10, label %16

10:                                               ; preds = %6, %1
  %11 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %12 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 11
  %13 = load i8, i8* %12, align 2
  %14 = trunc i8 %13 to i1
  %15 = xor i1 %14, true
  br label %16

16:                                               ; preds = %10, %6
  %17 = phi i1 [ false, %6 ], [ %15, %10 ]
  ret i1 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %0, %struct.timespec* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.timespec*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store %struct.timespec* %1, %struct.timespec** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load %struct.timespec*, %struct.timespec** %4, align 8
  %8 = call i32 @lutimens(i8* %6, %struct.timespec* %7)
  store i32 %8, i32* %5, align 4
  %9 = load i32, i32* %5, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = call i32* @__errno_location() #16
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 38
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %15, %11, %2
  %17 = load i32, i32* %5, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %0, i8* %1, i32 %2, %struct.stat* %3, i1 zeroext %4, %struct.stat* %5) #3 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.cp_options*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.stat*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %struct.stat*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %struct.cp_options* %0, %struct.cp_options** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store %struct.stat* %3, %struct.stat** %11, align 8
  %23 = zext i1 %4 to i8
  store i8 %23, i8* %12, align 1
  store %struct.stat* %5, %struct.stat** %13, align 8
  %24 = load %struct.stat*, %struct.stat** %11, align 8
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %14, align 4
  %27 = load %struct.stat*, %struct.stat** %11, align 8
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %15, align 4
  %30 = load i8, i8* %12, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %106, label %32

32:                                               ; preds = %6
  %33 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 15
  %35 = load i8, i8* %34, align 2
  %36 = trunc i8 %35 to i1
  br i1 %36, label %47, label %37

37:                                               ; preds = %32
  %38 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %39 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 9
  %40 = load i8, i8* %39, align 8
  %41 = trunc i8 %40 to i1
  br i1 %41, label %47, label %42

42:                                               ; preds = %37
  %43 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %44 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %43, i32 0, i32 28
  %45 = load i8, i8* %44, align 1
  %46 = trunc i8 %45 to i1
  br i1 %46, label %47, label %106

47:                                               ; preds = %42, %37, %32
  %48 = load %struct.stat*, %struct.stat** %13, align 8
  %49 = getelementptr inbounds %struct.stat, %struct.stat* %48, i32 0, i32 3
  %50 = load i32, i32* %49, align 8
  store i32 %50, i32* %16, align 4
  %51 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %52 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 15
  %53 = load i8, i8* %52, align 2
  %54 = trunc i8 %53 to i1
  br i1 %54, label %60, label %55

55:                                               ; preds = %47
  %56 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 9
  %58 = load i8, i8* %57, align 8
  %59 = trunc i8 %58 to i1
  br i1 %59, label %60, label %64

60:                                               ; preds = %55, %47
  %61 = load %struct.stat*, %struct.stat** %11, align 8
  %62 = getelementptr inbounds %struct.stat, %struct.stat* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  br label %68

64:                                               ; preds = %55
  %65 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %65, i32 0, i32 4
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i32 [ %63, %60 ], [ %67, %64 ]
  store i32 %69, i32* %17, align 4
  %70 = load i32, i32* %16, align 4
  %71 = load i32, i32* %17, align 4
  %72 = and i32 %70, %71
  %73 = and i32 %72, 448
  store i32 %73, i32* %18, align 4
  %74 = load i32, i32* %16, align 4
  %75 = and i32 %74, 4095
  %76 = load i32, i32* %17, align 4
  %77 = xor i32 %76, -1
  %78 = or i32 %77, 2048
  %79 = or i32 %78, 1024
  %80 = or i32 %79, 512
  %81 = and i32 %75, %80
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %105

83:                                               ; preds = %68
  %84 = load i8*, i8** %9, align 8
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %18, align 4
  %87 = call i32 @qset_acl(i8* %84, i32 %85, i32 %86)
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %105

89:                                               ; preds = %83
  %90 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %91 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %90)
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = call i32* @__errno_location() #16
  %94 = load i32, i32* %93, align 4
  %95 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.173, i64 0, i64 0)) #13
  %96 = load i8*, i8** %9, align 8
  %97 = call i8* @quotearg_style(i32 4, i8* %96)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %94, i8* %95, i8* %97)
  br label %98

98:                                               ; preds = %92, %89
  %99 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 21
  %101 = load i8, i8* %100, align 4
  %102 = trunc i8 %101 to i1
  %103 = zext i1 %102 to i32
  %104 = sub nsw i32 0, %103
  store i32 %104, i32* %7, align 4
  br label %175

105:                                              ; preds = %83, %68
  br label %106

106:                                              ; preds = %105, %42, %6
  %107 = load i32, i32* %10, align 4
  %108 = icmp ne i32 %107, -1
  br i1 %108, label %109, label %134

109:                                              ; preds = %106
  %110 = load i32, i32* %10, align 4
  %111 = load i32, i32* %14, align 4
  %112 = load i32, i32* %15, align 4
  %113 = call i32 @fchown(i32 %110, i32 %111, i32 %112) #13
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %109
  store i32 1, i32* %7, align 4
  br label %175

116:                                              ; preds = %109
  %117 = call i32* @__errno_location() #16
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = call i32* @__errno_location() #16
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 22
  br i1 %123, label %124, label %133

124:                                              ; preds = %120, %116
  %125 = call i32* @__errno_location() #16
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %19, align 4
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %15, align 4
  %129 = call i32 @fchown(i32 %127, i32 -1, i32 %128) #13
  store i32 %129, i32* %20, align 4
  %130 = load i32, i32* %20, align 4
  %131 = load i32, i32* %19, align 4
  %132 = call i32* @__errno_location() #16
  store i32 %131, i32* %132, align 4
  br label %133

133:                                              ; preds = %124, %120
  br label %159

134:                                              ; preds = %106
  %135 = load i8*, i8** %9, align 8
  %136 = load i32, i32* %14, align 4
  %137 = load i32, i32* %15, align 4
  %138 = call i32 @lchown(i8* %135, i32 %136, i32 %137) #13
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %134
  store i32 1, i32* %7, align 4
  br label %175

141:                                              ; preds = %134
  %142 = call i32* @__errno_location() #16
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = call i32* @__errno_location() #16
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 22
  br i1 %148, label %149, label %158

149:                                              ; preds = %145, %141
  %150 = call i32* @__errno_location() #16
  %151 = load i32, i32* %150, align 4
  store i32 %151, i32* %21, align 4
  %152 = load i8*, i8** %9, align 8
  %153 = load i32, i32* %15, align 4
  %154 = call i32 @lchown(i8* %152, i32 -1, i32 %153) #13
  store i32 %154, i32* %22, align 4
  %155 = load i32, i32* %22, align 4
  %156 = load i32, i32* %21, align 4
  %157 = call i32* @__errno_location() #16
  store i32 %156, i32* %157, align 4
  br label %158

158:                                              ; preds = %149, %145
  br label %159

159:                                              ; preds = %158, %133
  %160 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %161 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %160) #15
  br i1 %161, label %174, label %162

162:                                              ; preds = %159
  %163 = call i32* @__errno_location() #16
  %164 = load i32, i32* %163, align 4
  %165 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.165, i64 0, i64 0)) #13
  %166 = load i8*, i8** %9, align 8
  %167 = call i8* @quotearg_style(i32 4, i8* %166)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %164, i8* %165, i8* %167)
  %168 = load %struct.cp_options*, %struct.cp_options** %8, align 8
  %169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %168, i32 0, i32 21
  %170 = load i8, i8* %169, align 4
  %171 = trunc i8 %170 to i1
  br i1 %171, label %172, label %173

172:                                              ; preds = %162
  store i32 -1, i32* %7, align 4
  br label %175

173:                                              ; preds = %162
  br label %174

174:                                              ; preds = %173, %159
  store i32 0, i32* %7, align 4
  br label %175

175:                                              ; preds = %174, %172, %140, %115, %98
  %176 = load i32, i32* %7, align 4
  ret i32 %176
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %0, i32 %1, i8* %2, i32 %3, %struct.cp_options* %4) #3 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.cp_options*, align 8
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store %struct.cp_options* %4, %struct.cp_options** %10, align 8
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %0, i32 %1, %struct.stat* %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.stat*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.stat* %2, %struct.stat** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load %struct.stat*, %struct.stat** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cached_umask() #3 {
  %1 = load i32, i32* @cached_umask.mask, align 4
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = call i32 @umask(i32 0) #13
  store i32 %4, i32* @cached_umask.mask, align 4
  %5 = load i32, i32* @cached_umask.mask, align 4
  %6 = call i32 @umask(i32 %5) #13
  br label %7

7:                                                ; preds = %3, %0
  %8 = load i32, i32* @cached_umask.mask, align 4
  ret i32 %8
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %0) #3 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = call i32* @__errno_location() #16
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = call i32* @__errno_location() #16
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 22
  br i1 %9, label %10, label %16

10:                                               ; preds = %6, %1
  %11 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %12 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 12
  %13 = load i8, i8* %12, align 1
  %14 = trunc i8 %13 to i1
  %15 = xor i1 %14, true
  br label %16

16:                                               ; preds = %10, %6
  %17 = phi i1 [ false, %6 ], [ %15, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %0, i32 %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = call i32 (i32, i64, ...) @ioctl(i32 %5, i64 1074041865, i32 %6) #13
  ret i32 %7
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %0) #3 {
  %2 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %3 = load i64, i64* %2, align 8
  %4 = icmp slt i64 0, %3
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = icmp ule i64 %7, 2305843009213693952
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %11 = load i64, i64* %10, align 8
  br label %13

12:                                               ; preds = %5, %1
  br label %13

13:                                               ; preds = %12, %9
  %14 = phi i64 [ %11, %9 ], [ 512, %12 ]
  %15 = icmp sgt i64 131072, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  br label %31

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 0, %19
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %23 = load i64, i64* %22, align 8
  %24 = icmp ule i64 %23, 2305843009213693952
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 9
  %27 = load i64, i64* %26, align 8
  br label %29

28:                                               ; preds = %21, %17
  br label %29

29:                                               ; preds = %28, %25
  %30 = phi i64 [ %27, %25 ], [ 512, %28 ]
  br label %31

31:                                               ; preds = %29, %16
  %32 = phi i64 [ 131072, %16 ], [ %30, %29 ]
  ret i64 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %0) #3 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 61440
  %7 = icmp eq i32 %6, 32768
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = load %struct.stat*, %struct.stat** %2, align 8
  %10 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 10
  %11 = load i64, i64* %10, align 8
  %12 = load %struct.stat*, %struct.stat** %2, align 8
  %13 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 8
  %14 = load i64, i64* %13, align 8
  %15 = sdiv i64 %14, 512
  %16 = icmp slt i64 %11, %15
  br label %17

17:                                               ; preds = %8, %1
  %18 = phi i1 [ false, %1 ], [ %16, %8 ]
  ret i1 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load i8*, i8** %3, align 8
  store i8* %7, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = getelementptr inbounds i8, i8* %10, i64 -1
  store i8* %11, i8** %6, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = load i64, i64* %4, align 8
  %16 = urem i64 %14, %15
  %17 = sub i64 0, %16
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  ret i8* %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %0, i32 %1, i8* %2, i64 %3, i64 %4, i64 %5, i32 %6, i8* %7, i8* %8, i8* %9) #3 {
  %11 = alloca i1, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %struct.extent_scan, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i64, align 8
  %35 = alloca i8, align 1
  store i32 %0, i32* %12, align 4
  store i32 %1, i32* %13, align 4
  store i8* %2, i8** %14, align 8
  store i64 %3, i64* %15, align 8
  store i64 %4, i64* %16, align 8
  store i64 %5, i64* %17, align 8
  store i32 %6, i32* %18, align 4
  store i8* %7, i8** %19, align 8
  store i8* %8, i8** %20, align 8
  store i8* %9, i8** %21, align 8
  store i64 0, i64* %23, align 8
  store i64 0, i64* %24, align 8
  store i64 0, i64* %25, align 8
  %36 = load i32, i32* %12, align 4
  call void @extent_scan_init(i32 %36, %struct.extent_scan* %22)
  %37 = load i8*, i8** %21, align 8
  store i8 0, i8* %37, align 1
  store i8 1, i8* %26, align 1
  br label %38

38:                                               ; preds = %241, %10
  %39 = call zeroext i1 @extent_scan_read(%struct.extent_scan* %22)
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %27, align 1
  %41 = load i8, i8* %27, align 1
  %42 = trunc i8 %41 to i1
  br i1 %42, label %60, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5
  %45 = load i8, i8* %44, align 1
  %46 = trunc i8 %45 to i1
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  br label %246

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 4
  %50 = load i8, i8* %49, align 8
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = load i8*, i8** %21, align 8
  store i8 1, i8* %53, align 1
  store i1 false, i1* %11, align 1
  br label %295

54:                                               ; preds = %48
  %55 = call i32* @__errno_location() #16
  %56 = load i32, i32* %55, align 4
  %57 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.188, i64 0, i64 0)) #13
  %58 = load i8*, i8** %19, align 8
  %59 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %58)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %57, i8* %59)
  store i1 false, i1* %11, align 1
  br label %295

60:                                               ; preds = %38
  store i8 0, i8* %28, align 1
  store i32 0, i32* %29, align 4
  br label %61

61:                                               ; preds = %237, %60
  %62 = load i32, i32* %29, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %63, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = load i8, i8* %28, align 1
  %69 = trunc i8 %68 to i1
  br label %70

70:                                               ; preds = %67, %61
  %71 = phi i1 [ true, %61 ], [ %69, %67 ]
  br i1 %71, label %72, label %240

72:                                               ; preds = %70
  %73 = load i32, i32* %29, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %78, label %93

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 6
  %80 = load %struct.extent_info*, %struct.extent_info** %79, align 8
  %81 = load i32, i32* %29, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %80, i64 %82
  %84 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %83, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %30, align 8
  %86 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 6
  %87 = load %struct.extent_info*, %struct.extent_info** %86, align 8
  %88 = load i32, i32* %29, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %87, i64 %89
  %91 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %90, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %31, align 8
  br label %105

93:                                               ; preds = %72
  %94 = load i32, i32* %29, align 4
  %95 = add i32 %94, -1
  store i32 %95, i32* %29, align 4
  %96 = load i64, i64* %23, align 8
  %97 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 6
  %98 = load %struct.extent_info*, %struct.extent_info** %97, align 8
  %99 = load i32, i32* %29, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %98, i64 %100
  %102 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %101, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i64 %96, %103
  store i64 %104, i64* %30, align 8
  store i64 0, i64* %31, align 8
  br label %105

105:                                              ; preds = %93, %78
  %106 = load i64, i64* %17, align 8
  %107 = load i64, i64* %30, align 8
  %108 = load i64, i64* %31, align 8
  %109 = add nsw i64 %107, %108
  %110 = icmp slt i64 %106, %109
  br i1 %110, label %111, label %121

111:                                              ; preds = %105
  %112 = load i64, i64* %17, align 8
  %113 = load i64, i64* %30, align 8
  %114 = icmp slt i64 %112, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = load i64, i64* %17, align 8
  store i64 %116, i64* %30, align 8
  br label %117

117:                                              ; preds = %115, %111
  %118 = load i64, i64* %17, align 8
  %119 = load i64, i64* %30, align 8
  %120 = sub nsw i64 %118, %119
  store i64 %120, i64* %31, align 8
  br label %121

121:                                              ; preds = %117, %105
  %122 = load i64, i64* %30, align 8
  %123 = load i64, i64* %23, align 8
  %124 = sub nsw i64 %122, %123
  %125 = load i64, i64* %24, align 8
  %126 = sub nsw i64 %124, %125
  store i64 %126, i64* %32, align 8
  store i8 0, i8* %26, align 1
  %127 = load i64, i64* %32, align 8
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %129, label %201

129:                                              ; preds = %121
  %130 = load i32, i32* %12, align 4
  %131 = load i64, i64* %30, align 8
  %132 = call i64 @lseek(i32 %130, i64 %131, i32 0) #13
  %133 = icmp slt i64 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %129
  %135 = call i32* @__errno_location() #16
  %136 = load i32, i32* %135, align 4
  %137 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.186, i64 0, i64 0)) #13
  %138 = load i8*, i8** %19, align 8
  %139 = call i8* @quotearg_style(i32 4, i8* %138)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %136, i8* %137, i8* %139)
  br label %140

140:                                              ; preds = %219, %184, %160, %134
  call void @extent_scan_free(%struct.extent_scan* %22)
  store i1 false, i1* %11, align 1
  br label %295

141:                                              ; preds = %129
  %142 = load i8, i8* %28, align 1
  %143 = trunc i8 %142 to i1
  br i1 %143, label %144, label %147

144:                                              ; preds = %141
  %145 = load i32, i32* %18, align 4
  %146 = icmp eq i32 %145, 3
  br i1 %146, label %153, label %147

147:                                              ; preds = %144, %141
  %148 = load i8, i8* %28, align 1
  %149 = trunc i8 %148 to i1
  br i1 %149, label %162, label %150

150:                                              ; preds = %147
  %151 = load i32, i32* %18, align 4
  %152 = icmp ne i32 %151, 1
  br i1 %152, label %153, label %162

153:                                              ; preds = %150, %144
  %154 = load i32, i32* %13, align 4
  %155 = load i8*, i8** %20, align 8
  %156 = load i32, i32* %18, align 4
  %157 = icmp eq i32 %156, 3
  %158 = load i64, i64* %32, align 8
  %159 = call zeroext i1 @create_hole(i32 %154, i8* %155, i1 zeroext %157, i64 %158)
  br i1 %159, label %161, label %160

160:                                              ; preds = %153
  br label %140

161:                                              ; preds = %153
  store i8 1, i8* %26, align 1
  br label %200

162:                                              ; preds = %150, %147
  %163 = load i64, i64* %32, align 8
  store i64 %163, i64* %33, align 8
  %164 = load i8, i8* %28, align 1
  %165 = trunc i8 %164 to i1
  br i1 %165, label %166, label %180

166:                                              ; preds = %162
  %167 = load i64, i64* %17, align 8
  %168 = load i64, i64* %25, align 8
  %169 = sub nsw i64 %167, %168
  %170 = load i64, i64* %32, align 8
  %171 = icmp slt i64 %169, %170
  br i1 %171, label %172, label %176

172:                                              ; preds = %166
  %173 = load i64, i64* %17, align 8
  %174 = load i64, i64* %25, align 8
  %175 = sub nsw i64 %173, %174
  br label %178

176:                                              ; preds = %166
  %177 = load i64, i64* %32, align 8
  br label %178

178:                                              ; preds = %176, %172
  %179 = phi i64 [ %175, %172 ], [ %177, %176 ]
  store i64 %179, i64* %33, align 8
  br label %180

180:                                              ; preds = %178, %162
  %181 = load i32, i32* %13, align 4
  %182 = load i64, i64* %33, align 8
  %183 = call zeroext i1 @write_zeros(i32 %181, i64 %182)
  br i1 %183, label %190, label %184

184:                                              ; preds = %180
  %185 = call i32* @__errno_location() #16
  %186 = load i32, i32* %185, align 4
  %187 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.189, i64 0, i64 0)) #13
  %188 = load i8*, i8** %20, align 8
  %189 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %188)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %186, i8* %187, i8* %189)
  br label %140

190:                                              ; preds = %180
  %191 = load i64, i64* %17, align 8
  %192 = load i64, i64* %30, align 8
  %193 = icmp slt i64 %191, %192
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = load i64, i64* %17, align 8
  br label %198

196:                                              ; preds = %190
  %197 = load i64, i64* %30, align 8
  br label %198

198:                                              ; preds = %196, %194
  %199 = phi i64 [ %195, %194 ], [ %197, %196 ]
  store i64 %199, i64* %25, align 8
  br label %200

200:                                              ; preds = %198, %161
  br label %201

201:                                              ; preds = %200, %121
  %202 = load i64, i64* %30, align 8
  store i64 %202, i64* %23, align 8
  store i8 0, i8* %28, align 1
  %203 = load i64, i64* %31, align 8
  store i64 %203, i64* %24, align 8
  %204 = load i32, i32* %12, align 4
  %205 = load i32, i32* %13, align 4
  %206 = load i8*, i8** %14, align 8
  %207 = load i64, i64* %15, align 8
  %208 = load i32, i32* %18, align 4
  %209 = icmp eq i32 %208, 3
  br i1 %209, label %210, label %212

210:                                              ; preds = %201
  %211 = load i64, i64* %16, align 8
  br label %213

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %210
  %214 = phi i64 [ %211, %210 ], [ 0, %212 ]
  %215 = load i8*, i8** %19, align 8
  %216 = load i8*, i8** %20, align 8
  %217 = load i64, i64* %31, align 8
  %218 = call zeroext i1 @sparse_copy(i32 %204, i32 %205, i8* %206, i64 %207, i64 %214, i1 zeroext true, i8* %215, i8* %216, i64 %217, i64* %34, i8* %35)
  br i1 %218, label %220, label %219

219:                                              ; preds = %213
  br label %140

220:                                              ; preds = %213
  %221 = load i64, i64* %30, align 8
  %222 = load i64, i64* %34, align 8
  %223 = add nsw i64 %221, %222
  store i64 %223, i64* %25, align 8
  %224 = load i64, i64* %34, align 8
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %230

226:                                              ; preds = %220
  %227 = load i8, i8* %35, align 1
  %228 = trunc i8 %227 to i1
  %229 = zext i1 %228 to i8
  store i8 %229, i8* %26, align 1
  br label %230

230:                                              ; preds = %226, %220
  %231 = load i64, i64* %25, align 8
  %232 = load i64, i64* %17, align 8
  %233 = icmp eq i64 %231, %232
  br i1 %233, label %234, label %236

234:                                              ; preds = %230
  %235 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5
  store i8 1, i8* %235, align 1
  br label %240

236:                                              ; preds = %230
  br label %237

237:                                              ; preds = %236
  %238 = load i32, i32* %29, align 4
  %239 = add i32 %238, 1
  store i32 %239, i32* %29, align 4
  br label %61, !llvm.loop !17

240:                                              ; preds = %234, %70
  call void @extent_scan_free(%struct.extent_scan* %22)
  br label %241

241:                                              ; preds = %240
  %242 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5
  %243 = load i8, i8* %242, align 1
  %244 = trunc i8 %243 to i1
  %245 = xor i1 %244, true
  br i1 %245, label %38, label %246, !llvm.loop !18

246:                                              ; preds = %241, %47
  %247 = load i64, i64* %25, align 8
  %248 = load i64, i64* %17, align 8
  %249 = icmp slt i64 %247, %248
  br i1 %249, label %253, label %250

250:                                              ; preds = %246
  %251 = load i8, i8* %26, align 1
  %252 = trunc i8 %251 to i1
  br i1 %252, label %253, label %273

253:                                              ; preds = %250, %246
  %254 = load i32, i32* %18, align 4
  %255 = icmp ne i32 %254, 1
  br i1 %255, label %256, label %261

256:                                              ; preds = %253
  %257 = load i32, i32* %13, align 4
  %258 = load i64, i64* %17, align 8
  %259 = call i32 @ftruncate(i32 %257, i64 %258) #13
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %267, label %273

261:                                              ; preds = %253
  %262 = load i32, i32* %13, align 4
  %263 = load i64, i64* %17, align 8
  %264 = load i64, i64* %25, align 8
  %265 = sub nsw i64 %263, %264
  %266 = call zeroext i1 @write_zeros(i32 %262, i64 %265)
  br i1 %266, label %273, label %267

267:                                              ; preds = %261, %256
  %268 = call i32* @__errno_location() #16
  %269 = load i32, i32* %268, align 4
  %270 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.181, i64 0, i64 0)) #13
  %271 = load i8*, i8** %20, align 8
  %272 = call i8* @quotearg_style(i32 4, i8* %271)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %269, i8* %270, i8* %272)
  store i1 false, i1* %11, align 1
  br label %295

273:                                              ; preds = %261, %256, %250
  %274 = load i32, i32* %18, align 4
  %275 = icmp eq i32 %274, 3
  br i1 %275, label %276, label %294

276:                                              ; preds = %273
  %277 = load i64, i64* %25, align 8
  %278 = load i64, i64* %17, align 8
  %279 = icmp slt i64 %277, %278
  br i1 %279, label %280, label %294

280:                                              ; preds = %276
  %281 = load i32, i32* %13, align 4
  %282 = load i64, i64* %25, align 8
  %283 = load i64, i64* %17, align 8
  %284 = load i64, i64* %25, align 8
  %285 = sub nsw i64 %283, %284
  %286 = call i32 @punch_hole(i32 %281, i64 %282, i64 %285)
  %287 = icmp slt i32 %286, 0
  br i1 %287, label %288, label %294

288:                                              ; preds = %280
  %289 = call i32* @__errno_location() #16
  %290 = load i32, i32* %289, align 4
  %291 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.187, i64 0, i64 0)) #13
  %292 = load i8*, i8** %20, align 8
  %293 = call i8* @quotearg_style(i32 4, i8* %292)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %290, i8* %291, i8* %293)
  store i1 false, i1* %11, align 1
  br label %295

294:                                              ; preds = %280, %276, %273
  store i1 true, i1* %11, align 1
  br label %295

295:                                              ; preds = %294, %288, %267, %140, %54, %52
  %296 = load i1, i1* %11, align 1
  ret i1 %296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %0, i32 %1, i8* %2, i64 %3, i64 %4, i1 zeroext %5, i8* %6, i8* %7, i64 %8, i64* %9, i8* %10) #3 {
  %12 = alloca i1, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  store i32 %0, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i8* %2, i8** %15, align 8
  store i64 %3, i64* %16, align 8
  store i64 %4, i64* %17, align 8
  %33 = zext i1 %5 to i8
  store i8 %33, i8* %18, align 1
  store i8* %6, i8** %19, align 8
  store i8* %7, i8** %20, align 8
  store i64 %8, i64* %21, align 8
  store i64* %9, i64** %22, align 8
  store i8* %10, i8** %23, align 8
  %34 = load i8*, i8** %23, align 8
  store i8 0, i8* %34, align 1
  %35 = load i64*, i64** %22, align 8
  store i64 0, i64* %35, align 8
  store i8 0, i8* %24, align 1
  store i64 0, i64* %25, align 8
  br label %36

36:                                               ; preds = %215, %58, %11
  %37 = load i64, i64* %21, align 8
  %38 = icmp ne i64 %37, 0
  br i1 %38, label %39, label %220

39:                                               ; preds = %36
  %40 = load i32, i32* %13, align 4
  %41 = load i8*, i8** %15, align 8
  %42 = load i64, i64* %21, align 8
  %43 = load i64, i64* %16, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i64, i64* %21, align 8
  br label %49

47:                                               ; preds = %39
  %48 = load i64, i64* %16, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %48, %47 ]
  %51 = call i64 @read(i32 %40, i8* %41, i64 %50)
  store i64 %51, i64* %26, align 8
  %52 = load i64, i64* %26, align 8
  %53 = icmp slt i64 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %49
  %55 = call i32* @__errno_location() #16
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  br label %36, !llvm.loop !19

59:                                               ; preds = %54
  %60 = call i32* @__errno_location() #16
  %61 = load i32, i32* %60, align 4
  %62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.183, i64 0, i64 0)) #13
  %63 = load i8*, i8** %19, align 8
  %64 = call i8* @quotearg_style(i32 4, i8* %63)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %61, i8* %62, i8* %64)
  store i1 false, i1* %12, align 1
  br label %232

65:                                               ; preds = %49
  %66 = load i64, i64* %26, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  br label %220

69:                                               ; preds = %65
  %70 = load i64, i64* %26, align 8
  %71 = load i64, i64* %21, align 8
  %72 = sub i64 %71, %70
  store i64 %72, i64* %21, align 8
  %73 = load i64, i64* %26, align 8
  %74 = load i64*, i64** %22, align 8
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, %73
  store i64 %76, i64* %74, align 8
  %77 = load i64, i64* %17, align 8
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %69
  %80 = load i64, i64* %17, align 8
  br label %83

81:                                               ; preds = %69
  %82 = load i64, i64* %16, align 8
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ %80, %79 ], [ %82, %81 ]
  store i64 %84, i64* %27, align 8
  %85 = load i8*, i8** %15, align 8
  store i8* %85, i8** %28, align 8
  %86 = load i8*, i8** %15, align 8
  store i8* %86, i8** %29, align 8
  br label %87

87:                                               ; preds = %208, %83
  %88 = load i64, i64* %26, align 8
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %215

90:                                               ; preds = %87
  %91 = load i8, i8* %24, align 1
  %92 = trunc i8 %91 to i1
  %93 = zext i1 %92 to i8
  store i8 %93, i8* %30, align 1
  %94 = load i64, i64* %27, align 8
  %95 = load i64, i64* %26, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = load i64, i64* %27, align 8
  br label %101

99:                                               ; preds = %90
  %100 = load i64, i64* %26, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %100, %99 ]
  store i64 %102, i64* %27, align 8
  %103 = load i64, i64* %17, align 8
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %113

105:                                              ; preds = %101
  %106 = load i64, i64* %27, align 8
  %107 = icmp ne i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %105
  %109 = load i8*, i8** %28, align 8
  %110 = load i64, i64* %27, align 8
  %111 = call zeroext i1 @is_nul(i8* %109, i64 %110) #15
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %24, align 1
  br label %113

113:                                              ; preds = %108, %105, %101
  %114 = load i8, i8* %24, align 1
  %115 = trunc i8 %114 to i1
  %116 = zext i1 %115 to i32
  %117 = load i8, i8* %30, align 1
  %118 = trunc i8 %117 to i1
  %119 = zext i1 %118 to i32
  %120 = icmp ne i32 %116, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = load i64, i64* %25, align 8
  %123 = icmp ne i64 %122, 0
  br label %124

124:                                              ; preds = %121, %113
  %125 = phi i1 [ false, %113 ], [ %123, %121 ]
  %126 = zext i1 %125 to i8
  store i8 %126, i8* %31, align 1
  %127 = load i64, i64* %26, align 8
  %128 = load i64, i64* %27, align 8
  %129 = icmp eq i64 %127, %128
  br i1 %129, label %130, label %133

130:                                              ; preds = %124
  %131 = load i8, i8* %24, align 1
  %132 = trunc i8 %131 to i1
  br i1 %132, label %133, label %137

133:                                              ; preds = %130, %124
  %134 = load i64, i64* %27, align 8
  %135 = icmp ne i64 %134, 0
  %136 = xor i1 %135, true
  br label %137

137:                                              ; preds = %133, %130
  %138 = phi i1 [ true, %130 ], [ %136, %133 ]
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %32, align 1
  %140 = load i8, i8* %31, align 1
  %141 = trunc i8 %140 to i1
  br i1 %141, label %145, label %142

142:                                              ; preds = %137
  %143 = load i8, i8* %32, align 1
  %144 = trunc i8 %143 to i1
  br i1 %144, label %145, label %194

145:                                              ; preds = %142, %137
  %146 = load i8, i8* %31, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = load i64, i64* %27, align 8
  %150 = load i64, i64* %25, align 8
  %151 = add i64 %150, %149
  store i64 %151, i64* %25, align 8
  br label %152

152:                                              ; preds = %148, %145
  %153 = load i8, i8* %30, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %169, label %155

155:                                              ; preds = %152
  %156 = load i32, i32* %14, align 4
  %157 = load i8*, i8** %29, align 8
  %158 = load i64, i64* %25, align 8
  %159 = call i64 @full_write(i32 %156, i8* %157, i64 %158)
  %160 = load i64, i64* %25, align 8
  %161 = icmp ne i64 %159, %160
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = call i32* @__errno_location() #16
  %164 = load i32, i32* %163, align 4
  %165 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.184, i64 0, i64 0)) #13
  %166 = load i8*, i8** %20, align 8
  %167 = call i8* @quotearg_style(i32 4, i8* %166)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %164, i8* %165, i8* %167)
  store i1 false, i1* %12, align 1
  br label %232

168:                                              ; preds = %155
  br label %178

169:                                              ; preds = %152
  %170 = load i32, i32* %14, align 4
  %171 = load i8*, i8** %20, align 8
  %172 = load i8, i8* %18, align 1
  %173 = trunc i8 %172 to i1
  %174 = load i64, i64* %25, align 8
  %175 = call zeroext i1 @create_hole(i32 %170, i8* %171, i1 zeroext %173, i64 %174)
  br i1 %175, label %177, label %176

176:                                              ; preds = %169
  store i1 false, i1* %12, align 1
  br label %232

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177, %168
  %179 = load i8*, i8** %28, align 8
  store i8* %179, i8** %29, align 8
  %180 = load i64, i64* %27, align 8
  store i64 %180, i64* %25, align 8
  %181 = load i8, i8* %32, align 1
  %182 = trunc i8 %181 to i1
  br i1 %182, label %183, label %193

183:                                              ; preds = %178
  %184 = load i64, i64* %27, align 8
  %185 = icmp ne i64 %184, 0
  br i1 %185, label %187, label %186

186:                                              ; preds = %183
  store i64 0, i64* %26, align 8
  br label %187

187:                                              ; preds = %186, %183
  %188 = load i8, i8* %31, align 1
  %189 = trunc i8 %188 to i1
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  store i64 0, i64* %27, align 8
  br label %192

191:                                              ; preds = %187
  store i64 0, i64* %25, align 8
  br label %192

192:                                              ; preds = %191, %190
  br label %193

193:                                              ; preds = %192, %178
  br label %208

194:                                              ; preds = %142
  %195 = load i64, i64* %25, align 8
  %196 = load i64, i64* %27, align 8
  %197 = sub i64 9223372036854775807, %196
  %198 = icmp ule i64 %195, %197
  br i1 %198, label %199, label %203

199:                                              ; preds = %194
  %200 = load i64, i64* %27, align 8
  %201 = load i64, i64* %25, align 8
  %202 = add i64 %201, %200
  store i64 %202, i64* %25, align 8
  br label %207

203:                                              ; preds = %194
  %204 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.185, i64 0, i64 0)) #13
  %205 = load i8*, i8** %19, align 8
  %206 = call i8* @quotearg_style(i32 4, i8* %205)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %204, i8* %206)
  store i1 false, i1* %12, align 1
  br label %232

207:                                              ; preds = %199
  br label %208

208:                                              ; preds = %207, %193
  %209 = load i64, i64* %27, align 8
  %210 = load i64, i64* %26, align 8
  %211 = sub i64 %210, %209
  store i64 %211, i64* %26, align 8
  %212 = load i64, i64* %27, align 8
  %213 = load i8*, i8** %28, align 8
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  store i8* %214, i8** %28, align 8
  br label %87, !llvm.loop !20

215:                                              ; preds = %87
  %216 = load i8, i8* %24, align 1
  %217 = trunc i8 %216 to i1
  %218 = load i8*, i8** %23, align 8
  %219 = zext i1 %217 to i8
  store i8 %219, i8* %218, align 1
  br label %36, !llvm.loop !19

220:                                              ; preds = %68, %36
  %221 = load i8, i8* %24, align 1
  %222 = trunc i8 %221 to i1
  br i1 %222, label %223, label %231

223:                                              ; preds = %220
  %224 = load i32, i32* %14, align 4
  %225 = load i8*, i8** %20, align 8
  %226 = load i8, i8* %18, align 1
  %227 = trunc i8 %226 to i1
  %228 = load i64, i64* %25, align 8
  %229 = call zeroext i1 @create_hole(i32 %224, i8* %225, i1 zeroext %227, i64 %228)
  br i1 %229, label %231, label %230

230:                                              ; preds = %223
  store i1 false, i1* %12, align 1
  br label %232

231:                                              ; preds = %223, %220
  store i1 true, i1* %12, align 1
  br label %232

232:                                              ; preds = %231, %230, %203, %176, %162, %59
  %233 = load i1, i1* %12, align 1
  ret i1 %233
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #1

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %0, i8* %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp sle i32 0, %8
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4
  %12 = load i32, i32* %7, align 4
  %13 = call i32 @fchmod(i32 %11, i32 %12) #13
  store i32 %13, i32* %4, align 4
  br label %18

14:                                               ; preds = %3
  %15 = load i8*, i8** %6, align 8
  %16 = load i32, i32* %7, align 4
  %17 = call i32 @chmod(i8* %15, i32 %16) #13
  store i32 %17, i32* %4, align 4
  br label %18

18:                                               ; preds = %14, %10
  %19 = load i32, i32* %4, align 4
  ret i32 %19
}

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #1

declare dso_local i64 @read(i32, i8*, i64) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %0, i64 %1) #8 {
  %3 = alloca i1, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %8 = load i8*, i8** %4, align 8
  store i8* %8, i8** %6, align 8
  %9 = load i64, i64* %5, align 8
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  store i1 true, i1* %3, align 1
  br label %57

12:                                               ; preds = %2
  br label %13

13:                                               ; preds = %30, %12
  %14 = load i64, i64* %5, align 8
  %15 = and i64 %14, 0
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %13
  %18 = load i8*, i8** %6, align 8
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  store i1 false, i1* %3, align 1
  br label %57

22:                                               ; preds = %17
  %23 = load i8*, i8** %6, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %6, align 8
  %25 = load i64, i64* %5, align 8
  %26 = add i64 %25, -1
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %5, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  store i1 true, i1* %3, align 1
  br label %57

30:                                               ; preds = %22
  br label %13, !llvm.loop !21

31:                                               ; preds = %13
  br label %32

32:                                               ; preds = %50, %31
  %33 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %33, i64 1, i1 false)
  %34 = load i8, i8* %7, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  store i1 false, i1* %3, align 1
  br label %57

37:                                               ; preds = %32
  %38 = load i8*, i8** %6, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  store i8* %39, i8** %6, align 8
  %40 = load i64, i64* %5, align 8
  %41 = sub i64 %40, 1
  store i64 %41, i64* %5, align 8
  %42 = load i64, i64* %5, align 8
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %37
  store i1 true, i1* %3, align 1
  br label %57

45:                                               ; preds = %37
  %46 = load i64, i64* %5, align 8
  %47 = and i64 %46, 15
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  br label %51

50:                                               ; preds = %45
  br label %32

51:                                               ; preds = %49
  %52 = load i8*, i8** %4, align 8
  %53 = load i8*, i8** %6, align 8
  %54 = load i64, i64* %5, align 8
  %55 = call i32 @memcmp(i8* %52, i8* %53, i64 %54) #15
  %56 = icmp eq i32 %55, 0
  store i1 %56, i1* %3, align 1
  br label %57

57:                                               ; preds = %51, %44, %36, %29, %21, %11
  %58 = load i1, i1* %3, align 1
  ret i1 %58
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %0, i8* %1, i1 zeroext %2, i64 %3) #3 {
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  %11 = zext i1 %2 to i8
  store i8 %11, i8* %8, align 1
  store i64 %3, i64* %9, align 8
  %12 = load i32, i32* %6, align 4
  %13 = load i64, i64* %9, align 8
  %14 = call i64 @lseek(i32 %12, i64 %13, i32 1) #13
  store i64 %14, i64* %10, align 8
  %15 = load i64, i64* %10, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %4
  %18 = call i32* @__errno_location() #16
  %19 = load i32, i32* %18, align 4
  %20 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.186, i64 0, i64 0)) #13
  %21 = load i8*, i8** %7, align 8
  %22 = call i8* @quotearg_style(i32 4, i8* %21)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %19, i8* %20, i8* %22)
  store i1 false, i1* %5, align 1
  br label %41

23:                                               ; preds = %4
  %24 = load i8, i8* %8, align 1
  %25 = trunc i8 %24 to i1
  br i1 %25, label %26, label %40

26:                                               ; preds = %23
  %27 = load i32, i32* %6, align 4
  %28 = load i64, i64* %10, align 8
  %29 = load i64, i64* %9, align 8
  %30 = sub nsw i64 %28, %29
  %31 = load i64, i64* %9, align 8
  %32 = call i32 @punch_hole(i32 %27, i64 %30, i64 %31)
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %26
  %35 = call i32* @__errno_location() #16
  %36 = load i32, i32* %35, align 4
  %37 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.187, i64 0, i64 0)) #13
  %38 = load i8*, i8** %7, align 8
  %39 = call i8* @quotearg_style(i32 4, i8* %38)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %36, i8* %37, i8* %39)
  store i1 false, i1* %5, align 1
  br label %41

40:                                               ; preds = %26, %23
  store i1 true, i1* %5, align 1
  br label %41

41:                                               ; preds = %40, %34, %17
  %42 = load i1, i1* %5, align 1
  ret i1 %42
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %0, i64 %1, i64 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  store i32 0, i32* %7, align 4
  %8 = load i32, i32* %4, align 4
  %9 = load i64, i64* %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = call i32 @fallocate(i32 %8, i32 3, i64 %9, i64 %10)
  store i32 %11, i32* %7, align 4
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %3
  %15 = call i32* @__errno_location() #16
  %16 = load i32, i32* %15, align 4
  %17 = call zeroext i1 @is_ENOTSUP(i32 %16)
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = call i32* @__errno_location() #16
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 38
  br i1 %21, label %22, label %23

22:                                               ; preds = %18, %14
  store i32 0, i32* %7, align 4
  br label %23

23:                                               ; preds = %22, %18, %3
  %24 = load i32, i32* %7, align 4
  ret i32 %24
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %0) #3 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 95
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %5, %1
  %7 = phi i1 [ true, %1 ], [ false, %5 ]
  ret i1 %7
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %0) #3 {
  %2 = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %0, %struct.extent_scan** %2, align 8
  %3 = load %struct.extent_scan*, %struct.extent_scan** %2, align 8
  %4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6
  %5 = load %struct.extent_info*, %struct.extent_info** %4, align 8
  %6 = bitcast %struct.extent_info* %5 to i8*
  call void @free(i8* %6) #13
  %7 = load %struct.extent_scan*, %struct.extent_scan** %2, align 8
  %8 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 6
  store %struct.extent_info* null, %struct.extent_info** %8, align 8
  %9 = load %struct.extent_scan*, %struct.extent_scan** %2, align 8
  %10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %9, i32 0, i32 3
  store i64 0, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %0, i64 %1) #3 {
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  %7 = load i8*, i8** @write_zeros.zeros, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = load i64, i64* @write_zeros.nz, align 8
  %11 = call noalias i8* @calloc(i64 %10, i64 1) #13
  store i8* %11, i8** @write_zeros.zeros, align 8
  %12 = load i8*, i8** @write_zeros.zeros, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8
  store i64 1024, i64* @write_zeros.nz, align 8
  br label %15

15:                                               ; preds = %14, %9
  br label %16

16:                                               ; preds = %15, %2
  br label %17

17:                                               ; preds = %37, %16
  %18 = load i64, i64* %5, align 8
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %17
  %21 = load i64, i64* @write_zeros.nz, align 8
  %22 = load i64, i64* %5, align 8
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = load i64, i64* @write_zeros.nz, align 8
  br label %28

26:                                               ; preds = %20
  %27 = load i64, i64* %5, align 8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %27, %26 ]
  store i64 %29, i64* %6, align 8
  %30 = load i32, i32* %4, align 4
  %31 = load i8*, i8** @write_zeros.zeros, align 8
  %32 = load i64, i64* %6, align 8
  %33 = call i64 @full_write(i32 %30, i8* %31, i64 %32)
  %34 = load i64, i64* %6, align 8
  %35 = icmp ne i64 %33, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i1 false, i1* %3, align 1
  br label %42

37:                                               ; preds = %28
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* %5, align 8
  %40 = sub i64 %39, %38
  store i64 %40, i64* %5, align 8
  br label %17, !llvm.loop !22

41:                                               ; preds = %17
  store i1 true, i1* %3, align 1
  br label %42

42:                                               ; preds = %41, %36
  %43 = load i1, i1* %3, align 1
  ret i1 %43
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #1

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #1

declare dso_local i32 @putchar_unlocked(i32) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 61440
  %7 = icmp eq i32 %6, 40960
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = call zeroext i1 @can_write_any_file()
  br i1 %9, label %14, label %10

10:                                               ; preds = %8
  %11 = load i8*, i8** %3, align 8
  %12 = call i32 @euidaccess(i8* %11, i32 2) #13
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %10, %8, %2
  %15 = phi i1 [ true, %8 ], [ true, %2 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #1

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_options_default(%struct.cp_options* %0) #3 {
  %2 = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %0, %struct.cp_options** %2, align 8
  %3 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %4 = bitcast %struct.cp_options* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 80, i1 false)
  %5 = call i32 @geteuid() #13
  %6 = icmp eq i32 %5, 0
  %7 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 12
  %9 = zext i1 %6 to i8
  store i8 %9, i8* %8, align 1
  %10 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %11 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 11
  %12 = zext i1 %6 to i8
  store i8 %12, i8* %11, align 2
  %13 = load %struct.cp_options*, %struct.cp_options** %2, align 8
  %14 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 35
  store i32 -1, i32* %14, align 4
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: noinline nounwind optnone uwtable
define internal void @forget_created(i64 %0, i64 %1) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Src_to_dest, align 8
  %6 = alloca %struct.Src_to_dest*, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load i64, i64* %3, align 8
  %8 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %5, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %5, i32 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %5, i32 0, i32 2
  store i8* null, i8** %11, align 8
  %12 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8
  %13 = bitcast %struct.Src_to_dest* %5 to i8*
  %14 = call i8* @hash_delete(%struct.hash_table* %12, i8* %13)
  %15 = bitcast i8* %14 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %15, %struct.Src_to_dest** %6, align 8
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %17 = icmp ne %struct.Src_to_dest* %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %20 = bitcast %struct.Src_to_dest* %19 to i8*
  call void @src_to_dest_free(i8* %20)
  br label %21

21:                                               ; preds = %18, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.Src_to_dest*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %5, %struct.Src_to_dest** %3, align 8
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %3, align 8
  %7 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  call void @free(i8* %8) #13
  %9 = load i8*, i8** %2, align 8
  call void @free(i8* %9) #13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @src_to_dest_lookup(i64 %0, i64 %1) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Src_to_dest, align 8
  %6 = alloca %struct.Src_to_dest*, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load i64, i64* %3, align 8
  %8 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %5, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = load i64, i64* %4, align 8
  %10 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %5, i32 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8
  %12 = bitcast %struct.Src_to_dest* %5 to i8*
  %13 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12)
  %14 = bitcast i8* %13 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %14, %struct.Src_to_dest** %6, align 8
  %15 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %16 = icmp ne %struct.Src_to_dest* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %19 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  br label %22

21:                                               ; preds = %2
  br label %22

22:                                               ; preds = %21, %17
  %23 = phi i8* [ %20, %17 ], [ null, %21 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @remember_copied(i8* %0, i64 %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.Src_to_dest*, align 8
  %9 = alloca %struct.Src_to_dest*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = call noalias i8* @xmalloc(i64 24)
  %11 = bitcast i8* %10 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %11, %struct.Src_to_dest** %8, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call noalias i8* @xstrdup(i8* %12)
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %15 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %14, i32 0, i32 2
  store i8* %13, i8** %15, align 8
  %16 = load i64, i64* %6, align 8
  %17 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %18 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %17, i32 0, i32 0
  store i64 %16, i64* %18, align 8
  %19 = load i64, i64* %7, align 8
  %20 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %21 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %20, i32 0, i32 1
  store i64 %19, i64* %21, align 8
  %22 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8
  %23 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %24 = bitcast %struct.Src_to_dest* %23 to i8*
  %25 = call i8* @hash_insert(%struct.hash_table* %22, i8* %24)
  %26 = bitcast i8* %25 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %26, %struct.Src_to_dest** %9, align 8
  %27 = load %struct.Src_to_dest*, %struct.Src_to_dest** %9, align 8
  %28 = icmp eq %struct.Src_to_dest* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %3
  call void @xalloc_die() #17
  unreachable

30:                                               ; preds = %3
  %31 = load %struct.Src_to_dest*, %struct.Src_to_dest** %9, align 8
  %32 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %33 = icmp ne %struct.Src_to_dest* %31, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = load %struct.Src_to_dest*, %struct.Src_to_dest** %8, align 8
  %36 = bitcast %struct.Src_to_dest* %35 to i8*
  call void @src_to_dest_free(i8* %36)
  %37 = load %struct.Src_to_dest*, %struct.Src_to_dest** %9, align 8
  %38 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %37, i32 0, i32 2
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %4, align 8
  br label %41

40:                                               ; preds = %30
  store i8* null, i8** %4, align 8
  br label %41

41:                                               ; preds = %40, %34
  %42 = load i8*, i8** %4, align 8
  ret i8* %42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @hash_init() #3 {
  %1 = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free)
  store %struct.hash_table* %1, %struct.hash_table** @src_to_dest, align 8
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8
  %3 = icmp eq %struct.hash_table* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  call void @xalloc_die() #17
  unreachable

5:                                                ; preds = %0
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.Src_to_dest*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %7, %struct.Src_to_dest** %5, align 8
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %5, align 8
  %9 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = urem i64 %10, %11
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.Src_to_dest*, align 8
  %6 = alloca %struct.Src_to_dest*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %8, %struct.Src_to_dest** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %6, align 8
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %5, align 8
  %12 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %15 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %2
  %19 = load %struct.Src_to_dest*, %struct.Src_to_dest** %5, align 8
  %20 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = load %struct.Src_to_dest*, %struct.Src_to_dest** %6, align 8
  %23 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %21, %24
  br label %26

26:                                               ; preds = %18, %2
  %27 = phi i1 [ false, %2 ], [ %25, %18 ]
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i32 1, i32 0
  %30 = icmp ne i32 %29, 0
  ret i1 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_init(i32 %0, %struct.extent_scan* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.extent_scan*, align 8
  store i32 %0, i32* %3, align 4
  store %struct.extent_scan* %1, %struct.extent_scan** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %7 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 0
  store i32 %5, i32* %7, align 8
  %8 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %9 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 3
  store i64 0, i64* %9, align 8
  %10 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %11 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %10, i32 0, i32 6
  store %struct.extent_info* null, %struct.extent_info** %11, align 8
  %12 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %13 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %12, i32 0, i32 1
  store i64 0, i64* %13, align 8
  %14 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %15 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 4
  store i8 0, i8* %15, align 8
  %16 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %17 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %16, i32 0, i32 5
  store i8 0, i8* %17, align 1
  %18 = call zeroext i1 @extent_need_sync()
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i32 1, i32 0
  %21 = load %struct.extent_scan*, %struct.extent_scan** %4, align 8
  %22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %21, i32 0, i32 2
  store i32 %20, i32* %22, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #3 {
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_scan_read(%struct.extent_scan* %0) #3 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.extent_scan*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.extent_info*, align 8
  %6 = alloca %union.anon, align 8
  %7 = alloca %struct.fiemap*, align 8
  %8 = alloca %struct.fiemap_extent*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %struct.extent_scan* %0, %struct.extent_scan** %3, align 8
  store i32 0, i32* %4, align 4
  %13 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %13, i32 0, i32 6
  %15 = load %struct.extent_info*, %struct.extent_info** %14, align 8
  store %struct.extent_info* %15, %struct.extent_info** %5, align 8
  br label %16

16:                                               ; preds = %362, %1
  %17 = bitcast %union.anon* %6 to %struct.fiemap*
  store %struct.fiemap* %17, %struct.fiemap** %7, align 8
  %18 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %18, i32 0, i32 6
  %20 = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %19, i64 0, i64 0
  store %struct.fiemap_extent* %20, %struct.fiemap_extent** %8, align 8
  %21 = bitcast %union.anon* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 4096, i1 false)
  %22 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %26 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %25, i32 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %28 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %31 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %30, i32 0, i32 2
  store i32 %29, i32* %31, align 8
  %32 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %33 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %32, i32 0, i32 4
  store i32 72, i32* %33, align 8
  %34 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %35 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 -1, %36
  %38 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %39 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %38, i32 0, i32 1
  store i64 %37, i64* %39, align 8
  %40 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %41 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %44 = call i32 (i32, i64, ...) @ioctl(i32 %42, i64 3223348747, %struct.fiemap* %43) #13
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %16
  %47 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %48 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %47, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %53 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %52, i32 0, i32 4
  store i8 1, i8* %53, align 8
  br label %54

54:                                               ; preds = %51, %46
  store i1 false, i1* %2, align 1
  br label %364

55:                                               ; preds = %16
  %56 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %57 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %62 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %61, i32 0, i32 5
  store i8 1, i8* %62, align 1
  %63 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %64 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp ne i64 %65, 0
  store i1 %66, i1* %2, align 1
  br label %364

67:                                               ; preds = %55
  %68 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %69 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %68, i32 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %72 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = sub i64 -1, %74
  %76 = icmp ule i64 %70, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %67
  br label %79

78:                                               ; preds = %67
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.219, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #14
  unreachable

79:                                               ; preds = %77
  %80 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %81 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %80, i32 0, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %84, i32 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %83
  store i64 %87, i64* %85, align 8
  %88 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %89 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %90 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %89, i32 0, i32 6
  %91 = load %struct.extent_info*, %struct.extent_info** %90, align 8
  %92 = ptrtoint %struct.extent_info* %88 to i64
  %93 = ptrtoint %struct.extent_info* %91 to i64
  %94 = sub i64 %92, %93
  %95 = sdiv exact i64 %94, 24
  store i64 %95, i64* %9, align 8
  %96 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %97 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %96, i32 0, i32 6
  %98 = load %struct.extent_info*, %struct.extent_info** %97, align 8
  %99 = bitcast %struct.extent_info* %98 to i8*
  %100 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %100, i32 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = call i8* @xnrealloc(i8* %99, i64 %102, i64 24)
  %104 = bitcast i8* %103 to %struct.extent_info*
  %105 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %106 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %105, i32 0, i32 6
  store %struct.extent_info* %104, %struct.extent_info** %106, align 8
  %107 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %108 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %107, i32 0, i32 6
  %109 = load %struct.extent_info*, %struct.extent_info** %108, align 8
  %110 = load i64, i64* %9, align 8
  %111 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %109, i64 %110
  store %struct.extent_info* %111, %struct.extent_info** %5, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %10, align 4
  br label %112

112:                                              ; preds = %309, %79
  %113 = load i32, i32* %10, align 4
  %114 = load %struct.fiemap*, %struct.fiemap** %7, align 8
  %115 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %114, i32 0, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp ult i32 %113, %116
  br i1 %117, label %118, label %312

118:                                              ; preds = %112
  %119 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %120 = load i32, i32* %10, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %119, i64 %121
  %123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %122, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %126 = load i32, i32* %10, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %125, i64 %127
  %129 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i32 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 9223372036854775807, %130
  %132 = icmp ule i64 %124, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %118
  br label %135

134:                                              ; preds = %118
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.220, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.219, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #14
  unreachable

135:                                              ; preds = %133
  %136 = load i32, i32* %4, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %184

138:                                              ; preds = %135
  %139 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %140 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %143 = load i32, i32* %10, align 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %142, i64 %144
  %146 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %145, i32 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, -2
  %149 = icmp eq i32 %141, %148
  br i1 %149, label %150, label %184

150:                                              ; preds = %138
  %151 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %152 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %151, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %155 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %154, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %153, %156
  %158 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %159 = load i32, i32* %10, align 4
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %158, i64 %160
  %162 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %161, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %157, %163
  br i1 %164, label %165, label %184

165:                                              ; preds = %150
  %166 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %167 = load i32, i32* %10, align 4
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %166, i64 %168
  %170 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %169, i32 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %173 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %172, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, %171
  store i64 %175, i64* %173, align 8
  %176 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %177 = load i32, i32* %10, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %176, i64 %178
  %180 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %179, i32 0, i32 4
  %181 = load i32, i32* %180, align 8
  %182 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %183 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %182, i32 0, i32 2
  store i32 %181, i32* %183, align 8
  br label %308

184:                                              ; preds = %150, %138, %135
  %185 = load i32, i32* %4, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %198

187:                                              ; preds = %184
  %188 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %189 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %188, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %192 = load i32, i32* %10, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %191, i64 %193
  %195 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %194, i32 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = icmp ugt i64 %190, %196
  br i1 %197, label %216, label %198

198:                                              ; preds = %187, %184
  %199 = load i32, i32* %4, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %274

201:                                              ; preds = %198
  %202 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %203 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %202, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %206 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %205, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = add nsw i64 %204, %207
  %209 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %210 = load i32, i32* %10, align 4
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %209, i64 %211
  %213 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %212, i32 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = icmp ugt i64 %208, %214
  br i1 %215, label %216, label %274

216:                                              ; preds = %201, %187
  %217 = load i32, i32* %4, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %216
  %220 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %221 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %220, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %11, align 8
  br label %231

223:                                              ; preds = %216
  %224 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %225 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %224, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %228 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %227, i32 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = add nsw i64 %226, %229
  store i64 %230, i64* %11, align 8
  br label %231

231:                                              ; preds = %223, %219
  %232 = load i64, i64* %11, align 8
  %233 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %234 = load i32, i32* %10, align 4
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %233, i64 %235
  %237 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %236, i32 0, i32 0
  %238 = load i64, i64* %237, align 8
  %239 = sub i64 %232, %238
  store i64 %239, i64* %12, align 8
  %240 = load i64, i64* %12, align 8
  %241 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %242 = load i32, i32* %10, align 4
  %243 = zext i32 %242 to i64
  %244 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %241, i64 %243
  %245 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %244, i32 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = icmp ult i64 %240, %246
  br i1 %247, label %248, label %257

248:                                              ; preds = %231
  %249 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %250 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %249, i32 0, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %248
  %254 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %255 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %254, i32 0, i32 4
  store i8 1, i8* %255, align 8
  br label %256

256:                                              ; preds = %253, %248
  store i1 false, i1* %2, align 1
  br label %364

257:                                              ; preds = %231
  %258 = load i64, i64* %11, align 8
  %259 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %260 = load i32, i32* %10, align 4
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %259, i64 %261
  %263 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %262, i32 0, i32 0
  store i64 %258, i64* %263, align 8
  %264 = load i64, i64* %12, align 8
  %265 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %266 = load i32, i32* %10, align 4
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %265, i64 %267
  %269 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %268, i32 0, i32 2
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %270, %264
  store i64 %271, i64* %269, align 8
  %272 = load i32, i32* %10, align 4
  %273 = add i32 %272, -1
  store i32 %273, i32* %10, align 4
  br label %309

274:                                              ; preds = %201, %198
  %275 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %276 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %275, i32 0, i32 6
  %277 = load %struct.extent_info*, %struct.extent_info** %276, align 8
  %278 = load i32, i32* %4, align 4
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %277, i64 %279
  store %struct.extent_info* %280, %struct.extent_info** %5, align 8
  %281 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %282 = load i32, i32* %10, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %281, i64 %283
  %285 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %284, i32 0, i32 0
  %286 = load i64, i64* %285, align 8
  %287 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %288 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %287, i32 0, i32 0
  store i64 %286, i64* %288, align 8
  %289 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %290 = load i32, i32* %10, align 4
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %289, i64 %291
  %293 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %292, i32 0, i32 2
  %294 = load i64, i64* %293, align 8
  %295 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %296 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %295, i32 0, i32 1
  store i64 %294, i64* %296, align 8
  %297 = load %struct.fiemap_extent*, %struct.fiemap_extent** %8, align 8
  %298 = load i32, i32* %10, align 4
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %297, i64 %299
  %301 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %300, i32 0, i32 4
  %302 = load i32, i32* %301, align 8
  %303 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %304 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %303, i32 0, i32 2
  store i32 %302, i32* %304, align 8
  %305 = load i32, i32* %4, align 4
  %306 = add i32 %305, 1
  store i32 %306, i32* %4, align 4
  br label %307

307:                                              ; preds = %274
  br label %308

308:                                              ; preds = %307, %165
  br label %309

309:                                              ; preds = %308, %257
  %310 = load i32, i32* %10, align 4
  %311 = add i32 %310, 1
  store i32 %311, i32* %10, align 4
  br label %112, !llvm.loop !23

312:                                              ; preds = %112
  %313 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %314 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %313, i32 0, i32 2
  %315 = load i32, i32* %314, align 8
  %316 = and i32 %315, 1
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %318, label %321

318:                                              ; preds = %312
  %319 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %320 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %319, i32 0, i32 5
  store i8 1, i8* %320, align 1
  br label %321

321:                                              ; preds = %318, %312
  %322 = load i32, i32* %4, align 4
  %323 = icmp ugt i32 %322, 72
  br i1 %323, label %324, label %338

324:                                              ; preds = %321
  %325 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %326 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %325, i32 0, i32 5
  %327 = load i8, i8* %326, align 1
  %328 = trunc i8 %327 to i1
  br i1 %328, label %338, label %329

329:                                              ; preds = %324
  %330 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %331 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %330, i32 0, i32 6
  %332 = load %struct.extent_info*, %struct.extent_info** %331, align 8
  %333 = load i32, i32* %4, align 4
  %334 = add i32 %333, -1
  store i32 %334, i32* %4, align 4
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %332, i64 %335
  %337 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %336, i64 -1
  store %struct.extent_info* %337, %struct.extent_info** %5, align 8
  br label %338

338:                                              ; preds = %329, %324, %321
  %339 = load i32, i32* %4, align 4
  %340 = zext i32 %339 to i64
  %341 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %342 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %341, i32 0, i32 3
  store i64 %340, i64* %342, align 8
  %343 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %344 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %343, i32 0, i32 5
  %345 = load i8, i8* %344, align 1
  %346 = trunc i8 %345 to i1
  br i1 %346, label %347, label %348

347:                                              ; preds = %338
  br label %363

348:                                              ; preds = %338
  %349 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %350 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %349, i32 0, i32 0
  %351 = load i64, i64* %350, align 8
  %352 = load %struct.extent_info*, %struct.extent_info** %5, align 8
  %353 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %352, i32 0, i32 1
  %354 = load i64, i64* %353, align 8
  %355 = add nsw i64 %351, %354
  %356 = load %struct.extent_scan*, %struct.extent_scan** %3, align 8
  %357 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %356, i32 0, i32 1
  store i64 %355, i64* %357, align 8
  br label %358

358:                                              ; preds = %348
  %359 = load i32, i32* %4, align 4
  %360 = icmp uge i32 %359, 72
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  br label %363

362:                                              ; preds = %358
  br label %16

363:                                              ; preds = %361, %347
  store i1 true, i1* %2, align 1
  br label %364

364:                                              ; preds = %363, %256, %60, %54
  %365 = load i1, i1* %2, align 1
  ret i1 %365
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @force_linkat(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4, i1 zeroext %5) #3 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca [256 x i8], align 16
  %16 = alloca i8*, align 8
  %17 = alloca %struct.link_arg, align 8
  %18 = alloca i32, align 4
  store i32 %0, i32* %8, align 4
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  %19 = zext i1 %5 to i8
  store i8 %19, i8* %13, align 1
  %20 = load i32, i32* %8, align 4
  %21 = load i8*, i8** %9, align 8
  %22 = load i32, i32* %10, align 4
  %23 = load i8*, i8** %11, align 8
  %24 = load i32, i32* %12, align 4
  %25 = call i32 @linkat(i32 %20, i8* %21, i32 %22, i8* %23, i32 %24) #13
  store i32 %25, i32* %14, align 4
  %26 = load i8, i8* %13, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %35

28:                                               ; preds = %6
  %29 = load i32, i32* %14, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = call i32* @__errno_location() #16
  %33 = load i32, i32* %32, align 4
  %34 = icmp ne i32 %33, 17
  br i1 %34, label %35, label %37

35:                                               ; preds = %31, %28, %6
  %36 = load i32, i32* %14, align 4
  store i32 %36, i32* %7, align 4
  br label %89

37:                                               ; preds = %31
  %38 = load i8*, i8** %11, align 8
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %40 = call i8* @samedir_template(i8* %38, i8* %39)
  store i8* %40, i8** %16, align 8
  %41 = load i8*, i8** %16, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store i32 -1, i32* %7, align 4
  br label %89

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %17, i32 0, i32 0
  %46 = load i32, i32* %8, align 4
  store i32 %46, i32* %45, align 8
  %47 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %17, i32 0, i32 1
  %48 = load i8*, i8** %9, align 8
  store i8* %48, i8** %47, align 8
  %49 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %17, i32 0, i32 2
  %50 = load i32, i32* %10, align 4
  store i32 %50, i32* %49, align 8
  %51 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %17, i32 0, i32 3
  %52 = load i32, i32* %12, align 4
  store i32 %52, i32* %51, align 4
  %53 = load i8*, i8** %16, align 8
  %54 = bitcast %struct.link_arg* %17 to i8*
  %55 = call i32 @try_tempname_len(i8* %53, i32 0, i8* %54, i32 (i8*, i8*)* @try_link, i64 6)
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %44
  %58 = call i32* @__errno_location() #16
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %18, align 4
  br label %76

60:                                               ; preds = %44
  %61 = load i32, i32* %10, align 4
  %62 = load i8*, i8** %16, align 8
  %63 = load i32, i32* %10, align 4
  %64 = load i8*, i8** %11, align 8
  %65 = call i32 @renameat(i32 %61, i8* %62, i32 %63, i8* %64) #13
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %60
  br label %71

68:                                               ; preds = %60
  %69 = call i32* @__errno_location() #16
  %70 = load i32, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %67
  %72 = phi i32 [ 0, %67 ], [ %70, %68 ]
  store i32 %72, i32* %18, align 4
  %73 = load i32, i32* %10, align 4
  %74 = load i8*, i8** %16, align 8
  %75 = call i32 @unlinkat(i32 %73, i8* %74, i32 0) #13
  br label %76

76:                                               ; preds = %71, %57
  %77 = load i8*, i8** %16, align 8
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %79 = icmp ne i8* %77, %78
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = load i8*, i8** %16, align 8
  call void @free(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %76
  %83 = load i32, i32* %18, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  store i32 1, i32* %7, align 4
  br label %89

86:                                               ; preds = %82
  %87 = load i32, i32* %18, align 4
  %88 = call i32* @__errno_location() #16
  store i32 %87, i32* %88, align 4
  store i32 -1, i32* %7, align 4
  br label %89

89:                                               ; preds = %86, %85, %43, %35
  %90 = load i32, i32* %7, align 4
  ret i32 %90
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i8* @last_component(i8* %9) #15
  %11 = load i8*, i8** %4, align 8
  %12 = ptrtoint i8* %10 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 %12, %13
  store i64 %14, i64* %6, align 8
  %15 = load i64, i64* %6, align 8
  %16 = add i64 %15, 9
  store i64 %16, i64* %7, align 8
  %17 = load i64, i64* %7, align 8
  %18 = icmp ule i64 %17, 256
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %5, align 8
  store i8* %20, i8** %8, align 8
  br label %29

21:                                               ; preds = %2
  %22 = load i64, i64* %7, align 8
  %23 = call noalias i8* @malloc(i64 %22) #13
  store i8* %23, i8** %8, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = load i8*, i8** %8, align 8
  store i8* %27, i8** %3, align 8
  br label %36

28:                                               ; preds = %21
  br label %29

29:                                               ; preds = %28, %19
  %30 = load i8*, i8** %8, align 8
  %31 = load i8*, i8** %4, align 8
  %32 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false)
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = call i8* @strcpy(i8* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #13
  %35 = load i8*, i8** %8, align 8
  store i8* %35, i8** %3, align 8
  br label %36

36:                                               ; preds = %29, %26
  %37 = load i8*, i8** %3, align 8
  ret i8* %37
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.link_arg*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast i8* %6 to %struct.link_arg*
  store %struct.link_arg* %7, %struct.link_arg** %5, align 8
  %8 = load %struct.link_arg*, %struct.link_arg** %5, align 8
  %9 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = load %struct.link_arg*, %struct.link_arg** %5, align 8
  %12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %11, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load %struct.link_arg*, %struct.link_arg** %5, align 8
  %15 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = load %struct.link_arg*, %struct.link_arg** %5, align 8
  %19 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @linkat(i32 %10, i8* %13, i32 %16, i8* %17, i32 %20) #13
  ret i32 %21
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #1

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @force_symlinkat(i8* %0, i32 %1, i8* %2, i1 zeroext %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca [256 x i8], align 16
  %12 = alloca i8*, align 8
  %13 = alloca %struct.symlink_arg, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  %15 = zext i1 %3 to i8
  store i8 %15, i8* %9, align 1
  %16 = load i8*, i8** %6, align 8
  %17 = load i32, i32* %7, align 4
  %18 = load i8*, i8** %8, align 8
  %19 = call i32 @symlinkat(i8* %16, i32 %17, i8* %18) #13
  store i32 %19, i32* %10, align 4
  %20 = load i8, i8* %9, align 1
  %21 = trunc i8 %20 to i1
  br i1 %21, label %22, label %29

22:                                               ; preds = %4
  %23 = load i32, i32* %10, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = call i32* @__errno_location() #16
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 17
  br i1 %28, label %29, label %31

29:                                               ; preds = %25, %22, %4
  %30 = load i32, i32* %10, align 4
  store i32 %30, i32* %5, align 4
  br label %78

31:                                               ; preds = %25
  %32 = load i8*, i8** %8, align 8
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %34 = call i8* @samedir_template(i8* %32, i8* %33)
  store i8* %34, i8** %12, align 8
  %35 = load i8*, i8** %12, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  store i32 -1, i32* %5, align 4
  br label %78

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %13, i32 0, i32 0
  %40 = load i8*, i8** %6, align 8
  store i8* %40, i8** %39, align 8
  %41 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %13, i32 0, i32 1
  %42 = load i32, i32* %7, align 4
  store i32 %42, i32* %41, align 8
  %43 = load i8*, i8** %12, align 8
  %44 = bitcast %struct.symlink_arg* %13 to i8*
  %45 = call i32 @try_tempname_len(i8* %43, i32 0, i8* %44, i32 (i8*, i8*)* @try_symlink, i64 6)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %38
  %48 = call i32* @__errno_location() #16
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %14, align 4
  br label %65

50:                                               ; preds = %38
  %51 = load i32, i32* %7, align 4
  %52 = load i8*, i8** %12, align 8
  %53 = load i32, i32* %7, align 4
  %54 = load i8*, i8** %8, align 8
  %55 = call i32 @renameat(i32 %51, i8* %52, i32 %53, i8* %54) #13
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %50
  %58 = call i32* @__errno_location() #16
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %14, align 4
  %60 = load i32, i32* %7, align 4
  %61 = load i8*, i8** %12, align 8
  %62 = call i32 @unlinkat(i32 %60, i8* %61, i32 0) #13
  br label %64

63:                                               ; preds = %50
  store i32 0, i32* %14, align 4
  br label %64

64:                                               ; preds = %63, %57
  br label %65

65:                                               ; preds = %64, %47
  %66 = load i8*, i8** %12, align 8
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %68 = icmp ne i8* %66, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = load i8*, i8** %12, align 8
  call void @free(i8* %70) #13
  br label %71

71:                                               ; preds = %69, %65
  %72 = load i32, i32* %14, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  store i32 1, i32* %5, align 4
  br label %78

75:                                               ; preds = %71
  %76 = load i32, i32* %14, align 4
  %77 = call i32* @__errno_location() #16
  store i32 %76, i32* %77, align 4
  store i32 -1, i32* %5, align 4
  br label %78

78:                                               ; preds = %75, %74, %37, %29
  %79 = load i32, i32* %5, align 4
  ret i32 %79
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.symlink_arg*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast i8* %6 to %struct.symlink_arg*
  store %struct.symlink_arg* %7, %struct.symlink_arg** %5, align 8
  %8 = load %struct.symlink_arg*, %struct.symlink_arg** %5, align 8
  %9 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %8, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = load %struct.symlink_arg*, %struct.symlink_arg** %5, align 8
  %12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %3, align 8
  %15 = call i32 @symlinkat(i8* %10, i32 %13, i8* %14) #13
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @copy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4) #3 {
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = load i32, i32* %7, align 4
  %14 = load i8*, i8** %8, align 8
  %15 = load i32, i32* %9, align 4
  %16 = load i32, i32* %10, align 4
  %17 = call i32 @qcopy_acl(i8* %12, i32 %13, i8* %14, i32 %15, i32 %16)
  store i32 %17, i32* %11, align 4
  %18 = load i32, i32* %11, align 4
  switch i32 %18, label %30 [
    i32 -2, label %19
    i32 -1, label %24
  ]

19:                                               ; preds = %5
  %20 = call i32* @__errno_location() #16
  %21 = load i32, i32* %20, align 4
  %22 = load i8*, i8** %6, align 8
  %23 = call i8* @quote(i8* %22)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.230, i64 0, i64 0), i8* %23)
  br label %31

24:                                               ; preds = %5
  %25 = call i32* @__errno_location() #16
  %26 = load i32, i32* %25, align 4
  %27 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.231, i64 0, i64 0)) #13
  %28 = load i8*, i8** %8, align 8
  %29 = call i8* @quote(i8* %28)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %26, i8* %27, i8* %29)
  br label %31

30:                                               ; preds = %5
  br label %31

31:                                               ; preds = %30, %24, %19
  %32 = load i32, i32* %11, align 4
  ret i32 %32
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acl(i8* %0, i32 %1, i32 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i8*, i8** %4, align 8
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  %11 = call i32 @qset_acl(i8* %8, i32 %9, i32 %10)
  store i32 %11, i32* %7, align 4
  %12 = load i32, i32* %7, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = call i32* @__errno_location() #16
  %16 = load i32, i32* %15, align 4
  %17 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.234, i64 0, i64 0)) #13
  %18 = load i8*, i8** %4, align 8
  %19 = call i8* @quote(i8* %18)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %17, i8* %19)
  br label %20

20:                                               ; preds = %14, %3
  %21 = load i32, i32* %7, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @areadlink_with_size(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 1024, i64* %6, align 8
  store i64 8192, i64* %7, align 8
  %14 = load i64, i64* %6, align 8
  %15 = load i64, i64* %7, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load i64, i64* %6, align 8
  %19 = add i64 %18, 1
  br label %22

20:                                               ; preds = %2
  %21 = load i64, i64* %7, align 8
  br label %22

22:                                               ; preds = %20, %17
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  store i64 %23, i64* %8, align 8
  %24 = load i64, i64* %5, align 8
  %25 = load i64, i64* %8, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = load i64, i64* %5, align 8
  %29 = add i64 %28, 1
  br label %32

30:                                               ; preds = %22
  %31 = load i64, i64* %8, align 8
  br label %32

32:                                               ; preds = %30, %27
  %33 = phi i64 [ %29, %27 ], [ %31, %30 ]
  store i64 %33, i64* %9, align 8
  br label %34

34:                                               ; preds = %81, %32
  %35 = load i64, i64* %9, align 8
  %36 = call noalias i8* @malloc(i64 %35) #13
  store i8* %36, i8** %12, align 8
  %37 = load i8*, i8** %12, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  store i8* null, i8** %3, align 8
  br label %82

40:                                               ; preds = %34
  %41 = load i8*, i8** %4, align 8
  %42 = load i8*, i8** %12, align 8
  %43 = load i64, i64* %9, align 8
  %44 = call i64 @readlink(i8* %41, i8* %42, i64 %43) #13
  store i64 %44, i64* %10, align 8
  %45 = load i64, i64* %10, align 8
  store i64 %45, i64* %11, align 8
  %46 = load i64, i64* %10, align 8
  %47 = icmp slt i64 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %40
  %49 = call i32* @__errno_location() #16
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 %50, 34
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = call i32* @__errno_location() #16
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %13, align 4
  %55 = load i8*, i8** %12, align 8
  call void @free(i8* %55) #13
  %56 = load i32, i32* %13, align 4
  %57 = call i32* @__errno_location() #16
  store i32 %56, i32* %57, align 4
  store i8* null, i8** %3, align 8
  br label %82

58:                                               ; preds = %48, %40
  %59 = load i64, i64* %11, align 8
  %60 = load i64, i64* %9, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = load i8*, i8** %12, align 8
  %64 = load i64, i64* %11, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  store i8 0, i8* %65, align 1
  %66 = load i8*, i8** %12, align 8
  store i8* %66, i8** %3, align 8
  br label %82

67:                                               ; preds = %58
  %68 = load i8*, i8** %12, align 8
  call void @free(i8* %68) #13
  %69 = load i64, i64* %9, align 8
  %70 = icmp ule i64 %69, 4611686018427387903
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = load i64, i64* %9, align 8
  %73 = mul i64 %72, 2
  store i64 %73, i64* %9, align 8
  br label %81

74:                                               ; preds = %67
  %75 = load i64, i64* %9, align 8
  %76 = icmp ult i64 %75, 9223372036854775807
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  store i64 9223372036854775807, i64* %9, align 8
  br label %80

78:                                               ; preds = %74
  %79 = call i32* @__errno_location() #16
  store i32 12, i32* %79, align 4
  store i8* null, i8** %3, align 8
  br label %82

80:                                               ; preds = %77
  br label %81

81:                                               ; preds = %80, %71
  br label %34

82:                                               ; preds = %78, %62, %52, %39
  %83 = load i8*, i8** %3, align 8
  ret i8* %83
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #8 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  store i8* %0, i8** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 -1, i64* %12, align 8
  store i8 0, i8* %13, align 1
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @strlen(i8* %14) #15
  store i64 %15, i64* %11, align 8
  store i64 0, i64* %10, align 8
  br label %16

16:                                               ; preds = %68, %4
  %17 = load i8**, i8*** %7, align 8
  %18 = load i64, i64* %10, align 8
  %19 = getelementptr inbounds i8*, i8** %17, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %71

22:                                               ; preds = %16
  %23 = load i8**, i8*** %7, align 8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds i8*, i8** %23, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = load i64, i64* %11, align 8
  %29 = call i32 @strncmp(i8* %26, i8* %27, i64 %28) #15
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %67, label %31

31:                                               ; preds = %22
  %32 = load i8**, i8*** %7, align 8
  %33 = load i64, i64* %10, align 8
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33
  %35 = load i8*, i8** %34, align 8
  %36 = call i64 @strlen(i8* %35) #15
  %37 = load i64, i64* %11, align 8
  %38 = icmp eq i64 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %31
  %40 = load i64, i64* %10, align 8
  store i64 %40, i64* %5, align 8
  br label %77

41:                                               ; preds = %31
  %42 = load i64, i64* %12, align 8
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load i64, i64* %10, align 8
  store i64 %45, i64* %12, align 8
  br label %65

46:                                               ; preds = %41
  %47 = load i8*, i8** %8, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = load i8*, i8** %8, align 8
  %51 = load i64, i64* %9, align 8
  %52 = load i64, i64* %12, align 8
  %53 = mul i64 %51, %52
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = load i8*, i8** %8, align 8
  %56 = load i64, i64* %9, align 8
  %57 = load i64, i64* %10, align 8
  %58 = mul i64 %56, %57
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  %60 = load i64, i64* %9, align 8
  %61 = call i32 @memcmp(i8* %54, i8* %59, i64 %60) #15
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %49, %46
  store i8 1, i8* %13, align 1
  br label %64

64:                                               ; preds = %63, %49
  br label %65

65:                                               ; preds = %64, %44
  br label %66

66:                                               ; preds = %65
  br label %67

67:                                               ; preds = %66, %22
  br label %68

68:                                               ; preds = %67
  %69 = load i64, i64* %10, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %10, align 8
  br label %16, !llvm.loop !24

71:                                               ; preds = %16
  %72 = load i8, i8* %13, align 1
  %73 = trunc i8 %72 to i1
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i64 -2, i64* %5, align 8
  br label %77

75:                                               ; preds = %71
  %76 = load i64, i64* %12, align 8
  store i64 %76, i64* %5, align 8
  br label %77

77:                                               ; preds = %75, %74, %39
  %78 = load i64, i64* %5, align 8
  ret i64 %78
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @argmatch_invalid(i8* %0, i8* %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64, i64* %6, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.237, i64 0, i64 0)) #13
  br label %14

12:                                               ; preds = %3
  %13 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.238, i64 0, i64 0)) #13
  br label %14

14:                                               ; preds = %12, %10
  %15 = phi i8* [ %11, %10 ], [ %13, %12 ]
  store i8* %15, i8** %7, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %17)
  %19 = load i8*, i8** %4, align 8
  %20 = call i8* @quote_n(i32 1, i8* %19)
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %16, i8* %18, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @argmatch_valid(i8** %0, i8* %1, i64 %2) #3 {
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  store i8* null, i8** %8, align 8
  %9 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.239, i64 0, i64 0)) #13
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 @fputs_unlocked(i8* %9, %struct._IO_FILE* %10)
  store i64 0, i64* %7, align 8
  br label %12

12:                                               ; preds = %53, %3
  %13 = load i8**, i8*** %4, align 8
  %14 = load i64, i64* %7, align 8
  %15 = getelementptr inbounds i8*, i8** %13, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %56

18:                                               ; preds = %12
  %19 = load i64, i64* %7, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %8, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = mul i64 %24, %25
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = load i64, i64* %6, align 8
  %29 = call i32 @memcmp(i8* %22, i8* %27, i64 %28) #15
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %21, %18
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = load i8**, i8*** %4, align 8
  %34 = load i64, i64* %7, align 8
  %35 = getelementptr inbounds i8*, i8** %33, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = call i8* @quote(i8* %36)
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.240, i64 0, i64 0), i8* %37)
  %39 = load i8*, i8** %5, align 8
  %40 = load i64, i64* %6, align 8
  %41 = load i64, i64* %7, align 8
  %42 = mul i64 %40, %41
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  store i8* %43, i8** %8, align 8
  br label %52

44:                                               ; preds = %21
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = load i8**, i8*** %4, align 8
  %47 = load i64, i64* %7, align 8
  %48 = getelementptr inbounds i8*, i8** %46, i64 %47
  %49 = load i8*, i8** %48, align 8
  %50 = call i8* @quote(i8* %49)
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.241, i64 0, i64 0), i8* %50)
  br label %52

52:                                               ; preds = %44, %31
  br label %53

53:                                               ; preds = %52
  %54 = load i64, i64* %7, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %7, align 8
  br label %12, !llvm.loop !25

56:                                               ; preds = %12
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %57)
  ret void
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @__xargmatch_internal(i8* %0, i8* %1, i8** %2, i8* %3, i64 %4, void ()* %5) #3 {
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca void ()*, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  store i8* %1, i8** %9, align 8
  store i8** %2, i8*** %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store void ()* %5, void ()** %13, align 8
  %15 = load i8*, i8** %9, align 8
  %16 = load i8**, i8*** %10, align 8
  %17 = load i8*, i8** %11, align 8
  %18 = load i64, i64* %12, align 8
  %19 = call i64 @argmatch(i8* %15, i8** %16, i8* %17, i64 %18) #15
  store i64 %19, i64* %14, align 8
  %20 = load i64, i64* %14, align 8
  %21 = icmp sge i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %6
  %23 = load i64, i64* %14, align 8
  store i64 %23, i64* %7, align 8
  br label %32

24:                                               ; preds = %6
  %25 = load i8*, i8** %8, align 8
  %26 = load i8*, i8** %9, align 8
  %27 = load i64, i64* %14, align 8
  call void @argmatch_invalid(i8* %25, i8* %26, i64 %27)
  %28 = load i8**, i8*** %10, align 8
  %29 = load i8*, i8** %11, align 8
  %30 = load i64, i64* %12, align 8
  call void @argmatch_valid(i8** %28, i8* %29, i64 %30)
  %31 = load void ()*, void ()** %13, align 8
  call void %31()
  store i64 -1, i64* %7, align 8
  br label %32

32:                                               ; preds = %24, %22
  %33 = load i64, i64* %7, align 8
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #3 {
  call void @usage(i32 1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_simple_backup_suffix(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.248, i64 0, i64 0)) #13
  store i8* %6, i8** %2, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = load i8*, i8** %2, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %22

10:                                               ; preds = %7
  %11 = load i8*, i8** %2, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = load i8*, i8** %2, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = call i8* @last_component(i8* %17) #15
  %19 = icmp eq i8* %16, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = load i8*, i8** %2, align 8
  br label %23

22:                                               ; preds = %15, %10, %7
  br label %23

23:                                               ; preds = %22, %20
  %24 = phi i8* [ %21, %20 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.249, i64 0, i64 0), %22 ]
  store i8* %24, i8** @simple_backup_suffix, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @backupfile_internal(i8* %0, i32 %1, i1 zeroext %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %struct.__dirstream*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  %18 = zext i1 %2 to i8
  store i8 %18, i8* %7, align 1
  %19 = load i8*, i8** %5, align 8
  %20 = call i8* @last_component(i8* %19) #15
  %21 = load i8*, i8** %5, align 8
  %22 = ptrtoint i8* %20 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = sub i64 %22, %23
  store i64 %24, i64* %8, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load i8*, i8** %5, align 8
  %27 = load i64, i64* %8, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = call i64 @strlen(i8* %28) #15
  %30 = add i64 %25, %29
  store i64 %30, i64* %9, align 8
  %31 = load i8*, i8** @simple_backup_suffix, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %3
  call void @set_simple_backup_suffix(i8* null)
  br label %34

34:                                               ; preds = %33, %3
  %35 = load i8*, i8** @simple_backup_suffix, align 8
  %36 = call i64 @strlen(i8* %35) #15
  %37 = add i64 %36, 1
  store i64 %37, i64* %10, align 8
  %38 = load i64, i64* %10, align 8
  store i64 %38, i64* %11, align 8
  %39 = load i64, i64* %11, align 8
  %40 = icmp ult i64 %39, 9
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  store i64 9, i64* %11, align 8
  br label %42

42:                                               ; preds = %41, %34
  %43 = load i64, i64* %9, align 8
  %44 = load i64, i64* %11, align 8
  %45 = add i64 %43, %44
  %46 = add i64 %45, 1
  store i64 %46, i64* %12, align 8
  %47 = load i64, i64* %12, align 8
  %48 = call noalias i8* @malloc(i64 %47) #13
  store i8* %48, i8** %13, align 8
  %49 = load i8*, i8** %13, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %42
  %52 = load i8*, i8** %13, align 8
  store i8* %52, i8** %4, align 8
  br label %146

53:                                               ; preds = %42
  store %struct.__dirstream* null, %struct.__dirstream** %14, align 8
  br label %54

54:                                               ; preds = %137, %53
  %55 = load i8*, i8** %13, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = load i64, i64* %9, align 8
  %58 = add i64 %57, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %56, i64 %58, i1 false)
  %59 = load i32, i32* %6, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %54
  %62 = load i8*, i8** %13, align 8
  %63 = load i64, i64* %9, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = load i8*, i8** @simple_backup_suffix, align 8
  %66 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %65, i64 %66, i1 false)
  br label %92

67:                                               ; preds = %54
  %68 = load i64, i64* %12, align 8
  %69 = load i64, i64* %9, align 8
  %70 = load i64, i64* %8, align 8
  %71 = call i32 @numbered_backup(i8** %13, i64 %68, i64 %69, i64 %70, %struct.__dirstream** %14)
  switch i32 %71, label %91 [
    i32 0, label %72
    i32 2, label %73
    i32 1, label %85
    i32 3, label %88
  ]

72:                                               ; preds = %67
  br label %91

73:                                               ; preds = %67
  %74 = load i32, i32* %6, align 4
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %82

76:                                               ; preds = %73
  store i32 1, i32* %6, align 4
  %77 = load i8*, i8** %13, align 8
  %78 = load i64, i64* %9, align 8
  %79 = getelementptr inbounds i8, i8* %77, i64 %78
  %80 = load i8*, i8** @simple_backup_suffix, align 8
  %81 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %80, i64 %81, i1 false)
  br label %82

82:                                               ; preds = %76, %73
  %83 = load i8*, i8** %13, align 8
  %84 = load i64, i64* %9, align 8
  call void @check_extension(i8* %83, i64 %84, i8 signext 126)
  br label %91

85:                                               ; preds = %67
  %86 = load i8*, i8** %13, align 8
  %87 = load i64, i64* %9, align 8
  call void @check_extension(i8* %86, i64 %87, i8 signext 126)
  br label %91

88:                                               ; preds = %67
  %89 = load i8*, i8** %13, align 8
  call void @free(i8* %89) #13
  %90 = call i32* @__errno_location() #16
  store i32 12, i32* %90, align 4
  store i8* null, i8** %4, align 8
  br label %146

91:                                               ; preds = %85, %82, %72, %67
  br label %92

92:                                               ; preds = %91, %61
  %93 = load i8, i8* %7, align 1
  %94 = trunc i8 %93 to i1
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  br label %138

96:                                               ; preds = %92
  %97 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %98 = icmp ne %struct.__dirstream* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %101 = call i32 @dirfd(%struct.__dirstream* %100) #13
  br label %103

102:                                              ; preds = %96
  br label %103

103:                                              ; preds = %102, %99
  %104 = phi i32 [ %101, %99 ], [ -1, %102 ]
  store i32 %104, i32* %15, align 4
  %105 = load i32, i32* %15, align 4
  %106 = icmp slt i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %103
  store i32 -100, i32* %15, align 4
  store i64 0, i64* %8, align 8
  br label %108

108:                                              ; preds = %107, %103
  %109 = load i32, i32* %6, align 4
  %110 = icmp eq i32 %109, 1
  %111 = zext i1 %110 to i64
  %112 = select i1 %110, i32 0, i32 1
  store i32 %112, i32* %16, align 4
  %113 = load i8*, i8** %5, align 8
  %114 = load i32, i32* %15, align 4
  %115 = load i8*, i8** %13, align 8
  %116 = load i64, i64* %8, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = load i32, i32* %16, align 4
  %119 = call i32 @renameat2(i32 -100, i8* %113, i32 %114, i8* %117, i32 %118)
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %108
  br label %138

122:                                              ; preds = %108
  %123 = call i32* @__errno_location() #16
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %17, align 4
  %125 = load i32, i32* %17, align 4
  %126 = icmp ne i32 %125, 17
  br i1 %126, label %127, label %137

127:                                              ; preds = %122
  %128 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %129 = icmp ne %struct.__dirstream* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %132 = call i32 @closedir(%struct.__dirstream* %131)
  br label %133

133:                                              ; preds = %130, %127
  %134 = load i8*, i8** %13, align 8
  call void @free(i8* %134) #13
  %135 = load i32, i32* %17, align 4
  %136 = call i32* @__errno_location() #16
  store i32 %135, i32* %136, align 4
  store i8* null, i8** %4, align 8
  br label %146

137:                                              ; preds = %122
  br label %54

138:                                              ; preds = %121, %95
  %139 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %140 = icmp ne %struct.__dirstream* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load %struct.__dirstream*, %struct.__dirstream** %14, align 8
  %143 = call i32 @closedir(%struct.__dirstream* %142)
  br label %144

144:                                              ; preds = %141, %138
  %145 = load i8*, i8** %13, align 8
  store i8* %145, i8** %4, align 8
  br label %146

146:                                              ; preds = %144, %133, %88, %51
  %147 = load i8*, i8** %4, align 8
  ret i8* %147
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i8** %0, i64 %1, i64 %2, i64 %3, %struct.__dirstream** %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %struct.__dirstream**, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.__dirstream*, align 8
  %14 = alloca %struct.dirent*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca [2 x i8], align 1
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8*, align 8
  store i8** %0, i8*** %7, align 8
  store i64 %1, i64* %8, align 8
  store i64 %2, i64* %9, align 8
  store i64 %3, i64* %10, align 8
  store %struct.__dirstream** %4, %struct.__dirstream*** %11, align 8
  store i32 2, i32* %12, align 4
  %26 = load %struct.__dirstream**, %struct.__dirstream*** %11, align 8
  %27 = load %struct.__dirstream*, %struct.__dirstream** %26, align 8
  store %struct.__dirstream* %27, %struct.__dirstream** %13, align 8
  %28 = load i8**, i8*** %7, align 8
  %29 = load i8*, i8** %28, align 8
  store i8* %29, i8** %15, align 8
  store i64 1, i64* %16, align 8
  %30 = load i8*, i8** %15, align 8
  %31 = load i64, i64* %10, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %17, align 8
  %33 = load i8*, i8** %17, align 8
  %34 = call i64 @base_len(i8* %33) #15
  store i64 %34, i64* %18, align 8
  %35 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  %36 = icmp ne %struct.__dirstream* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %5
  %38 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  call void @rewinddir(%struct.__dirstream* %38) #13
  br label %67

39:                                               ; preds = %5
  %40 = getelementptr inbounds [2 x i8], [2 x i8]* %19, i64 0, i64 0
  %41 = load i8*, i8** %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %41, i64 2, i1 false)
  %42 = load i8*, i8** %17, align 8
  %43 = call i8* @strcpy(i8* %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.252, i64 0, i64 0)) #13
  %44 = load i8*, i8** %15, align 8
  %45 = call %struct.__dirstream* @opendir_safer(i8* %44)
  store %struct.__dirstream* %45, %struct.__dirstream** %13, align 8
  %46 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  %47 = icmp ne %struct.__dirstream* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %39
  %49 = call i32* @__errno_location() #16
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 12
  br i1 %51, label %52, label %53

52:                                               ; preds = %48
  store i32 3, i32* %12, align 4
  br label %53

53:                                               ; preds = %52, %48, %39
  %54 = load i8*, i8** %17, align 8
  %55 = getelementptr inbounds [2 x i8], [2 x i8]* %19, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 2, i1 false)
  %56 = load i8*, i8** %17, align 8
  %57 = load i64, i64* %18, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = call i8* @strcpy(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.253, i64 0, i64 0)) #13
  %60 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  %61 = icmp ne %struct.__dirstream* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %53
  %63 = load i32, i32* %12, align 4
  store i32 %63, i32* %6, align 4
  br label %247

64:                                               ; preds = %53
  %65 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  %66 = load %struct.__dirstream**, %struct.__dirstream*** %11, align 8
  store %struct.__dirstream* %65, %struct.__dirstream** %66, align 8
  br label %67

67:                                               ; preds = %64, %37
  br label %68

68:                                               ; preds = %239, %172, %109, %92, %80, %67
  %69 = load %struct.__dirstream*, %struct.__dirstream** %13, align 8
  %70 = call %struct.dirent* @readdir(%struct.__dirstream* %69)
  store %struct.dirent* %70, %struct.dirent** %14, align 8
  %71 = icmp ne %struct.dirent* %70, null
  br i1 %71, label %72, label %243

72:                                               ; preds = %68
  %73 = load %struct.dirent*, %struct.dirent** %14, align 8
  %74 = getelementptr inbounds %struct.dirent, %struct.dirent* %73, i32 0, i32 4
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* %74, i64 0, i64 0
  %76 = call i64 @strlen(i8* %75) #15
  %77 = load i64, i64* %18, align 8
  %78 = add i64 %77, 4
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %72
  br label %68, !llvm.loop !26

81:                                               ; preds = %72
  %82 = load i8*, i8** %15, align 8
  %83 = load i64, i64* %10, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = load %struct.dirent*, %struct.dirent** %14, align 8
  %86 = getelementptr inbounds %struct.dirent, %struct.dirent* %85, i32 0, i32 4
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %86, i64 0, i64 0
  %88 = load i64, i64* %18, align 8
  %89 = add i64 %88, 2
  %90 = call i32 @memcmp(i8* %84, i8* %87, i64 %89) #15
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %81
  br label %68, !llvm.loop !26

93:                                               ; preds = %81
  %94 = load %struct.dirent*, %struct.dirent** %14, align 8
  %95 = getelementptr inbounds %struct.dirent, %struct.dirent* %94, i32 0, i32 4
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %95, i64 0, i64 0
  %97 = load i64, i64* %18, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = getelementptr inbounds i8, i8* %98, i64 2
  store i8* %99, i8** %20, align 8
  %100 = load i8*, i8** %20, align 8
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp sle i32 49, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %93
  %105 = load i8*, i8** %20, align 8
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp sle i32 %107, 57
  br i1 %108, label %110, label %109

109:                                              ; preds = %104, %93
  br label %68, !llvm.loop !26

110:                                              ; preds = %104
  %111 = load i8*, i8** %20, align 8
  %112 = load i8, i8* %111, align 1
  %113 = sext i8 %112 to i32
  %114 = icmp eq i32 %113, 57
  %115 = zext i1 %114 to i8
  store i8 %115, i8* %22, align 1
  store i64 1, i64* %23, align 8
  br label %116

116:                                              ; preds = %138, %110
  %117 = load i8*, i8** %20, align 8
  %118 = load i64, i64* %23, align 8
  %119 = getelementptr inbounds i8, i8* %117, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = sub i32 %121, 48
  %123 = icmp ule i32 %122, 9
  br i1 %123, label %124, label %141

124:                                              ; preds = %116
  %125 = load i8*, i8** %20, align 8
  %126 = load i64, i64* %23, align 8
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = icmp eq i32 %129, 57
  %131 = zext i1 %130 to i32
  %132 = load i8, i8* %22, align 1
  %133 = trunc i8 %132 to i1
  %134 = zext i1 %133 to i32
  %135 = and i32 %134, %131
  %136 = icmp ne i32 %135, 0
  %137 = zext i1 %136 to i8
  store i8 %137, i8* %22, align 1
  br label %138

138:                                              ; preds = %124
  %139 = load i64, i64* %23, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %23, align 8
  br label %116, !llvm.loop !27

141:                                              ; preds = %116
  %142 = load i8*, i8** %20, align 8
  %143 = load i64, i64* %23, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 126
  br i1 %147, label %148, label %172

148:                                              ; preds = %141
  %149 = load i8*, i8** %20, align 8
  %150 = load i64, i64* %23, align 8
  %151 = add i64 %150, 1
  %152 = getelementptr inbounds i8, i8* %149, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = icmp ne i8 %153, 0
  br i1 %154, label %172, label %155

155:                                              ; preds = %148
  %156 = load i64, i64* %16, align 8
  %157 = load i64, i64* %23, align 8
  %158 = icmp ult i64 %156, %157
  br i1 %158, label %173, label %159

159:                                              ; preds = %155
  %160 = load i64, i64* %16, align 8
  %161 = load i64, i64* %23, align 8
  %162 = icmp eq i64 %160, %161
  br i1 %162, label %163, label %172

163:                                              ; preds = %159
  %164 = load i8*, i8** %15, align 8
  %165 = load i64, i64* %9, align 8
  %166 = getelementptr inbounds i8, i8* %164, i64 %165
  %167 = getelementptr inbounds i8, i8* %166, i64 2
  %168 = load i8*, i8** %20, align 8
  %169 = load i64, i64* %23, align 8
  %170 = call i32 @memcmp(i8* %167, i8* %168, i64 %169) #15
  %171 = icmp sle i32 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %163, %159, %148, %141
  br label %68, !llvm.loop !26

173:                                              ; preds = %163, %155
  %174 = load i8, i8* %22, align 1
  %175 = trunc i8 %174 to i1
  %176 = zext i1 %175 to i64
  %177 = load i64, i64* %23, align 8
  %178 = add i64 %176, %177
  store i64 %178, i64* %16, align 8
  %179 = load i8, i8* %22, align 1
  %180 = trunc i8 %179 to i1
  %181 = zext i1 %180 to i64
  %182 = select i1 %180, i32 1, i32 0
  store i32 %182, i32* %12, align 4
  %183 = load i64, i64* %9, align 8
  %184 = add i64 %183, 2
  %185 = load i64, i64* %16, align 8
  %186 = add i64 %184, %185
  %187 = add i64 %186, 2
  store i64 %187, i64* %24, align 8
  %188 = load i64, i64* %8, align 8
  %189 = load i64, i64* %24, align 8
  %190 = icmp ult i64 %188, %189
  br i1 %190, label %191, label %209

191:                                              ; preds = %173
  %192 = load i64, i64* %24, align 8
  %193 = icmp ult i64 4611686018427387903, %192
  br i1 %193, label %197, label %194

194:                                              ; preds = %191
  %195 = load i64, i64* %24, align 8
  %196 = mul i64 %195, 2
  store i64 %196, i64* %24, align 8
  br label %197

197:                                              ; preds = %194, %191
  %198 = load i8*, i8** %15, align 8
  %199 = load i64, i64* %24, align 8
  %200 = call i8* @realloc(i8* %198, i64 %199) #13
  store i8* %200, i8** %25, align 8
  %201 = load i8*, i8** %25, align 8
  %202 = icmp ne i8* %201, null
  br i1 %202, label %206, label %203

203:                                              ; preds = %197
  %204 = load i8*, i8** %15, align 8
  %205 = load i8**, i8*** %7, align 8
  store i8* %204, i8** %205, align 8
  store i32 3, i32* %6, align 4
  br label %247

206:                                              ; preds = %197
  %207 = load i8*, i8** %25, align 8
  store i8* %207, i8** %15, align 8
  %208 = load i64, i64* %24, align 8
  store i64 %208, i64* %8, align 8
  br label %209

209:                                              ; preds = %206, %173
  %210 = load i8*, i8** %15, align 8
  %211 = load i64, i64* %9, align 8
  %212 = getelementptr inbounds i8, i8* %210, i64 %211
  store i8* %212, i8** %21, align 8
  %213 = load i8*, i8** %21, align 8
  %214 = getelementptr inbounds i8, i8* %213, i32 1
  store i8* %214, i8** %21, align 8
  store i8 46, i8* %213, align 1
  %215 = load i8*, i8** %21, align 8
  %216 = getelementptr inbounds i8, i8* %215, i32 1
  store i8* %216, i8** %21, align 8
  store i8 126, i8* %215, align 1
  %217 = load i8*, i8** %21, align 8
  store i8 48, i8* %217, align 1
  %218 = load i8, i8* %22, align 1
  %219 = trunc i8 %218 to i1
  %220 = zext i1 %219 to i32
  %221 = load i8*, i8** %21, align 8
  %222 = sext i32 %220 to i64
  %223 = getelementptr inbounds i8, i8* %221, i64 %222
  store i8* %223, i8** %21, align 8
  %224 = load i8*, i8** %21, align 8
  %225 = load i8*, i8** %20, align 8
  %226 = load i64, i64* %23, align 8
  %227 = add i64 %226, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %224, i8* align 1 %225, i64 %227, i1 false)
  %228 = load i64, i64* %23, align 8
  %229 = load i8*, i8** %21, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %228
  store i8* %230, i8** %21, align 8
  br label %231

231:                                              ; preds = %237, %209
  %232 = load i8*, i8** %21, align 8
  %233 = getelementptr inbounds i8, i8* %232, i32 -1
  store i8* %233, i8** %21, align 8
  %234 = load i8, i8* %233, align 1
  %235 = sext i8 %234 to i32
  %236 = icmp eq i32 %235, 57
  br i1 %236, label %237, label %239

237:                                              ; preds = %231
  %238 = load i8*, i8** %21, align 8
  store i8 48, i8* %238, align 1
  br label %231, !llvm.loop !28

239:                                              ; preds = %231
  %240 = load i8*, i8** %21, align 8
  %241 = load i8, i8* %240, align 1
  %242 = add i8 %241, 1
  store i8 %242, i8* %240, align 1
  br label %68, !llvm.loop !26

243:                                              ; preds = %68
  %244 = load i8*, i8** %15, align 8
  %245 = load i8**, i8*** %7, align 8
  store i8* %244, i8** %245, align 8
  %246 = load i32, i32* %12, align 4
  store i32 %246, i32* %6, align 4
  br label %247

247:                                              ; preds = %243, %203, %62
  %248 = load i32, i32* %6, align 4
  ret i32 %248
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %0, i64 %1, i8 signext %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca [2 x i8], align 1
  %12 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %13 = load i8*, i8** %4, align 8
  %14 = call i8* @last_component(i8* %13) #15
  store i8* %14, i8** %7, align 8
  %15 = load i8*, i8** %7, align 8
  %16 = call i64 @base_len(i8* %15) #15
  store i64 %16, i64* %8, align 8
  store i64 255, i64* %9, align 8
  %17 = load i64, i64* %8, align 8
  %18 = icmp ult i64 14, %17
  br i1 %18, label %19, label %43

19:                                               ; preds = %3
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 0
  %21 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 2, i1 false)
  %22 = load i8*, i8** %7, align 8
  %23 = call i8* @strcpy(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.252, i64 0, i64 0)) #13
  %24 = call i32* @__errno_location() #16
  store i32 0, i32* %24, align 4
  %25 = load i8*, i8** %4, align 8
  %26 = call i64 @pathconf(i8* %25, i32 3) #13
  store i64 %26, i64* %10, align 8
  %27 = load i64, i64* %10, align 8
  %28 = icmp sle i64 0, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %19
  %30 = call i32* @__errno_location() #16
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %29, %19
  %34 = load i64, i64* %10, align 8
  store i64 %34, i64* %9, align 8
  store i64 %34, i64* %12, align 8
  %35 = load i64, i64* %10, align 8
  %36 = load i64, i64* %12, align 8
  %37 = icmp ne i64 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %33
  store i64 -1, i64* %9, align 8
  br label %39

39:                                               ; preds = %38, %33
  br label %40

40:                                               ; preds = %39, %29
  %41 = load i8*, i8** %7, align 8
  %42 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %42, i64 2, i1 false)
  br label %43

43:                                               ; preds = %40, %3
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %8, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %47, label %70

47:                                               ; preds = %43
  %48 = load i8*, i8** %4, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = load i8*, i8** %7, align 8
  %52 = ptrtoint i8* %50 to i64
  %53 = ptrtoint i8* %51 to i64
  %54 = sub i64 %52, %53
  store i64 %54, i64* %8, align 8
  %55 = load i64, i64* %9, align 8
  %56 = load i64, i64* %8, align 8
  %57 = icmp ule i64 %55, %56
  br i1 %57, label %58, label %61

58:                                               ; preds = %47
  %59 = load i64, i64* %9, align 8
  %60 = sub i64 %59, 1
  store i64 %60, i64* %8, align 8
  br label %61

61:                                               ; preds = %58, %47
  %62 = load i8, i8* %6, align 1
  %63 = load i8*, i8** %7, align 8
  %64 = load i64, i64* %8, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  store i8 %62, i8* %65, align 1
  %66 = load i8*, i8** %7, align 8
  %67 = load i64, i64* %8, align 8
  %68 = add i64 %67, 1
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  store i8 0, i8* %69, align 1
  br label %70

70:                                               ; preds = %61, %43
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #1

declare dso_local i32 @closedir(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #1

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #1

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @backup_file_rename(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = call i8* @backupfile_internal(i8* %5, i32 %6, i1 zeroext true)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @find_backup_file_name(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i8*, i8** %3, align 8
  %7 = load i32, i32* %4, align 4
  %8 = call i8* @backupfile_internal(i8* %6, i32 %7, i1 zeroext false)
  store i8* %8, i8** %5, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @xalloc_die() #17
  unreachable

12:                                               ; preds = %2
  %13 = load i8*, i8** %5, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_version(i8* %0, i8* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %5, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %8, %2
  store i32 2, i32* %3, align 4
  br label %21

14:                                               ; preds = %8
  %15 = load i8*, i8** %4, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = load void ()*, void ()** @argmatch_die, align 8
  %18 = call i64 @__xargmatch_internal(i8* %15, i8* %16, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %17)
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %3, align 4
  br label %21

21:                                               ; preds = %14, %13
  %22 = load i32, i32* %3, align 4
  ret i32 %22
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @xget_version(i8* %0, i8* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = load i8*, i8** %5, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = load i8*, i8** %4, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i32 @get_version(i8* %14, i8* %15)
  store i32 %16, i32* %3, align 4
  br label %20

17:                                               ; preds = %8, %2
  %18 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.268, i64 0, i64 0)) #13
  %19 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.269, i64 0, i64 0), i8* %18)
  store i32 %19, i32* %3, align 4
  br label %20

20:                                               ; preds = %17, %13
  %21 = load i32, i32* %3, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @buffer_lcm(i64 %0, i64 %1, i64 %2) #10 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %14 = load i64, i64* %5, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %3
  %17 = load i64, i64* %6, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = load i64, i64* %6, align 8
  br label %22

21:                                               ; preds = %16
  br label %22

22:                                               ; preds = %21, %19
  %23 = phi i64 [ %20, %19 ], [ 8192, %21 ]
  store i64 %23, i64* %8, align 8
  br label %60

24:                                               ; preds = %3
  %25 = load i64, i64* %6, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %58

27:                                               ; preds = %24
  %28 = load i64, i64* %5, align 8
  store i64 %28, i64* %10, align 8
  %29 = load i64, i64* %6, align 8
  store i64 %29, i64* %11, align 8
  br label %30

30:                                               ; preds = %36, %27
  %31 = load i64, i64* %10, align 8
  %32 = load i64, i64* %11, align 8
  %33 = urem i64 %31, %32
  store i64 %33, i64* %13, align 8
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35
  %37 = load i64, i64* %11, align 8
  store i64 %37, i64* %10, align 8
  %38 = load i64, i64* %13, align 8
  store i64 %38, i64* %11, align 8
  br label %30, !llvm.loop !29

39:                                               ; preds = %30
  %40 = load i64, i64* %5, align 8
  %41 = load i64, i64* %11, align 8
  %42 = udiv i64 %40, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %12, align 8
  %44 = load i64, i64* %6, align 8
  %45 = mul i64 %43, %44
  store i64 %45, i64* %9, align 8
  %46 = load i64, i64* %9, align 8
  %47 = load i64, i64* %7, align 8
  %48 = icmp ule i64 %46, %47
  br i1 %48, label %49, label %57

49:                                               ; preds = %39
  %50 = load i64, i64* %9, align 8
  %51 = load i64, i64* %6, align 8
  %52 = udiv i64 %50, %51
  %53 = load i64, i64* %12, align 8
  %54 = icmp eq i64 %52, %53
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i64, i64* %9, align 8
  store i64 %56, i64* %4, align 8
  br label %70

57:                                               ; preds = %49, %39
  br label %58

58:                                               ; preds = %57, %24
  %59 = load i64, i64* %5, align 8
  store i64 %59, i64* %8, align 8
  br label %60

60:                                               ; preds = %58, %22
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %7, align 8
  %63 = icmp ule i64 %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = load i64, i64* %8, align 8
  br label %68

66:                                               ; preds = %60
  %67 = load i64, i64* %7, align 8
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %67, %66 ]
  store i64 %69, i64* %4, align 8
  br label %70

70:                                               ; preds = %68, %55
  %71 = load i64, i64* %4, align 8
  ret i64 %71
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdin() #3 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  store i8 0, i8* %1, align 1
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %4 = call i64 @freadahead(%struct._IO_FILE* %3) #15
  %5 = icmp ugt i64 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %8 = call i32 @rpl_fseeko(%struct._IO_FILE* %7, i64 0, i32 1)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %12 = call i32 @rpl_fflush(%struct._IO_FILE* %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i8 1, i8* %1, align 1
  br label %15

15:                                               ; preds = %14, %10, %6
  br label %16

16:                                               ; preds = %15, %0
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %18 = call i32 @close_stream(%struct._IO_FILE* %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i8 1, i8* %1, align 1
  br label %21

21:                                               ; preds = %20, %16
  %22 = load i8, i8* %1, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %39

24:                                               ; preds = %21
  %25 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.274, i64 0, i64 0)) #13
  store i8* %25, i8** %2, align 8
  %26 = load i8*, i8** @file_name, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = call i32* @__errno_location() #16
  %30 = load i32, i32* %29, align 4
  %31 = load i8*, i8** @file_name, align 8
  %32 = call i8* @quotearg_colon(i8* %31)
  %33 = load i8*, i8** %2, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.275, i64 0, i64 0), i8* %32, i8* %33)
  br label %38

34:                                               ; preds = %24
  %35 = call i32* @__errno_location() #16
  %36 = load i32, i32* %35, align 4
  %37 = load i8*, i8** %2, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.276, i64 0, i64 0), i8* %37)
  br label %38

38:                                               ; preds = %34, %28
  br label %39

39:                                               ; preds = %38, %21
  call void @close_stdout()
  %40 = load i8, i8* %1, align 1
  %41 = trunc i8 %40 to i1
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @exit_failure, align 4
  call void @_exit(i32 %43) #17
  unreachable

44:                                               ; preds = %39
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone uwtable
define internal void @close_stdout() #3 {
  %1 = alloca i8*, align 8
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %3 = call i32 @close_stream(%struct._IO_FILE* %2)
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %0
  %6 = load i8, i8* @ignore_EPIPE, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = call i32* @__errno_location() #16
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 32
  br i1 %11, label %28, label %12

12:                                               ; preds = %8, %5
  %13 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i64 0, i64 0)) #13
  store i8* %13, i8** %1, align 8
  %14 = load i8*, i8** @file_name.280, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = call i32* @__errno_location() #16
  %18 = load i32, i32* %17, align 4
  %19 = load i8*, i8** @file_name.280, align 8
  %20 = call i8* @quotearg_colon(i8* %19)
  %21 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.281, i64 0, i64 0), i8* %20, i8* %21)
  br label %26

22:                                               ; preds = %12
  %23 = call i32* @__errno_location() #16
  %24 = load i32, i32* %23, align 4
  %25 = load i8*, i8** %1, align 8
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.282, i64 0, i64 0), i8* %25)
  br label %26

26:                                               ; preds = %22, %16
  %27 = load volatile i32, i32* @exit_failure, align 4
  call void @_exit(i32 %27) #17
  unreachable

28:                                               ; preds = %8, %0
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 @close_stream(%struct._IO_FILE* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = load volatile i32, i32* @exit_failure, align 4
  call void @_exit(i32 %33) #17
  unreachable

34:                                               ; preds = %28
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.__dirstream* @opendir_safer(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.__dirstream*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.__dirstream*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = call %struct.__dirstream* @opendir(i8* %8)
  store %struct.__dirstream* %9, %struct.__dirstream** %3, align 8
  %10 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8
  %11 = icmp ne %struct.__dirstream* %10, null
  br i1 %11, label %12, label %46

12:                                               ; preds = %1
  %13 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8
  %14 = call i32 @dirfd(%struct.__dirstream* %13) #13
  store i32 %14, i32* %4, align 4
  %15 = load i32, i32* %4, align 4
  %16 = icmp sle i32 0, %15
  br i1 %16, label %17, label %45

17:                                               ; preds = %12
  %18 = load i32, i32* %4, align 4
  %19 = icmp sle i32 %18, 2
  br i1 %19, label %20, label %45

20:                                               ; preds = %17
  %21 = load i32, i32* %4, align 4
  %22 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %21, i32 1030, i32 3)
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %7, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = call i32* @__errno_location() #16
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %6, align 4
  store %struct.__dirstream* null, %struct.__dirstream** %5, align 8
  br label %39

28:                                               ; preds = %20
  %29 = load i32, i32* %7, align 4
  %30 = call %struct.__dirstream* @fdopendir(i32 %29)
  store %struct.__dirstream* %30, %struct.__dirstream** %5, align 8
  %31 = call i32* @__errno_location() #16
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %6, align 4
  %33 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8
  %34 = icmp ne %struct.__dirstream* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %28
  %36 = load i32, i32* %7, align 4
  %37 = call i32 @close(i32 %36)
  br label %38

38:                                               ; preds = %35, %28
  br label %39

39:                                               ; preds = %38, %25
  %40 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8
  %41 = call i32 @closedir(%struct.__dirstream* %40)
  %42 = load i32, i32* %6, align 4
  %43 = call i32* @__errno_location() #16
  store i32 %42, i32* %43, align 4
  %44 = load %struct.__dirstream*, %struct.__dirstream** %5, align 8
  store %struct.__dirstream* %44, %struct.__dirstream** %3, align 8
  br label %45

45:                                               ; preds = %39, %17, %12
  br label %46

46:                                               ; preds = %45, %1
  %47 = load %struct.__dirstream*, %struct.__dirstream** %3, align 8
  ret %struct.__dirstream* %47
}

declare dso_local %struct.__dirstream* @opendir(i8*) #2

declare dso_local %struct.__dirstream* @fdopendir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @dir_name(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i8* @mdir_name(i8* %4)
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  call void @xalloc_die() #17
  unreachable

9:                                                ; preds = %1
  %10 = load i8*, i8** %3, align 8
  ret i8* %10
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @dir_len(i8* %0) #8 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  store i64 0, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  br label %16

8:                                                ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp eq i32 %12, 47
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i32 1, i32 0
  br label %16

16:                                               ; preds = %8, %7
  %17 = phi i32 [ 0, %7 ], [ %15, %8 ]
  %18 = sext i32 %17 to i64
  %19 = load i64, i64* %3, align 8
  %20 = add i64 %19, %18
  store i64 %20, i64* %3, align 8
  %21 = load i8*, i8** %2, align 8
  %22 = call i8* @last_component(i8* %21) #15
  %23 = load i8*, i8** %2, align 8
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  store i64 %26, i64* %4, align 8
  br label %27

27:                                               ; preds = %41, %16
  %28 = load i64, i64* %3, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %31, label %44

31:                                               ; preds = %27
  %32 = load i8*, i8** %2, align 8
  %33 = load i64, i64* %4, align 8
  %34 = sub i64 %33, 1
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp eq i32 %37, 47
  br i1 %38, label %40, label %39

39:                                               ; preds = %31
  br label %44

40:                                               ; preds = %31
  br label %41

41:                                               ; preds = %40
  %42 = load i64, i64* %4, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %4, align 8
  br label %27, !llvm.loop !30

44:                                               ; preds = %39, %27
  %45 = load i64, i64* %4, align 8
  ret i64 %45
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mdir_name(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = call i64 @dir_len(i8* %7) #15
  store i64 %8, i64* %4, align 8
  %9 = load i64, i64* %4, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %11, %1
  %13 = phi i1 [ true, %1 ], [ false, %11 ]
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 1
  %15 = load i64, i64* %4, align 8
  %16 = load i8, i8* %5, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i64
  %19 = add i64 %15, %18
  %20 = add i64 %19, 1
  %21 = call noalias i8* @malloc(i64 %20) #13
  store i8* %21, i8** %6, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %12
  store i8* null, i8** %2, align 8
  br label %41

25:                                               ; preds = %12
  %26 = load i8*, i8** %6, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = load i64, i64* %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %27, i64 %28, i1 false)
  %29 = load i8, i8* %5, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = load i8*, i8** %6, align 8
  %33 = load i64, i64* %4, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %4, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8 46, i8* %35, align 1
  br label %36

36:                                               ; preds = %31, %25
  %37 = load i8*, i8** %6, align 8
  %38 = load i64, i64* %4, align 8
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load i8*, i8** %6, align 8
  store i8* %40, i8** %2, align 8
  br label %41

41:                                               ; preds = %36, %24
  %42 = load i8*, i8** %2, align 8
  ret i8* %42
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i8* @last_component(i8* %0) #8 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 0
  store i8* %7, i8** %3, align 8
  store i8 0, i8* %5, align 1
  br label %8

8:                                                ; preds = %13, %1
  %9 = load i8*, i8** %3, align 8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp eq i32 %11, 47
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = load i8*, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %15, i8** %3, align 8
  br label %8, !llvm.loop !31

16:                                               ; preds = %8
  %17 = load i8*, i8** %3, align 8
  store i8* %17, i8** %4, align 8
  br label %18

18:                                               ; preds = %35, %16
  %19 = load i8*, i8** %4, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %18
  %23 = load i8*, i8** %4, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 47
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  store i8 1, i8* %5, align 1
  br label %34

28:                                               ; preds = %22
  %29 = load i8, i8* %5, align 1
  %30 = trunc i8 %29 to i1
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load i8*, i8** %4, align 8
  store i8* %32, i8** %3, align 8
  store i8 0, i8* %5, align 1
  br label %33

33:                                               ; preds = %31, %28
  br label %34

34:                                               ; preds = %33, %27
  br label %35

35:                                               ; preds = %34
  %36 = load i8*, i8** %4, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %4, align 8
  br label %18, !llvm.loop !32

38:                                               ; preds = %18
  %39 = load i8*, i8** %3, align 8
  ret i8* %39
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @base_len(i8* %0) #8 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  store i64 0, i64* %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i64 @strlen(i8* %5) #15
  store i64 %6, i64* %3, align 8
  br label %7

7:                                                ; preds = %21, %1
  %8 = load i64, i64* %3, align 8
  %9 = icmp ult i64 1, %8
  br i1 %9, label %10, label %18

10:                                               ; preds = %7
  %11 = load i8*, i8** %2, align 8
  %12 = load i64, i64* %3, align 8
  %13 = sub i64 %12, 1
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 47
  br label %18

18:                                               ; preds = %10, %7
  %19 = phi i1 [ false, %7 ], [ %17, %10 ]
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  br label %21

21:                                               ; preds = %20
  %22 = load i64, i64* %3, align 8
  %23 = add i64 %22, -1
  store i64 %23, i64* %3, align 8
  br label %7, !llvm.loop !33

24:                                               ; preds = %18
  %25 = load i64, i64* %3, align 8
  ret i64 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip_trailing_slashes(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = call i8* @last_component(i8* %6) #15
  store i8* %7, i8** %3, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = load i8, i8* %8, align 1
  %10 = icmp ne i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = load i8*, i8** %2, align 8
  store i8* %12, i8** %3, align 8
  br label %13

13:                                               ; preds = %11, %1
  %14 = load i8*, i8** %3, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = call i64 @base_len(i8* %15) #15
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  store i8* %17, i8** %4, align 8
  %18 = load i8*, i8** %4, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %5, align 1
  %23 = load i8*, i8** %4, align 8
  store i8 0, i8* %23, align 1
  %24 = load i8, i8* %5, align 1
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fdadvise(i32 %0, i64 %1, i64 %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %5, align 4
  %11 = load i64, i64* %6, align 8
  %12 = load i64, i64* %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = call i32 @posix_fadvise(i32 %10, i64 %11, i64 %12, i32 %13) #13
  store i32 %14, i32* %9, align 4
  %15 = load i32, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @open_safer(i8* %0, i32 %1, ...) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %7 = load i32, i32* %4, align 4
  %8 = and i32 %7, 64
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %12 = bitcast %struct.__va_list_tag* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 16
  %16 = icmp ule i32 %15, 40
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 3
  %19 = load i8*, i8** %18, align 16
  %20 = getelementptr i8, i8* %19, i32 %15
  %21 = bitcast i8* %20 to i32*
  %22 = add i32 %15, 8
  store i32 %22, i32* %14, align 16
  br label %28

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %13, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr i8, i8* %25, i32 8
  store i8* %27, i8** %24, align 8
  br label %28

28:                                               ; preds = %23, %17
  %29 = phi i32* [ %21, %17 ], [ %26, %23 ]
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %5, align 4
  %31 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %32 = bitcast %struct.__va_list_tag* %31 to i8*
  call void @llvm.va_end(i8* %32)
  br label %33

33:                                               ; preds = %28, %2
  %34 = load i8*, i8** %3, align 8
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %5, align 4
  %37 = call i32 (i8*, i32, ...) @open(i8* %34, i32 %35, i32 %36)
  %38 = call i32 @fd_safer(i32 %37)
  ret i32 %38
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

declare dso_local i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @record_file(%struct.hash_table* %0, i8* nonnull %1, %struct.stat* nonnull %2) #3 {
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca %struct.F_triple*, align 8
  %8 = alloca %struct.F_triple*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.stat* %2, %struct.stat** %6, align 8
  %9 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %10 = icmp eq %struct.hash_table* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  br label %44

12:                                               ; preds = %3
  %13 = call noalias i8* @xmalloc(i64 24)
  %14 = bitcast i8* %13 to %struct.F_triple*
  store %struct.F_triple* %14, %struct.F_triple** %7, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call noalias i8* @xstrdup(i8* %15)
  %17 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %18 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %17, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = load %struct.stat*, %struct.stat** %6, align 8
  %20 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %23 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %22, i32 0, i32 1
  store i64 %21, i64* %23, align 8
  %24 = load %struct.stat*, %struct.stat** %6, align 8
  %25 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %28 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %27, i32 0, i32 2
  store i64 %26, i64* %28, align 8
  %29 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %30 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %31 = bitcast %struct.F_triple* %30 to i8*
  %32 = call i8* @hash_insert(%struct.hash_table* %29, i8* %31)
  %33 = bitcast i8* %32 to %struct.F_triple*
  store %struct.F_triple* %33, %struct.F_triple** %8, align 8
  %34 = load %struct.F_triple*, %struct.F_triple** %8, align 8
  %35 = icmp eq %struct.F_triple* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %12
  call void @xalloc_die() #17
  unreachable

37:                                               ; preds = %12
  %38 = load %struct.F_triple*, %struct.F_triple** %8, align 8
  %39 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %40 = icmp ne %struct.F_triple* %38, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %37
  %42 = load %struct.F_triple*, %struct.F_triple** %7, align 8
  %43 = bitcast %struct.F_triple* %42 to i8*
  call void @triple_free(i8* %43)
  br label %44

44:                                               ; preds = %41, %37, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @seen_file(%struct.hash_table* %0, i8* %1, %struct.stat* %2) #3 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.stat*, align 8
  %8 = alloca %struct.F_triple, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  store i8* %1, i8** %6, align 8
  store %struct.stat* %2, %struct.stat** %7, align 8
  %9 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %10 = icmp eq %struct.hash_table* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  store i1 false, i1* %4, align 1
  br label %29

12:                                               ; preds = %3
  %13 = load i8*, i8** %6, align 8
  %14 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = load %struct.stat*, %struct.stat** %7, align 8
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 1
  store i64 %17, i64* %18, align 8
  %19 = load %struct.stat*, %struct.stat** %7, align 8
  %20 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %24 = bitcast %struct.F_triple* %8 to i8*
  %25 = call i8* @hash_lookup(%struct.hash_table* %23, i8* %24)
  %26 = icmp ne i8* %25, null
  %27 = xor i1 %26, true
  %28 = xor i1 %27, true
  store i1 %28, i1* %4, align 1
  br label %29

29:                                               ; preds = %12, %11
  %30 = load i1, i1* %4, align 1
  ret i1 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @strmode(i32 %0, i8* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = call signext i8 @ftypelet(i32 %5)
  %7 = load i8*, i8** %4, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  store i8 %6, i8* %8, align 1
  %9 = load i32, i32* %3, align 4
  %10 = and i32 %9, 256
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i64
  %13 = select i1 %11, i32 114, i32 45
  %14 = trunc i32 %13 to i8
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 %14, i8* %16, align 1
  %17 = load i32, i32* %3, align 4
  %18 = and i32 %17, 128
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i64
  %21 = select i1 %19, i32 119, i32 45
  %22 = trunc i32 %21 to i8
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 2
  store i8 %22, i8* %24, align 1
  %25 = load i32, i32* %3, align 4
  %26 = and i32 %25, 2048
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %2
  %29 = load i32, i32* %3, align 4
  %30 = and i32 %29, 64
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 115, i32 83
  br label %40

34:                                               ; preds = %2
  %35 = load i32, i32* %3, align 4
  %36 = and i32 %35, 64
  %37 = icmp ne i32 %36, 0
  %38 = zext i1 %37 to i64
  %39 = select i1 %37, i32 120, i32 45
  br label %40

40:                                               ; preds = %34, %28
  %41 = phi i32 [ %33, %28 ], [ %39, %34 ]
  %42 = trunc i32 %41 to i8
  %43 = load i8*, i8** %4, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  store i8 %42, i8* %44, align 1
  %45 = load i32, i32* %3, align 4
  %46 = and i32 %45, 32
  %47 = icmp ne i32 %46, 0
  %48 = zext i1 %47 to i64
  %49 = select i1 %47, i32 114, i32 45
  %50 = trunc i32 %49 to i8
  %51 = load i8*, i8** %4, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8 %50, i8* %52, align 1
  %53 = load i32, i32* %3, align 4
  %54 = and i32 %53, 16
  %55 = icmp ne i32 %54, 0
  %56 = zext i1 %55 to i64
  %57 = select i1 %55, i32 119, i32 45
  %58 = trunc i32 %57 to i8
  %59 = load i8*, i8** %4, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 5
  store i8 %58, i8* %60, align 1
  %61 = load i32, i32* %3, align 4
  %62 = and i32 %61, 1024
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %40
  %65 = load i32, i32* %3, align 4
  %66 = and i32 %65, 8
  %67 = icmp ne i32 %66, 0
  %68 = zext i1 %67 to i64
  %69 = select i1 %67, i32 115, i32 83
  br label %76

70:                                               ; preds = %40
  %71 = load i32, i32* %3, align 4
  %72 = and i32 %71, 8
  %73 = icmp ne i32 %72, 0
  %74 = zext i1 %73 to i64
  %75 = select i1 %73, i32 120, i32 45
  br label %76

76:                                               ; preds = %70, %64
  %77 = phi i32 [ %69, %64 ], [ %75, %70 ]
  %78 = trunc i32 %77 to i8
  %79 = load i8*, i8** %4, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 6
  store i8 %78, i8* %80, align 1
  %81 = load i32, i32* %3, align 4
  %82 = and i32 %81, 4
  %83 = icmp ne i32 %82, 0
  %84 = zext i1 %83 to i64
  %85 = select i1 %83, i32 114, i32 45
  %86 = trunc i32 %85 to i8
  %87 = load i8*, i8** %4, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 7
  store i8 %86, i8* %88, align 1
  %89 = load i32, i32* %3, align 4
  %90 = and i32 %89, 2
  %91 = icmp ne i32 %90, 0
  %92 = zext i1 %91 to i64
  %93 = select i1 %91, i32 119, i32 45
  %94 = trunc i32 %93 to i8
  %95 = load i8*, i8** %4, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  store i8 %94, i8* %96, align 1
  %97 = load i32, i32* %3, align 4
  %98 = and i32 %97, 512
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %76
  %101 = load i32, i32* %3, align 4
  %102 = and i32 %101, 1
  %103 = icmp ne i32 %102, 0
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i32 116, i32 84
  br label %112

106:                                              ; preds = %76
  %107 = load i32, i32* %3, align 4
  %108 = and i32 %107, 1
  %109 = icmp ne i32 %108, 0
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i32 120, i32 45
  br label %112

112:                                              ; preds = %106, %100
  %113 = phi i32 [ %105, %100 ], [ %111, %106 ]
  %114 = trunc i32 %113 to i8
  %115 = load i8*, i8** %4, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 9
  store i8 %114, i8* %116, align 1
  %117 = load i8*, i8** %4, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 10
  store i8 32, i8* %118, align 1
  %119 = load i8*, i8** %4, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 11
  store i8 0, i8* %120, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %0) #3 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 61440
  %6 = icmp eq i32 %5, 32768
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i8 45, i8* %2, align 1
  br label %39

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4
  %10 = and i32 %9, 61440
  %11 = icmp eq i32 %10, 16384
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i8 100, i8* %2, align 1
  br label %39

13:                                               ; preds = %8
  %14 = load i32, i32* %3, align 4
  %15 = and i32 %14, 61440
  %16 = icmp eq i32 %15, 24576
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i8 98, i8* %2, align 1
  br label %39

18:                                               ; preds = %13
  %19 = load i32, i32* %3, align 4
  %20 = and i32 %19, 61440
  %21 = icmp eq i32 %20, 8192
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i8 99, i8* %2, align 1
  br label %39

23:                                               ; preds = %18
  %24 = load i32, i32* %3, align 4
  %25 = and i32 %24, 61440
  %26 = icmp eq i32 %25, 40960
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  store i8 108, i8* %2, align 1
  br label %39

28:                                               ; preds = %23
  %29 = load i32, i32* %3, align 4
  %30 = and i32 %29, 61440
  %31 = icmp eq i32 %30, 4096
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 112, i8* %2, align 1
  br label %39

33:                                               ; preds = %28
  %34 = load i32, i32* %3, align 4
  %35 = and i32 %34, 61440
  %36 = icmp eq i32 %35, 49152
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store i8 115, i8* %2, align 1
  br label %39

38:                                               ; preds = %33
  store i8 63, i8* %2, align 1
  br label %39

39:                                               ; preds = %38, %37, %32, %27, %22, %17, %12, %7
  %40 = load i8, i8* %2, align 1
  ret i8 %40
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @file_name_concat(i8* %0, i8* %1, i8** %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8** %2, i8*** %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8**, i8*** %6, align 8
  %11 = call i8* @mfile_name_concat(i8* %8, i8* %9, i8** %10)
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  call void @xalloc_die() #17
  unreachable

15:                                               ; preds = %3
  %16 = load i8*, i8** %7, align 8
  ret i8* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8** %2, i8*** %7, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i8* @last_component(i8* %15) #15
  store i8* %16, i8** %8, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = call i64 @base_len(i8* %17) #15
  store i64 %18, i64* %9, align 8
  %19 = load i8*, i8** %8, align 8
  %20 = load i8*, i8** %5, align 8
  %21 = ptrtoint i8* %19 to i64
  %22 = ptrtoint i8* %20 to i64
  %23 = sub i64 %21, %22
  %24 = load i64, i64* %9, align 8
  %25 = add i64 %23, %24
  store i64 %25, i64* %10, align 8
  %26 = load i8*, i8** %6, align 8
  %27 = call i64 @strlen(i8* %26) #15
  store i64 %27, i64* %11, align 8
  store i8 0, i8* %12, align 1
  %28 = load i64, i64* %9, align 8
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %3
  %31 = load i8*, i8** %5, align 8
  %32 = load i64, i64* %10, align 8
  %33 = sub i64 %32, 1
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 47
  br i1 %37, label %44, label %38

38:                                               ; preds = %30
  %39 = load i8*, i8** %6, align 8
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = icmp eq i32 %41, 47
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  store i8 47, i8* %12, align 1
  br label %44

44:                                               ; preds = %43, %38, %30
  br label %52

45:                                               ; preds = %3
  %46 = load i8*, i8** %6, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %48, 47
  br i1 %49, label %50, label %51

50:                                               ; preds = %45
  store i8 46, i8* %12, align 1
  br label %51

51:                                               ; preds = %50, %45
  br label %52

52:                                               ; preds = %51, %44
  %53 = load i64, i64* %10, align 8
  %54 = load i8, i8* %12, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = add i64 %53, %58
  %60 = load i64, i64* %11, align 8
  %61 = add i64 %59, %60
  %62 = add i64 %61, 1
  %63 = call noalias i8* @malloc(i64 %62) #13
  store i8* %63, i8** %13, align 8
  %64 = load i8*, i8** %13, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %52
  store i8* null, i8** %4, align 8
  br label %93

67:                                               ; preds = %52
  %68 = load i8*, i8** %13, align 8
  %69 = load i8*, i8** %5, align 8
  %70 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %69, i64 %70, i1 false)
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8* %71, i8** %14, align 8
  %72 = load i8, i8* %12, align 1
  %73 = load i8*, i8** %14, align 8
  store i8 %72, i8* %73, align 1
  %74 = load i8, i8* %12, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp ne i32 %75, 0
  %77 = zext i1 %76 to i32
  %78 = load i8*, i8** %14, align 8
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  store i8* %80, i8** %14, align 8
  %81 = load i8**, i8*** %7, align 8
  %82 = icmp ne i8** %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %67
  %84 = load i8*, i8** %14, align 8
  %85 = load i8**, i8*** %7, align 8
  store i8* %84, i8** %85, align 8
  br label %86

86:                                               ; preds = %83, %67
  %87 = load i8*, i8** %14, align 8
  %88 = load i8*, i8** %6, align 8
  %89 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 %89, i1 false)
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  store i8* %90, i8** %14, align 8
  %91 = load i8*, i8** %14, align 8
  store i8 0, i8* %91, align 1
  %92 = load i8*, i8** %13, align 8
  store i8* %92, i8** %4, align 8
  br label %93

93:                                               ; preds = %86, %66
  %94 = load i8*, i8** %4, align 8
  ret i8* %94
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @full_write(i32 %0, i8* %1, i64 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  store i64 0, i64* %7, align 8
  %10 = load i8*, i8** %5, align 8
  store i8* %10, i8** %8, align 8
  br label %11

11:                                               ; preds = %27, %3
  %12 = load i64, i64* %6, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %11
  %15 = load i32, i32* %4, align 4
  %16 = load i8*, i8** %8, align 8
  %17 = load i64, i64* %6, align 8
  %18 = call i64 @safe_write(i32 %15, i8* %16, i64 %17)
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  br label %37

22:                                               ; preds = %14
  %23 = load i64, i64* %9, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = call i32* @__errno_location() #16
  store i32 28, i32* %26, align 4
  br label %37

27:                                               ; preds = %22
  %28 = load i64, i64* %9, align 8
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, %28
  store i64 %30, i64* %7, align 8
  %31 = load i64, i64* %9, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  store i8* %33, i8** %8, align 8
  %34 = load i64, i64* %9, align 8
  %35 = load i64, i64* %6, align 8
  %36 = sub i64 %35, %34
  store i64 %36, i64* %6, align 8
  br label %11, !llvm.loop !34

37:                                               ; preds = %25, %21, %11
  %38 = load i64, i64* %7, align 8
  ret i64 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_lookup(%struct.hash_table* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_entry*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %8, i8* %9)
  store %struct.hash_entry* %10, %struct.hash_entry** %6, align 8
  %11 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8
  %12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %46

16:                                               ; preds = %2
  %17 = load %struct.hash_entry*, %struct.hash_entry** %6, align 8
  store %struct.hash_entry* %17, %struct.hash_entry** %7, align 8
  br label %18

18:                                               ; preds = %41, %16
  %19 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %20 = icmp ne %struct.hash_entry* %19, null
  br i1 %20, label %21, label %45

21:                                               ; preds = %18
  %22 = load i8*, i8** %5, align 8
  %23 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %24 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %22, %25
  br i1 %26, label %36, label %27

27:                                               ; preds = %21
  %28 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7
  %30 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %29, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %33 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call zeroext i1 %30(i8* %31, i8* %34)
  br i1 %35, label %36, label %40

36:                                               ; preds = %27, %21
  %37 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %3, align 8
  br label %46

40:                                               ; preds = %27
  br label %41

41:                                               ; preds = %40
  %42 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1
  %44 = load %struct.hash_entry*, %struct.hash_entry** %43, align 8
  store %struct.hash_entry* %44, %struct.hash_entry** %7, align 8
  br label %18, !llvm.loop !35

45:                                               ; preds = %18
  store i8* null, i8** %3, align 8
  br label %46

46:                                               ; preds = %45, %36, %15
  %47 = load i8*, i8** %3, align 8
  ret i8* %47
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1) #3 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 6
  %8 = load i64 (i8*, i64)*, i64 (i8*, i64)** %7, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = call i64 %8(i8* %9, i64 %12)
  store i64 %13, i64* %5, align 8
  %14 = load i64, i64* %5, align 8
  %15 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %14, %17
  br i1 %18, label %20, label %19

19:                                               ; preds = %2
  call void @abort() #14
  unreachable

20:                                               ; preds = %2
  %21 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 0
  %23 = load %struct.hash_entry*, %struct.hash_entry** %22, align 8
  %24 = load i64, i64* %5, align 8
  %25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i64 %24
  ret %struct.hash_entry* %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_table* @hash_initialize(i64 %0, %struct.hash_tuning* %1, i64 (i8*, i64)* %2, i1 (i8*, i8*)* %3, void (i8*)* %4) #3 {
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64 (i8*, i64)*, align 8
  %10 = alloca i1 (i8*, i8*)*, align 8
  %11 = alloca void (i8*)*, align 8
  %12 = alloca %struct.hash_table*, align 8
  store i64 %0, i64* %7, align 8
  store %struct.hash_tuning* %1, %struct.hash_tuning** %8, align 8
  store i64 (i8*, i64)* %2, i64 (i8*, i64)** %9, align 8
  store i1 (i8*, i8*)* %3, i1 (i8*, i8*)** %10, align 8
  store void (i8*)* %4, void (i8*)** %11, align 8
  %13 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8
  %14 = icmp eq i64 (i8*, i64)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %5
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %9, align 8
  br label %16

16:                                               ; preds = %15, %5
  %17 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8
  %18 = icmp eq i1 (i8*, i8*)* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %10, align 8
  br label %20

20:                                               ; preds = %19, %16
  %21 = call noalias i8* @malloc(i64 80) #13
  %22 = bitcast i8* %21 to %struct.hash_table*
  store %struct.hash_table* %22, %struct.hash_table** %12, align 8
  %23 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %24 = icmp eq %struct.hash_table* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  store %struct.hash_table* null, %struct.hash_table** %6, align 8
  br label %90

26:                                               ; preds = %20
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %28 = icmp ne %struct.hash_tuning* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %8, align 8
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %32 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 5
  store %struct.hash_tuning* %31, %struct.hash_tuning** %33, align 8
  %34 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %35 = call zeroext i1 @check_tuning(%struct.hash_table* %34)
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  br label %87

37:                                               ; preds = %30
  %38 = load i64, i64* %7, align 8
  %39 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %40 = call i64 @compute_bucket_size(i64 %38, %struct.hash_tuning* %39) #15
  %41 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2
  store i64 %40, i64* %42, align 8
  %43 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %44 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %37
  br label %87

48:                                               ; preds = %37
  %49 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %50 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = call noalias i8* @calloc(i64 %51, i64 16) #13
  %53 = bitcast i8* %52 to %struct.hash_entry*
  %54 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 0
  store %struct.hash_entry* %53, %struct.hash_entry** %55, align 8
  %56 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 0
  %58 = load %struct.hash_entry*, %struct.hash_entry** %57, align 8
  %59 = icmp eq %struct.hash_entry* %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %48
  br label %87

61:                                               ; preds = %48
  %62 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0
  %64 = load %struct.hash_entry*, %struct.hash_entry** %63, align 8
  %65 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i64 %67
  %69 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %70 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %69, i32 0, i32 1
  store %struct.hash_entry* %68, %struct.hash_entry** %70, align 8
  %71 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %72 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %71, i32 0, i32 3
  store i64 0, i64* %72, align 8
  %73 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 4
  store i64 0, i64* %74, align 8
  %75 = load i64 (i8*, i64)*, i64 (i8*, i64)** %9, align 8
  %76 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %77 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %76, i32 0, i32 6
  store i64 (i8*, i64)* %75, i64 (i8*, i64)** %77, align 8
  %78 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %10, align 8
  %79 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 7
  store i1 (i8*, i8*)* %78, i1 (i8*, i8*)** %80, align 8
  %81 = load void (i8*)*, void (i8*)** %11, align 8
  %82 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %83 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %82, i32 0, i32 8
  store void (i8*)* %81, void (i8*)** %83, align 8
  %84 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %85 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %84, i32 0, i32 9
  store %struct.hash_entry* null, %struct.hash_entry** %85, align 8
  %86 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  store %struct.hash_table* %86, %struct.hash_table** %6, align 8
  br label %90

87:                                               ; preds = %60, %47, %36
  %88 = load %struct.hash_table*, %struct.hash_table** %12, align 8
  %89 = bitcast %struct.hash_table* %88 to i8*
  call void @free(i8* %89) #13
  store %struct.hash_table* null, %struct.hash_table** %6, align 8
  br label %90

90:                                               ; preds = %87, %61, %25
  %91 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  ret %struct.hash_table* %91
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = call i64 @rotr_sz(i64 %7, i32 3)
  store i64 %8, i64* %5, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64, i64* %4, align 8
  %11 = urem i64 %9, %10
  ret i64 %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp eq i8* %5, %6
  ret i1 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %0) #3 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_tuning*, align 8
  %5 = alloca float, align 4
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  %6 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5
  %8 = load %struct.hash_tuning*, %struct.hash_tuning** %7, align 8
  store %struct.hash_tuning* %8, %struct.hash_tuning** %4, align 8
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %10 = icmp eq %struct.hash_tuning* %9, @default_tuning
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  store i1 true, i1* %2, align 1
  br label %66

12:                                               ; preds = %1
  store float 0x3FB99999A0000000, float* %5, align 4
  %13 = load float, float* %5, align 4
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp olt float %13, %16
  br i1 %17, label %18, label %63

18:                                               ; preds = %12
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %20 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = load float, float* %5, align 4
  %23 = fsub float 1.000000e+00, %22
  %24 = fcmp olt float %21, %23
  br i1 %24, label %25, label %63

25:                                               ; preds = %18
  %26 = load float, float* %5, align 4
  %27 = fadd float 1.000000e+00, %26
  %28 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %29 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %28, i32 0, i32 3
  %30 = load float, float* %29, align 4
  %31 = fcmp olt float %27, %30
  br i1 %31, label %32, label %63

32:                                               ; preds = %25
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %34 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 0
  %35 = load float, float* %34, align 4
  %36 = fcmp ole float 0.000000e+00, %35
  br i1 %36, label %37, label %63

37:                                               ; preds = %32
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = load float, float* %5, align 4
  %42 = fadd float %40, %41
  %43 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %44 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %43, i32 0, i32 1
  %45 = load float, float* %44, align 4
  %46 = fcmp olt float %42, %45
  br i1 %46, label %47, label %63

47:                                               ; preds = %37
  %48 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %49 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %48, i32 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp ole float %50, 1.000000e+00
  br i1 %51, label %52, label %63

52:                                               ; preds = %47
  %53 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %54 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %53, i32 0, i32 0
  %55 = load float, float* %54, align 4
  %56 = load float, float* %5, align 4
  %57 = fadd float %55, %56
  %58 = load %struct.hash_tuning*, %struct.hash_tuning** %4, align 8
  %59 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %58, i32 0, i32 2
  %60 = load float, float* %59, align 4
  %61 = fcmp olt float %57, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %52
  store i1 true, i1* %2, align 1
  br label %66

63:                                               ; preds = %52, %47, %37, %32, %25, %18, %12
  %64 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %64, i32 0, i32 5
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %65, align 8
  store i1 false, i1* %2, align 1
  br label %66

66:                                               ; preds = %63, %62, %11
  %67 = load i1, i1* %2, align 1
  ret i1 %67
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %1) #8 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.hash_tuning*, align 8
  %6 = alloca float, align 4
  store i64 %0, i64* %4, align 8
  store %struct.hash_tuning* %1, %struct.hash_tuning** %5, align 8
  %7 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8
  %8 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %7, i32 0, i32 4
  %9 = load i8, i8* %8, align 4
  %10 = trunc i8 %9 to i1
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = load i64, i64* %4, align 8
  %13 = uitofp i64 %12 to float
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %5, align 8
  %15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fdiv float %13, %16
  store float %17, float* %6, align 4
  %18 = load float, float* %6, align 4
  %19 = fcmp ole float 0x43F0000000000000, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  store i64 0, i64* %3, align 8
  br label %32

21:                                               ; preds = %11
  %22 = load float, float* %6, align 4
  %23 = fptoui float %22 to i64
  store i64 %23, i64* %4, align 8
  br label %24

24:                                               ; preds = %21, %2
  %25 = load i64, i64* %4, align 8
  %26 = call i64 @next_prime(i64 %25) #16
  store i64 %26, i64* %4, align 8
  %27 = load i64, i64* %4, align 8
  %28 = icmp ult i64 1152921504606846975, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  store i64 0, i64* %3, align 8
  br label %32

30:                                               ; preds = %24
  %31 = load i64, i64* %4, align 8
  store i64 %31, i64* %3, align 8
  br label %32

32:                                               ; preds = %30, %29, %20
  %33 = load i64, i64* %3, align 8
  ret i64 %33
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %0) #10 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 10
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store i64 10, i64* %2, align 8
  br label %6

6:                                                ; preds = %5, %1
  %7 = load i64, i64* %2, align 8
  %8 = or i64 %7, 1
  store i64 %8, i64* %2, align 8
  br label %9

9:                                                ; preds = %18, %6
  %10 = load i64, i64* %2, align 8
  %11 = icmp ne i64 -1, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = load i64, i64* %2, align 8
  %14 = call zeroext i1 @is_prime(i64 %13) #16
  %15 = xor i1 %14, true
  br label %16

16:                                               ; preds = %12, %9
  %17 = phi i1 [ false, %9 ], [ %15, %12 ]
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = load i64, i64* %2, align 8
  %20 = add i64 %19, 2
  store i64 %20, i64* %2, align 8
  br label %9, !llvm.loop !36

21:                                               ; preds = %16
  %22 = load i64, i64* %2, align 8
  ret i64 %22
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %0) #10 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  store i64 3, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %3, align 8
  %7 = mul i64 %5, %6
  store i64 %7, i64* %4, align 8
  br label %8

8:                                                ; preds = %19, %1
  %9 = load i64, i64* %4, align 8
  %10 = load i64, i64* %2, align 8
  %11 = icmp ult i64 %9, %10
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = load i64, i64* %2, align 8
  %14 = load i64, i64* %3, align 8
  %15 = urem i64 %13, %14
  %16 = icmp ne i64 %15, 0
  br label %17

17:                                               ; preds = %12, %8
  %18 = phi i1 [ false, %8 ], [ %16, %12 ]
  br i1 %18, label %19, label %28

19:                                               ; preds = %17
  %20 = load i64, i64* %3, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %3, align 8
  %22 = load i64, i64* %3, align 8
  %23 = mul i64 4, %22
  %24 = load i64, i64* %4, align 8
  %25 = add i64 %24, %23
  store i64 %25, i64* %4, align 8
  %26 = load i64, i64* %3, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %3, align 8
  br label %8, !llvm.loop !37

28:                                               ; preds = %17
  %29 = load i64, i64* %2, align 8
  %30 = load i64, i64* %3, align 8
  %31 = urem i64 %29, %30
  %32 = icmp ne i64 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = icmp ne i32 %34, 0
  ret i1 %35
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hash_rehash(%struct.hash_table* %0, i64 %1) #3 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.hash_table, align 8
  %7 = alloca %struct.hash_table*, align 8
  %8 = alloca i64, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  store i64 %1, i64* %5, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %11, align 8
  %13 = call i64 @compute_bucket_size(i64 %9, %struct.hash_tuning* %12) #15
  store i64 %13, i64* %8, align 8
  %14 = load i64, i64* %8, align 8
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i1 false, i1* %3, align 1
  br label %127

17:                                               ; preds = %2
  %18 = load i64, i64* %8, align 8
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %18, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i1 true, i1* %3, align 1
  br label %127

24:                                               ; preds = %17
  store %struct.hash_table* %6, %struct.hash_table** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = call noalias i8* @calloc(i64 %25, i64 16) #13
  %27 = bitcast i8* %26 to %struct.hash_entry*
  %28 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 0
  store %struct.hash_entry* %27, %struct.hash_entry** %29, align 8
  %30 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %30, i32 0, i32 0
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8
  %33 = icmp eq %struct.hash_entry* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %24
  store i1 false, i1* %3, align 1
  br label %127

35:                                               ; preds = %24
  %36 = load i64, i64* %8, align 8
  %37 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 2
  store i64 %36, i64* %38, align 8
  %39 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %40 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %39, i32 0, i32 0
  %41 = load %struct.hash_entry*, %struct.hash_entry** %40, align 8
  %42 = load i64, i64* %8, align 8
  %43 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i64 %42
  %44 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %45 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %44, i32 0, i32 1
  store %struct.hash_entry* %43, %struct.hash_entry** %45, align 8
  %46 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %47 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 3
  store i64 0, i64* %47, align 8
  %48 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %49 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 4
  store i64 0, i64* %49, align 8
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 5
  %52 = load %struct.hash_tuning*, %struct.hash_tuning** %51, align 8
  %53 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %54 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %53, i32 0, i32 5
  store %struct.hash_tuning* %52, %struct.hash_tuning** %54, align 8
  %55 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %56 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 6
  %57 = load i64 (i8*, i64)*, i64 (i8*, i64)** %56, align 8
  %58 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %59 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %58, i32 0, i32 6
  store i64 (i8*, i64)* %57, i64 (i8*, i64)** %59, align 8
  %60 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %61 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %60, i32 0, i32 7
  %62 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %61, align 8
  %63 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 7
  store i1 (i8*, i8*)* %62, i1 (i8*, i8*)** %64, align 8
  %65 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %66 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %65, i32 0, i32 8
  %67 = load void (i8*)*, void (i8*)** %66, align 8
  %68 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %69 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %68, i32 0, i32 8
  store void (i8*)* %67, void (i8*)** %69, align 8
  %70 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %71 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %70, i32 0, i32 9
  %72 = load %struct.hash_entry*, %struct.hash_entry** %71, align 8
  %73 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %74 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %73, i32 0, i32 9
  store %struct.hash_entry* %72, %struct.hash_entry** %74, align 8
  %75 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %76 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %77 = call zeroext i1 @transfer_entries(%struct.hash_table* %75, %struct.hash_table* %76, i1 zeroext false)
  br i1 %77, label %78, label %108

78:                                               ; preds = %35
  %79 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %80 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %79, i32 0, i32 0
  %81 = load %struct.hash_entry*, %struct.hash_entry** %80, align 8
  %82 = bitcast %struct.hash_entry* %81 to i8*
  call void @free(i8* %82) #13
  %83 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 0
  %85 = load %struct.hash_entry*, %struct.hash_entry** %84, align 8
  %86 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %87 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %86, i32 0, i32 0
  store %struct.hash_entry* %85, %struct.hash_entry** %87, align 8
  %88 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %89 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %88, i32 0, i32 1
  %90 = load %struct.hash_entry*, %struct.hash_entry** %89, align 8
  %91 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %92 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %91, i32 0, i32 1
  store %struct.hash_entry* %90, %struct.hash_entry** %92, align 8
  %93 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %94 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %93, i32 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %97 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %96, i32 0, i32 2
  store i64 %95, i64* %97, align 8
  %98 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %99 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %98, i32 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %102 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %101, i32 0, i32 3
  store i64 %100, i64* %102, align 8
  %103 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %104 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %103, i32 0, i32 9
  %105 = load %struct.hash_entry*, %struct.hash_entry** %104, align 8
  %106 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %107 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %106, i32 0, i32 9
  store %struct.hash_entry* %105, %struct.hash_entry** %107, align 8
  store i1 true, i1* %3, align 1
  br label %127

108:                                              ; preds = %35
  %109 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %110 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %109, i32 0, i32 9
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8
  %112 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %113 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %112, i32 0, i32 9
  store %struct.hash_entry* %111, %struct.hash_entry** %113, align 8
  %114 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %115 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %116 = call zeroext i1 @transfer_entries(%struct.hash_table* %114, %struct.hash_table* %115, i1 zeroext true)
  br i1 %116, label %117, label %121

117:                                              ; preds = %108
  %118 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %119 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %120 = call zeroext i1 @transfer_entries(%struct.hash_table* %118, %struct.hash_table* %119, i1 zeroext false)
  br i1 %120, label %122, label %121

121:                                              ; preds = %117, %108
  call void @abort() #14
  unreachable

122:                                              ; preds = %117
  %123 = load %struct.hash_table*, %struct.hash_table** %7, align 8
  %124 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %123, i32 0, i32 0
  %125 = load %struct.hash_entry*, %struct.hash_entry** %124, align 8
  %126 = bitcast %struct.hash_entry* %125 to i8*
  call void @free(i8* %126) #13
  store i1 false, i1* %3, align 1
  br label %127

127:                                              ; preds = %122, %78, %34, %23, %16
  %128 = load i1, i1* %3, align 1
  ret i1 %128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %0, %struct.hash_table* %1, i1 zeroext %2) #3 {
  %4 = alloca i1, align 1
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %struct.hash_entry*, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %struct.hash_entry*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  store %struct.hash_table* %1, %struct.hash_table** %6, align 8
  %14 = zext i1 %2 to i8
  store i8 %14, i8* %7, align 1
  %15 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 0
  %17 = load %struct.hash_entry*, %struct.hash_entry** %16, align 8
  store %struct.hash_entry* %17, %struct.hash_entry** %8, align 8
  br label %18

18:                                               ; preds = %123, %3
  %19 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %20 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 1
  %22 = load %struct.hash_entry*, %struct.hash_entry** %21, align 8
  %23 = icmp ult %struct.hash_entry* %19, %22
  br i1 %23, label %24, label %126

24:                                               ; preds = %18
  %25 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %122

29:                                               ; preds = %24
  %30 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1
  %32 = load %struct.hash_entry*, %struct.hash_entry** %31, align 8
  store %struct.hash_entry* %32, %struct.hash_entry** %9, align 8
  br label %33

33:                                               ; preds = %70, %29
  %34 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %35 = icmp ne %struct.hash_entry* %34, null
  br i1 %35, label %36, label %72

36:                                               ; preds = %33
  %37 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  store i8* %39, i8** %11, align 8
  %40 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %41 = load i8*, i8** %11, align 8
  %42 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %40, i8* %41)
  store %struct.hash_entry* %42, %struct.hash_entry** %12, align 8
  %43 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1
  %45 = load %struct.hash_entry*, %struct.hash_entry** %44, align 8
  store %struct.hash_entry* %45, %struct.hash_entry** %10, align 8
  %46 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %47 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %36
  %51 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %52 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 1
  %53 = load %struct.hash_entry*, %struct.hash_entry** %52, align 8
  %54 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %55 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1
  store %struct.hash_entry* %53, %struct.hash_entry** %55, align 8
  %56 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %57 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %57, i32 0, i32 1
  store %struct.hash_entry* %56, %struct.hash_entry** %58, align 8
  br label %69

59:                                               ; preds = %36
  %60 = load i8*, i8** %11, align 8
  %61 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %61, i32 0, i32 0
  store i8* %60, i8** %62, align 8
  %63 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  %67 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %68 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  call void @free_entry(%struct.hash_table* %67, %struct.hash_entry* %68)
  br label %69

69:                                               ; preds = %59, %50
  br label %70

70:                                               ; preds = %69
  %71 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  store %struct.hash_entry* %71, %struct.hash_entry** %9, align 8
  br label %33, !llvm.loop !38

72:                                               ; preds = %33
  %73 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %74 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  store i8* %75, i8** %11, align 8
  %76 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %77 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %76, i32 0, i32 1
  store %struct.hash_entry* null, %struct.hash_entry** %77, align 8
  %78 = load i8, i8* %7, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %81

80:                                               ; preds = %72
  br label %123

81:                                               ; preds = %72
  %82 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %83 = load i8*, i8** %11, align 8
  %84 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %82, i8* %83)
  store %struct.hash_entry* %84, %struct.hash_entry** %12, align 8
  %85 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %86 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %85, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %107

89:                                               ; preds = %81
  %90 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %91 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %90)
  store %struct.hash_entry* %91, %struct.hash_entry** %13, align 8
  %92 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %93 = icmp eq %struct.hash_entry* %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  store i1 false, i1* %4, align 1
  br label %127

95:                                               ; preds = %89
  %96 = load i8*, i8** %11, align 8
  %97 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %98 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %97, i32 0, i32 0
  store i8* %96, i8** %98, align 8
  %99 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %100 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %99, i32 0, i32 1
  %101 = load %struct.hash_entry*, %struct.hash_entry** %100, align 8
  %102 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %103 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %102, i32 0, i32 1
  store %struct.hash_entry* %101, %struct.hash_entry** %103, align 8
  %104 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %105 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %106 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %105, i32 0, i32 1
  store %struct.hash_entry* %104, %struct.hash_entry** %106, align 8
  br label %115

107:                                              ; preds = %81
  %108 = load i8*, i8** %11, align 8
  %109 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %110 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %109, i32 0, i32 0
  store i8* %108, i8** %110, align 8
  %111 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %112 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %111, i32 0, i32 3
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %112, align 8
  br label %115

115:                                              ; preds = %107, %95
  %116 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %117 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %116, i32 0, i32 0
  store i8* null, i8** %117, align 8
  %118 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %119 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %118, i32 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, -1
  store i64 %121, i64* %119, align 8
  br label %122

122:                                              ; preds = %115, %24
  br label %123

123:                                              ; preds = %122, %80
  %124 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %125 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %124, i32 1
  store %struct.hash_entry* %125, %struct.hash_entry** %8, align 8
  br label %18, !llvm.loop !39

126:                                              ; preds = %18
  store i1 true, i1* %4, align 1
  br label %127

127:                                              ; preds = %126, %94
  %128 = load i1, i1* %4, align 1
  ret i1 %128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %0, %struct.hash_entry* %1) #3 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  store %struct.hash_entry* %1, %struct.hash_entry** %4, align 8
  %5 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8
  %6 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0
  store i8* null, i8** %6, align 8
  %7 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 9
  %9 = load %struct.hash_entry*, %struct.hash_entry** %8, align 8
  %10 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8
  %11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1
  store %struct.hash_entry* %9, %struct.hash_entry** %11, align 8
  %12 = load %struct.hash_entry*, %struct.hash_entry** %4, align 8
  %13 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 9
  store %struct.hash_entry* %12, %struct.hash_entry** %14, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %0) #3 {
  %2 = alloca %struct.hash_table*, align 8
  %3 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %2, align 8
  %4 = load %struct.hash_table*, %struct.hash_table** %2, align 8
  %5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 9
  %6 = load %struct.hash_entry*, %struct.hash_entry** %5, align 8
  %7 = icmp ne %struct.hash_entry* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = load %struct.hash_table*, %struct.hash_table** %2, align 8
  %10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 9
  %11 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  store %struct.hash_entry* %11, %struct.hash_entry** %3, align 8
  %12 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8
  %13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 1
  %14 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %15 = load %struct.hash_table*, %struct.hash_table** %2, align 8
  %16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 9
  store %struct.hash_entry* %14, %struct.hash_entry** %16, align 8
  br label %20

17:                                               ; preds = %1
  %18 = call noalias i8* @malloc(i64 16) #13
  %19 = bitcast i8* %18 to %struct.hash_entry*
  store %struct.hash_entry* %19, %struct.hash_entry** %3, align 8
  br label %20

20:                                               ; preds = %17, %8
  %21 = load %struct.hash_entry*, %struct.hash_entry** %3, align 8
  ret %struct.hash_entry* %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.hash_table*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %struct.hash_entry*, align 8
  %10 = alloca %struct.hash_tuning*, align 8
  %11 = alloca float, align 4
  %12 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8** %2, i8*** %7, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  call void @abort() #14
  unreachable

16:                                               ; preds = %3
  %17 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %18 = load i8*, i8** %6, align 8
  %19 = call i8* @hash_find_entry(%struct.hash_table* %17, i8* %18, %struct.hash_entry** %9, i1 zeroext false)
  store i8* %19, i8** %8, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %16
  %22 = load i8**, i8*** %7, align 8
  %23 = icmp ne i8** %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load i8*, i8** %8, align 8
  %26 = load i8**, i8*** %7, align 8
  store i8* %25, i8** %26, align 8
  br label %27

27:                                               ; preds = %24, %21
  store i32 0, i32* %4, align 4
  br label %150

28:                                               ; preds = %16
  %29 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = uitofp i64 %31 to float
  %33 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %34 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %33, i32 0, i32 5
  %35 = load %struct.hash_tuning*, %struct.hash_tuning** %34, align 8
  %36 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %35, i32 0, i32 2
  %37 = load float, float* %36, align 4
  %38 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %38, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = uitofp i64 %40 to float
  %42 = fmul float %37, %41
  %43 = fcmp ogt float %32, %42
  br i1 %43, label %44, label %111

44:                                               ; preds = %28
  %45 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %46 = call zeroext i1 @check_tuning(%struct.hash_table* %45)
  %47 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %48 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %47, i32 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = uitofp i64 %49 to float
  %51 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %52 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 5
  %53 = load %struct.hash_tuning*, %struct.hash_tuning** %52, align 8
  %54 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %53, i32 0, i32 2
  %55 = load float, float* %54, align 4
  %56 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %57 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %56, i32 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = uitofp i64 %58 to float
  %60 = fmul float %55, %59
  %61 = fcmp ogt float %50, %60
  br i1 %61, label %62, label %110

62:                                               ; preds = %44
  %63 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %64 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %63, i32 0, i32 5
  %65 = load %struct.hash_tuning*, %struct.hash_tuning** %64, align 8
  store %struct.hash_tuning* %65, %struct.hash_tuning** %10, align 8
  %66 = load %struct.hash_tuning*, %struct.hash_tuning** %10, align 8
  %67 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %66, i32 0, i32 4
  %68 = load i8, i8* %67, align 4
  %69 = trunc i8 %68 to i1
  br i1 %69, label %70, label %79

70:                                               ; preds = %62
  %71 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %72 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %71, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = uitofp i64 %73 to float
  %75 = load %struct.hash_tuning*, %struct.hash_tuning** %10, align 8
  %76 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %75, i32 0, i32 3
  %77 = load float, float* %76, align 4
  %78 = fmul float %74, %77
  br label %92

79:                                               ; preds = %62
  %80 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %81 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %80, i32 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = uitofp i64 %82 to float
  %84 = load %struct.hash_tuning*, %struct.hash_tuning** %10, align 8
  %85 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %84, i32 0, i32 3
  %86 = load float, float* %85, align 4
  %87 = fmul float %83, %86
  %88 = load %struct.hash_tuning*, %struct.hash_tuning** %10, align 8
  %89 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %88, i32 0, i32 2
  %90 = load float, float* %89, align 4
  %91 = fmul float %87, %90
  br label %92

92:                                               ; preds = %79, %70
  %93 = phi float [ %78, %70 ], [ %91, %79 ]
  store float %93, float* %11, align 4
  %94 = load float, float* %11, align 4
  %95 = fcmp ole float 0x43F0000000000000, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %92
  store i32 -1, i32* %4, align 4
  br label %150

97:                                               ; preds = %92
  %98 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %99 = load float, float* %11, align 4
  %100 = fptoui float %99 to i64
  %101 = call zeroext i1 @hash_rehash(%struct.hash_table* %98, i64 %100)
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  store i32 -1, i32* %4, align 4
  br label %150

103:                                              ; preds = %97
  %104 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %105 = load i8*, i8** %6, align 8
  %106 = call i8* @hash_find_entry(%struct.hash_table* %104, i8* %105, %struct.hash_entry** %9, i1 zeroext false)
  %107 = icmp ne i8* %106, null
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  call void @abort() #14
  unreachable

109:                                              ; preds = %103
  br label %110

110:                                              ; preds = %109, %44
  br label %111

111:                                              ; preds = %110, %28
  %112 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %113 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %112, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %116, label %138

116:                                              ; preds = %111
  %117 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %118 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %117)
  store %struct.hash_entry* %118, %struct.hash_entry** %12, align 8
  %119 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %120 = icmp eq %struct.hash_entry* %119, null
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  store i32 -1, i32* %4, align 4
  br label %150

122:                                              ; preds = %116
  %123 = load i8*, i8** %6, align 8
  %124 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %125 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %124, i32 0, i32 0
  store i8* %123, i8** %125, align 8
  %126 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %127 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %126, i32 0, i32 1
  %128 = load %struct.hash_entry*, %struct.hash_entry** %127, align 8
  %129 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %130 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %129, i32 0, i32 1
  store %struct.hash_entry* %128, %struct.hash_entry** %130, align 8
  %131 = load %struct.hash_entry*, %struct.hash_entry** %12, align 8
  %132 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %133 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %132, i32 0, i32 1
  store %struct.hash_entry* %131, %struct.hash_entry** %133, align 8
  %134 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %135 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %134, i32 0, i32 4
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  store i32 1, i32* %4, align 4
  br label %150

138:                                              ; preds = %111
  %139 = load i8*, i8** %6, align 8
  %140 = load %struct.hash_entry*, %struct.hash_entry** %9, align 8
  %141 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %140, i32 0, i32 0
  store i8* %139, i8** %141, align 8
  %142 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %143 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %142, i32 0, i32 4
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %143, align 8
  %146 = load %struct.hash_table*, %struct.hash_table** %5, align 8
  %147 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %146, i32 0, i32 3
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %147, align 8
  store i32 1, i32* %4, align 4
  br label %150

150:                                              ; preds = %138, %122, %121, %102, %96, %27
  %151 = load i32, i32* %4, align 4
  ret i32 %151
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %2, i1 zeroext %3) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.hash_table*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hash_entry**, align 8
  %9 = alloca i8, align 1
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %struct.hash_entry*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %6, align 8
  store i8* %1, i8** %7, align 8
  store %struct.hash_entry** %2, %struct.hash_entry*** %8, align 8
  %16 = zext i1 %3 to i8
  store i8 %16, i8* %9, align 1
  %17 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %17, i8* %18)
  store %struct.hash_entry* %19, %struct.hash_entry** %10, align 8
  %20 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %21 = load %struct.hash_entry**, %struct.hash_entry*** %8, align 8
  store %struct.hash_entry* %20, %struct.hash_entry** %21, align 8
  %22 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %4
  store i8* null, i8** %5, align 8
  br label %122

27:                                               ; preds = %4
  %28 = load i8*, i8** %7, align 8
  %29 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %28, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %27
  %34 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 7
  %36 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %35, align 8
  %37 = load i8*, i8** %7, align 8
  %38 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %39 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %38, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = call zeroext i1 %36(i8* %37, i8* %40)
  br i1 %41, label %42, label %69

42:                                               ; preds = %33, %27
  %43 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %44 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8* %45, i8** %12, align 8
  %46 = load i8, i8* %9, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %67

48:                                               ; preds = %42
  %49 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %49, i32 0, i32 1
  %51 = load %struct.hash_entry*, %struct.hash_entry** %50, align 8
  %52 = icmp ne %struct.hash_entry* %51, null
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %55 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1
  %56 = load %struct.hash_entry*, %struct.hash_entry** %55, align 8
  store %struct.hash_entry* %56, %struct.hash_entry** %13, align 8
  %57 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %58 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  %59 = bitcast %struct.hash_entry* %57 to i8*
  %60 = bitcast %struct.hash_entry* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %62 = load %struct.hash_entry*, %struct.hash_entry** %13, align 8
  call void @free_entry(%struct.hash_table* %61, %struct.hash_entry* %62)
  br label %66

63:                                               ; preds = %48
  %64 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %65 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %64, i32 0, i32 0
  store i8* null, i8** %65, align 8
  br label %66

66:                                               ; preds = %63, %53
  br label %67

67:                                               ; preds = %66, %42
  %68 = load i8*, i8** %12, align 8
  store i8* %68, i8** %5, align 8
  br label %122

69:                                               ; preds = %33
  %70 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  store %struct.hash_entry* %70, %struct.hash_entry** %11, align 8
  br label %71

71:                                               ; preds = %117, %69
  %72 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %73 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %72, i32 0, i32 1
  %74 = load %struct.hash_entry*, %struct.hash_entry** %73, align 8
  %75 = icmp ne %struct.hash_entry* %74, null
  br i1 %75, label %76, label %121

76:                                               ; preds = %71
  %77 = load i8*, i8** %7, align 8
  %78 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %79 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %78, i32 0, i32 1
  %80 = load %struct.hash_entry*, %struct.hash_entry** %79, align 8
  %81 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %80, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %77, %82
  br i1 %83, label %95, label %84

84:                                               ; preds = %76
  %85 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %86 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %85, i32 0, i32 7
  %87 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %86, align 8
  %88 = load i8*, i8** %7, align 8
  %89 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %90 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %89, i32 0, i32 1
  %91 = load %struct.hash_entry*, %struct.hash_entry** %90, align 8
  %92 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = call zeroext i1 %87(i8* %88, i8* %93)
  br i1 %94, label %95, label %116

95:                                               ; preds = %84, %76
  %96 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %97 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %96, i32 0, i32 1
  %98 = load %struct.hash_entry*, %struct.hash_entry** %97, align 8
  %99 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %98, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  store i8* %100, i8** %14, align 8
  %101 = load i8, i8* %9, align 1
  %102 = trunc i8 %101 to i1
  br i1 %102, label %103, label %114

103:                                              ; preds = %95
  %104 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %105 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %104, i32 0, i32 1
  %106 = load %struct.hash_entry*, %struct.hash_entry** %105, align 8
  store %struct.hash_entry* %106, %struct.hash_entry** %15, align 8
  %107 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8
  %108 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %107, i32 0, i32 1
  %109 = load %struct.hash_entry*, %struct.hash_entry** %108, align 8
  %110 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %111 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %110, i32 0, i32 1
  store %struct.hash_entry* %109, %struct.hash_entry** %111, align 8
  %112 = load %struct.hash_table*, %struct.hash_table** %6, align 8
  %113 = load %struct.hash_entry*, %struct.hash_entry** %15, align 8
  call void @free_entry(%struct.hash_table* %112, %struct.hash_entry* %113)
  br label %114

114:                                              ; preds = %103, %95
  %115 = load i8*, i8** %14, align 8
  store i8* %115, i8** %5, align 8
  br label %122

116:                                              ; preds = %84
  br label %117

117:                                              ; preds = %116
  %118 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  %119 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %118, i32 0, i32 1
  %120 = load %struct.hash_entry*, %struct.hash_entry** %119, align 8
  store %struct.hash_entry* %120, %struct.hash_entry** %11, align 8
  br label %71, !llvm.loop !40

121:                                              ; preds = %71
  store i8* null, i8** %5, align 8
  br label %122

122:                                              ; preds = %121, %114, %67, %26
  %123 = load i8*, i8** %5, align 8
  ret i8* %123
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_insert(%struct.hash_table* %0, i8* %1) #3 {
  %3 = alloca %struct.hash_table*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store %struct.hash_table* %0, %struct.hash_table** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.hash_table*, %struct.hash_table** %3, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = call i32 @hash_insert_if_absent(%struct.hash_table* %7, i8* %8, i8** %5)
  store i32 %9, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  br label %22

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load i8*, i8** %5, align 8
  br label %20

18:                                               ; preds = %13
  %19 = load i8*, i8** %4, align 8
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i8* [ %17, %16 ], [ %19, %18 ]
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i8* [ null, %12 ], [ %21, %20 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_delete(%struct.hash_table* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.hash_table*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.hash_entry*, align 8
  %8 = alloca %struct.hash_tuning*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.hash_entry*, align 8
  %11 = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %0, %struct.hash_table** %4, align 8
  store i8* %1, i8** %5, align 8
  %12 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = call i8* @hash_find_entry(%struct.hash_table* %12, i8* %13, %struct.hash_entry** %7, i1 zeroext true)
  store i8* %14, i8** %6, align 8
  %15 = load i8*, i8** %6, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %123

18:                                               ; preds = %2
  %19 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = load %struct.hash_entry*, %struct.hash_entry** %7, align 8
  %24 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %121, label %27

27:                                               ; preds = %18
  %28 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %33 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = uitofp i64 %34 to float
  %36 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %37 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 5
  %38 = load %struct.hash_tuning*, %struct.hash_tuning** %37, align 8
  %39 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %38, i32 0, i32 0
  %40 = load float, float* %39, align 4
  %41 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %42 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = uitofp i64 %43 to float
  %45 = fmul float %40, %44
  %46 = fcmp olt float %35, %45
  br i1 %46, label %47, label %120

47:                                               ; preds = %27
  %48 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %49 = call zeroext i1 @check_tuning(%struct.hash_table* %48)
  %50 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %51 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %50, i32 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = uitofp i64 %52 to float
  %54 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %55 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 5
  %56 = load %struct.hash_tuning*, %struct.hash_tuning** %55, align 8
  %57 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %56, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %60 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %59, i32 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = uitofp i64 %61 to float
  %63 = fmul float %58, %62
  %64 = fcmp olt float %53, %63
  br i1 %64, label %65, label %119

65:                                               ; preds = %47
  %66 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %67 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %66, i32 0, i32 5
  %68 = load %struct.hash_tuning*, %struct.hash_tuning** %67, align 8
  store %struct.hash_tuning* %68, %struct.hash_tuning** %8, align 8
  %69 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %70 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %69, i32 0, i32 4
  %71 = load i8, i8* %70, align 4
  %72 = trunc i8 %71 to i1
  br i1 %72, label %73, label %82

73:                                               ; preds = %65
  %74 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %75 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %74, i32 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = uitofp i64 %76 to float
  %78 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %79 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %78, i32 0, i32 1
  %80 = load float, float* %79, align 4
  %81 = fmul float %77, %80
  br label %95

82:                                               ; preds = %65
  %83 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %84 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %83, i32 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = uitofp i64 %85 to float
  %87 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %88 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %87, i32 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = fmul float %86, %89
  %91 = load %struct.hash_tuning*, %struct.hash_tuning** %8, align 8
  %92 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %91, i32 0, i32 2
  %93 = load float, float* %92, align 4
  %94 = fmul float %90, %93
  br label %95

95:                                               ; preds = %82, %73
  %96 = phi float [ %81, %73 ], [ %94, %82 ]
  %97 = fptoui float %96 to i64
  store i64 %97, i64* %9, align 8
  %98 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %99 = load i64, i64* %9, align 8
  %100 = call zeroext i1 @hash_rehash(%struct.hash_table* %98, i64 %99)
  br i1 %100, label %118, label %101

101:                                              ; preds = %95
  %102 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %103 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %102, i32 0, i32 9
  %104 = load %struct.hash_entry*, %struct.hash_entry** %103, align 8
  store %struct.hash_entry* %104, %struct.hash_entry** %10, align 8
  br label %105

105:                                              ; preds = %108, %101
  %106 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %107 = icmp ne %struct.hash_entry* %106, null
  br i1 %107, label %108, label %115

108:                                              ; preds = %105
  %109 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %110 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %109, i32 0, i32 1
  %111 = load %struct.hash_entry*, %struct.hash_entry** %110, align 8
  store %struct.hash_entry* %111, %struct.hash_entry** %11, align 8
  %112 = load %struct.hash_entry*, %struct.hash_entry** %10, align 8
  %113 = bitcast %struct.hash_entry* %112 to i8*
  call void @free(i8* %113) #13
  %114 = load %struct.hash_entry*, %struct.hash_entry** %11, align 8
  store %struct.hash_entry* %114, %struct.hash_entry** %10, align 8
  br label %105, !llvm.loop !41

115:                                              ; preds = %105
  %116 = load %struct.hash_table*, %struct.hash_table** %4, align 8
  %117 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %116, i32 0, i32 9
  store %struct.hash_entry* null, %struct.hash_entry** %117, align 8
  br label %118

118:                                              ; preds = %115, %95
  br label %119

119:                                              ; preds = %118, %47
  br label %120

120:                                              ; preds = %119, %27
  br label %121

121:                                              ; preds = %120, %18
  %122 = load i8*, i8** %6, align 8
  store i8* %122, i8** %3, align 8
  br label %123

123:                                              ; preds = %121, %17
  %124 = load i8*, i8** %3, align 8
  ret i8* %124
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @triple_hash(i8* %0, i64 %1) #8 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.F_triple*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.F_triple*
  store %struct.F_triple* %8, %struct.F_triple** %5, align 8
  %9 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %10 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i64, i64* %4, align 8
  %13 = call i64 @hash_pjw(i8* %11, i64 %12) #15
  store i64 %13, i64* %6, align 8
  %14 = load i64, i64* %6, align 8
  %15 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %16 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = xor i64 %14, %17
  %19 = load i64, i64* %4, align 8
  %20 = urem i64 %18, %19
  ret i64 %20
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @triple_hash_no_name(i8* %0, i64 %1) #8 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.F_triple*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.F_triple*
  store %struct.F_triple* %7, %struct.F_triple** %5, align 8
  %8 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %9 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = urem i64 %10, %11
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @triple_compare(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.F_triple*, align 8
  %6 = alloca %struct.F_triple*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.F_triple*
  store %struct.F_triple* %8, %struct.F_triple** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.F_triple*
  store %struct.F_triple* %10, %struct.F_triple** %6, align 8
  %11 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %12 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = load %struct.F_triple*, %struct.F_triple** %6, align 8
  %15 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %13, %16
  br i1 %17, label %18, label %34

18:                                               ; preds = %2
  %19 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %20 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %19, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = load %struct.F_triple*, %struct.F_triple** %6, align 8
  %23 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %21, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %18
  %27 = load %struct.F_triple*, %struct.F_triple** %5, align 8
  %28 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %27, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = load %struct.F_triple*, %struct.F_triple** %6, align 8
  %31 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = call zeroext i1 @same_name(i8* %29, i8* %32)
  br label %34

34:                                               ; preds = %26, %18, %2
  %35 = phi i1 [ false, %18 ], [ false, %2 ], [ %33, %26 ]
  %36 = zext i1 %35 to i64
  %37 = select i1 %35, i32 1, i32 0
  %38 = icmp ne i32 %37, 0
  ret i1 %38
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @triple_free(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.F_triple*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = bitcast i8* %4 to %struct.F_triple*
  store %struct.F_triple* %5, %struct.F_triple** %3, align 8
  %6 = load %struct.F_triple*, %struct.F_triple** %3, align 8
  %7 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  call void @free(i8* %8) #13
  %9 = load %struct.F_triple*, %struct.F_triple** %3, align 8
  %10 = bitcast %struct.F_triple* %9 to i8*
  call void @free(i8* %10) #13
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_program_name(i8* %0) #3 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.333, i64 0, i64 0), %struct._IO_FILE* %8)
  call void @abort() #14
  unreachable

10:                                               ; preds = %1
  %11 = load i8*, i8** %2, align 8
  %12 = call i8* @strrchr(i8* %11, i32 47) #15
  store i8* %12, i8** %3, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = load i8*, i8** %3, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1
  br label %20

18:                                               ; preds = %10
  %19 = load i8*, i8** %2, align 8
  br label %20

20:                                               ; preds = %18, %15
  %21 = phi i8* [ %17, %15 ], [ %19, %18 ]
  store i8* %21, i8** %4, align 8
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %2, align 8
  %24 = ptrtoint i8* %22 to i64
  %25 = ptrtoint i8* %23 to i64
  %26 = sub i64 %24, %25
  %27 = icmp sge i64 %26, 7
  br i1 %27, label %28, label %43

28:                                               ; preds = %20
  %29 = load i8*, i8** %4, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 -7
  %31 = call i32 @strncmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.334, i64 0, i64 0), i64 7) #15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %28
  %34 = load i8*, i8** %4, align 8
  store i8* %34, i8** %2, align 8
  %35 = load i8*, i8** %4, align 8
  %36 = call i32 @strncmp(i8* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.335, i64 0, i64 0), i64 3) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = load i8*, i8** %4, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 3
  store i8* %40, i8** %2, align 8
  %41 = load i8*, i8** %2, align 8
  store i8* %41, i8** @program_invocation_short_name, align 8
  br label %42

42:                                               ; preds = %38, %33
  br label %43

43:                                               ; preds = %42, %28, %20
  %44 = load i8*, i8** %2, align 8
  store i8* %44, i8** @program_name, align 8
  %45 = load i8*, i8** %2, align 8
  store i8* %45, i8** @program_invocation_name, align 8
  ret void
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.permission_context, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %14 = load i8*, i8** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = load i32, i32* %11, align 4
  %17 = call i32 @get_permissions(i8* %14, i32 %15, i32 %16, %struct.permission_context* %12)
  store i32 %17, i32* %13, align 4
  %18 = load i32, i32* %13, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %5
  store i32 -2, i32* %6, align 4
  br label %26

21:                                               ; preds = %5
  %22 = load i8*, i8** %9, align 8
  %23 = load i32, i32* %10, align 4
  %24 = call i32 @set_permissions(%struct.permission_context* %12, i8* %22, i32 %23)
  store i32 %24, i32* %13, align 4
  call void @free_permission_context(%struct.permission_context* %12)
  %25 = load i32, i32* %13, align 4
  store i32 %25, i32* %6, align 4
  br label %26

26:                                               ; preds = %21, %20
  %27 = load i32, i32* %6, align 4
  ret i32 %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @qset_acl(i8* %0, i32 %1, i32 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.permission_context, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = bitcast %struct.permission_context* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 4, i1 false)
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 0
  store i32 %10, i32* %11, align 4
  %12 = load i8*, i8** %4, align 8
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @set_permissions(%struct.permission_context* %7, i8* %12, i32 %13)
  store i32 %14, i32* %8, align 4
  call void @free_permission_context(%struct.permission_context* %7)
  %15 = load i32, i32* %8, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_char_quoting(%struct.quoting_options* %0, i8 signext %1, i32 %2) #3 {
  %4 = alloca %struct.quoting_options*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.quoting_options* %0, %struct.quoting_options** %4, align 8
  store i8 %1, i8* %5, align 1
  store i32 %2, i32* %6, align 4
  %11 = load i8, i8* %5, align 1
  store i8 %11, i8* %7, align 1
  %12 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8
  %13 = icmp ne %struct.quoting_options* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load %struct.quoting_options*, %struct.quoting_options** %4, align 8
  br label %17

16:                                               ; preds = %3
  br label %17

17:                                               ; preds = %16, %14
  %18 = phi %struct.quoting_options* [ %15, %14 ], [ @default_quoting_options, %16 ]
  %19 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %18, i32 0, i32 2
  %20 = getelementptr inbounds [8 x i32], [8 x i32]* %19, i64 0, i64 0
  %21 = load i8, i8* %7, align 1
  %22 = zext i8 %21 to i64
  %23 = udiv i64 %22, 32
  %24 = getelementptr inbounds i32, i32* %20, i64 %23
  store i32* %24, i32** %8, align 8
  %25 = load i8, i8* %7, align 1
  %26 = zext i8 %25 to i64
  %27 = urem i64 %26, 32
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %9, align 4
  %29 = load i32*, i32** %8, align 8
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %9, align 4
  %32 = lshr i32 %30, %31
  %33 = and i32 %32, 1
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %6, align 4
  %35 = and i32 %34, 1
  %36 = load i32, i32* %10, align 4
  %37 = xor i32 %35, %36
  %38 = load i32, i32* %9, align 4
  %39 = shl i32 %37, %38
  %40 = load i32*, i32** %8, align 8
  %41 = load i32, i32* %40, align 4
  %42 = xor i32 %41, %39
  store i32 %42, i32* %40, align 4
  %43 = load i32, i32* %10, align 4
  ret i32 %43
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style(i32 %0, i32 %1, i8* %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %8 = load i32, i32* %5, align 4
  call void @quoting_options_from_style(%struct.quoting_options* sret(%struct.quoting_options) align 8 %7, i32 %8)
  %9 = load i32, i32* %4, align 4
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @quotearg_n_options(i32 %9, i8* %10, i64 -1, %struct.quoting_options* %7)
  ret i8* %11
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret(%struct.quoting_options) align 8 %0, i32 %1) #3 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %struct.quoting_options* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false)
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 10
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  call void @abort() #14
  unreachable

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %0, i32 0, i32 0
  store i32 %9, i32* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.quoting_options*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.slotvec*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %8, align 8
  %17 = call i32* @__errno_location() #16
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %9, align 4
  %19 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %19, %struct.slotvec** %10, align 8
  %20 = load i32, i32* %5, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %4
  call void @abort() #14
  unreachable

23:                                               ; preds = %4
  %24 = load i32, i32* @nslots, align 4
  %25 = load i32, i32* %5, align 4
  %26 = icmp sle i32 %24, %25
  br i1 %26, label %27, label %69

27:                                               ; preds = %23
  %28 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %29 = icmp eq %struct.slotvec* %28, @slotvec0
  %30 = zext i1 %29 to i8
  store i8 %30, i8* %11, align 1
  store i32 2147483646, i32* %12, align 4
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %5, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %27
  call void @xalloc_die() #17
  unreachable

35:                                               ; preds = %27
  %36 = load i8, i8* %11, align 1
  %37 = trunc i8 %36 to i1
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  br label %41

39:                                               ; preds = %35
  %40 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  br label %41

41:                                               ; preds = %39, %38
  %42 = phi %struct.slotvec* [ null, %38 ], [ %40, %39 ]
  %43 = bitcast %struct.slotvec* %42 to i8*
  %44 = load i32, i32* %5, align 4
  %45 = add nsw i32 %44, 1
  %46 = sext i32 %45 to i64
  %47 = mul i64 %46, 16
  %48 = call i8* @xrealloc(i8* %43, i64 %47)
  %49 = bitcast i8* %48 to %struct.slotvec*
  store %struct.slotvec* %49, %struct.slotvec** %10, align 8
  store %struct.slotvec* %49, %struct.slotvec** @slotvec, align 8
  %50 = load i8, i8* %11, align 1
  %51 = trunc i8 %50 to i1
  br i1 %51, label %52, label %55

52:                                               ; preds = %41
  %53 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %54 = bitcast %struct.slotvec* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false)
  br label %55

55:                                               ; preds = %52, %41
  %56 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %57 = load i32, i32* @nslots, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %56, i64 %58
  %60 = bitcast %struct.slotvec* %59 to i8*
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  %63 = load i32, i32* @nslots, align 4
  %64 = sub nsw i32 %62, %63
  %65 = sext i32 %64 to i64
  %66 = mul i64 %65, 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %66, i1 false)
  %67 = load i32, i32* %5, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* @nslots, align 4
  br label %69

69:                                               ; preds = %55, %23
  %70 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %70, i64 %72
  %74 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %73, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %13, align 8
  %76 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %77 = load i32, i32* %5, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %76, i64 %78
  %80 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  store i8* %81, i8** %14, align 8
  %82 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %83 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = or i32 %84, 1
  store i32 %85, i32* %15, align 4
  %86 = load i8*, i8** %14, align 8
  %87 = load i64, i64* %13, align 8
  %88 = load i8*, i8** %6, align 8
  %89 = load i64, i64* %7, align 8
  %90 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %91 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* %15, align 4
  %94 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %95 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %94, i32 0, i32 2
  %96 = getelementptr inbounds [8 x i32], [8 x i32]* %95, i64 0, i64 0
  %97 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %98 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %97, i32 0, i32 3
  %99 = load i8*, i8** %98, align 8
  %100 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %101 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %100, i32 0, i32 4
  %102 = load i8*, i8** %101, align 8
  %103 = call i64 @quotearg_buffer_restyled(i8* %86, i64 %87, i8* %88, i64 %89, i32 %92, i32 %93, i32* %96, i8* %99, i8* %102)
  store i64 %103, i64* %16, align 8
  %104 = load i64, i64* %13, align 8
  %105 = load i64, i64* %16, align 8
  %106 = icmp ule i64 %104, %105
  br i1 %106, label %107, label %145

107:                                              ; preds = %69
  %108 = load i64, i64* %16, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %13, align 8
  %110 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %111 = load i32, i32* %5, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %110, i64 %112
  %114 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %113, i32 0, i32 0
  store i64 %109, i64* %114, align 8
  %115 = load i8*, i8** %14, align 8
  %116 = icmp ne i8* %115, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0)
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = load i8*, i8** %14, align 8
  call void @free(i8* %118) #13
  br label %119

119:                                              ; preds = %117, %107
  %120 = load i64, i64* %13, align 8
  %121 = call noalias i8* @xcharalloc(i64 %120)
  store i8* %121, i8** %14, align 8
  %122 = load %struct.slotvec*, %struct.slotvec** %10, align 8
  %123 = load i32, i32* %5, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %122, i64 %124
  %126 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %125, i32 0, i32 1
  store i8* %121, i8** %126, align 8
  %127 = load i8*, i8** %14, align 8
  %128 = load i64, i64* %13, align 8
  %129 = load i8*, i8** %6, align 8
  %130 = load i64, i64* %7, align 8
  %131 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %132 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = load i32, i32* %15, align 4
  %135 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %136 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %135, i32 0, i32 2
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %136, i64 0, i64 0
  %138 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %139 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %138, i32 0, i32 3
  %140 = load i8*, i8** %139, align 8
  %141 = load %struct.quoting_options*, %struct.quoting_options** %8, align 8
  %142 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %141, i32 0, i32 4
  %143 = load i8*, i8** %142, align 8
  %144 = call i64 @quotearg_buffer_restyled(i8* %127, i64 %128, i8* %129, i64 %130, i32 %133, i32 %134, i32* %137, i8* %140, i8* %143)
  br label %145

145:                                              ; preds = %119, %69
  %146 = load i32, i32* %9, align 4
  %147 = call i32* @__errno_location() #16
  store i32 %146, i32* %147, align 4
  %148 = load i8*, i8** %14, align 8
  ret i8* %148
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %0, i64 %1, i8* %2, i64 %3, i32 %4, i32 %5, i32* %6, i8* %7, i8* %8) #3 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca i64, align 8
  %37 = alloca i8, align 1
  %38 = alloca %struct.__mbstate_t, align 4
  %39 = alloca i32, align 4
  %40 = alloca i64, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  store i8* %0, i8** %11, align 8
  store i64 %1, i64* %12, align 8
  store i8* %2, i8** %13, align 8
  store i64 %3, i64* %14, align 8
  store i32 %4, i32* %15, align 4
  store i32 %5, i32* %16, align 4
  store i32* %6, i32** %17, align 8
  store i8* %7, i8** %18, align 8
  store i8* %8, i8** %19, align 8
  store i64 0, i64* %21, align 8
  store i64 0, i64* %22, align 8
  store i8* null, i8** %23, align 8
  store i64 0, i64* %24, align 8
  store i8 0, i8* %25, align 1
  %43 = call i64 @__ctype_get_mb_cur_max() #13
  %44 = icmp eq i64 %43, 1
  %45 = zext i1 %44 to i8
  store i8 %45, i8* %26, align 1
  %46 = load i32, i32* %16, align 4
  %47 = and i32 %46, 2
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i8
  store i8 %49, i8* %27, align 1
  store i8 0, i8* %28, align 1
  store i8 0, i8* %29, align 1
  store i8 1, i8* %30, align 1
  br label %50

50:                                               ; preds = %1042, %9
  %51 = load i32, i32* %15, align 4
  switch i32 %51, label %136 [
    i32 6, label %52
    i32 5, label %53
    i32 7, label %70
    i32 8, label %71
    i32 9, label %71
    i32 10, label %71
    i32 3, label %111
    i32 1, label %112
    i32 4, label %113
    i32 2, label %118
    i32 0, label %135
  ]

52:                                               ; preds = %50
  store i32 5, i32* %15, align 4
  store i8 1, i8* %27, align 1
  br label %53

53:                                               ; preds = %52, %50
  %54 = load i8, i8* %27, align 1
  %55 = trunc i8 %54 to i1
  br i1 %55, label %69, label %56

56:                                               ; preds = %53
  br label %57

57:                                               ; preds = %56
  %58 = load i64, i64* %21, align 8
  %59 = load i64, i64* %12, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = load i8*, i8** %11, align 8
  %63 = load i64, i64* %21, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  store i8 34, i8* %64, align 1
  br label %65

65:                                               ; preds = %61, %57
  %66 = load i64, i64* %21, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %21, align 8
  br label %68

68:                                               ; preds = %65
  br label %69

69:                                               ; preds = %68, %53
  store i8 1, i8* %25, align 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.344, i64 0, i64 0), i8** %23, align 8
  store i64 1, i64* %24, align 8
  br label %137

70:                                               ; preds = %50
  store i8 1, i8* %25, align 1
  store i8 0, i8* %27, align 1
  br label %137

71:                                               ; preds = %50, %50, %50
  %72 = load i32, i32* %15, align 4
  %73 = icmp ne i32 %72, 10
  br i1 %73, label %74, label %79

74:                                               ; preds = %71
  %75 = load i32, i32* %15, align 4
  %76 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.345, i64 0, i64 0), i32 %75)
  store i8* %76, i8** %18, align 8
  %77 = load i32, i32* %15, align 4
  %78 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.346, i64 0, i64 0), i32 %77)
  store i8* %78, i8** %19, align 8
  br label %79

79:                                               ; preds = %74, %71
  %80 = load i8, i8* %27, align 1
  %81 = trunc i8 %80 to i1
  br i1 %81, label %107, label %82

82:                                               ; preds = %79
  %83 = load i8*, i8** %18, align 8
  store i8* %83, i8** %23, align 8
  br label %84

84:                                               ; preds = %103, %82
  %85 = load i8*, i8** %23, align 8
  %86 = load i8, i8* %85, align 1
  %87 = icmp ne i8 %86, 0
  br i1 %87, label %88, label %106

88:                                               ; preds = %84
  br label %89

89:                                               ; preds = %88
  %90 = load i64, i64* %21, align 8
  %91 = load i64, i64* %12, align 8
  %92 = icmp ult i64 %90, %91
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = load i8*, i8** %23, align 8
  %95 = load i8, i8* %94, align 1
  %96 = load i8*, i8** %11, align 8
  %97 = load i64, i64* %21, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  store i8 %95, i8* %98, align 1
  br label %99

99:                                               ; preds = %93, %89
  %100 = load i64, i64* %21, align 8
  %101 = add i64 %100, 1
  store i64 %101, i64* %21, align 8
  br label %102

102:                                              ; preds = %99
  br label %103

103:                                              ; preds = %102
  %104 = load i8*, i8** %23, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %23, align 8
  br label %84, !llvm.loop !42

106:                                              ; preds = %84
  br label %107

107:                                              ; preds = %106, %79
  store i8 1, i8* %25, align 1
  %108 = load i8*, i8** %19, align 8
  store i8* %108, i8** %23, align 8
  %109 = load i8*, i8** %23, align 8
  %110 = call i64 @strlen(i8* %109) #15
  store i64 %110, i64* %24, align 8
  br label %137

111:                                              ; preds = %50
  store i8 1, i8* %25, align 1
  br label %112

112:                                              ; preds = %111, %50
  store i8 1, i8* %27, align 1
  br label %113

113:                                              ; preds = %112, %50
  %114 = load i8, i8* %27, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %117, label %116

116:                                              ; preds = %113
  store i8 1, i8* %25, align 1
  br label %117

117:                                              ; preds = %116, %113
  br label %118

118:                                              ; preds = %117, %50
  store i32 2, i32* %15, align 4
  %119 = load i8, i8* %27, align 1
  %120 = trunc i8 %119 to i1
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  br label %122

122:                                              ; preds = %121
  %123 = load i64, i64* %21, align 8
  %124 = load i64, i64* %12, align 8
  %125 = icmp ult i64 %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = load i8*, i8** %11, align 8
  %128 = load i64, i64* %21, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  store i8 39, i8* %129, align 1
  br label %130

130:                                              ; preds = %126, %122
  %131 = load i64, i64* %21, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %21, align 8
  br label %133

133:                                              ; preds = %130
  br label %134

134:                                              ; preds = %133, %118
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.346, i64 0, i64 0), i8** %23, align 8
  store i64 1, i64* %24, align 8
  br label %137

135:                                              ; preds = %50
  store i8 0, i8* %27, align 1
  br label %137

136:                                              ; preds = %50
  call void @abort() #14
  unreachable

137:                                              ; preds = %135, %134, %107, %70, %69
  store i64 0, i64* %20, align 8
  br label %138

138:                                              ; preds = %1001, %137
  %139 = load i64, i64* %14, align 8
  %140 = icmp eq i64 %139, -1
  br i1 %140, label %141, label %149

141:                                              ; preds = %138
  %142 = load i8*, i8** %13, align 8
  %143 = load i64, i64* %20, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 0
  %148 = zext i1 %147 to i32
  br label %154

149:                                              ; preds = %138
  %150 = load i64, i64* %20, align 8
  %151 = load i64, i64* %14, align 8
  %152 = icmp eq i64 %150, %151
  %153 = zext i1 %152 to i32
  br label %154

154:                                              ; preds = %149, %141
  %155 = phi i32 [ %148, %141 ], [ %153, %149 ]
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  br i1 %157, label %158, label %1004

158:                                              ; preds = %154
  store i8 0, i8* %33, align 1
  store i8 0, i8* %34, align 1
  store i8 0, i8* %35, align 1
  %159 = load i8, i8* %25, align 1
  %160 = trunc i8 %159 to i1
  br i1 %160, label %161, label %197

161:                                              ; preds = %158
  %162 = load i32, i32* %15, align 4
  %163 = icmp ne i32 %162, 2
  br i1 %163, label %164, label %197

164:                                              ; preds = %161
  %165 = load i64, i64* %24, align 8
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %197

167:                                              ; preds = %164
  %168 = load i64, i64* %20, align 8
  %169 = load i64, i64* %24, align 8
  %170 = add i64 %168, %169
  %171 = load i64, i64* %14, align 8
  %172 = icmp eq i64 %171, -1
  br i1 %172, label %173, label %179

173:                                              ; preds = %167
  %174 = load i64, i64* %24, align 8
  %175 = icmp ult i64 1, %174
  br i1 %175, label %176, label %179

176:                                              ; preds = %173
  %177 = load i8*, i8** %13, align 8
  %178 = call i64 @strlen(i8* %177) #15
  store i64 %178, i64* %14, align 8
  br label %181

179:                                              ; preds = %173, %167
  %180 = load i64, i64* %14, align 8
  br label %181

181:                                              ; preds = %179, %176
  %182 = phi i64 [ %178, %176 ], [ %180, %179 ]
  %183 = icmp ule i64 %170, %182
  br i1 %183, label %184, label %197

184:                                              ; preds = %181
  %185 = load i8*, i8** %13, align 8
  %186 = load i64, i64* %20, align 8
  %187 = getelementptr inbounds i8, i8* %185, i64 %186
  %188 = load i8*, i8** %23, align 8
  %189 = load i64, i64* %24, align 8
  %190 = call i32 @memcmp(i8* %187, i8* %188, i64 %189) #15
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %184
  %193 = load i8, i8* %27, align 1
  %194 = trunc i8 %193 to i1
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  br label %1086

196:                                              ; preds = %192
  store i8 1, i8* %33, align 1
  br label %197

197:                                              ; preds = %196, %184, %181, %164, %161, %158
  %198 = load i8*, i8** %13, align 8
  %199 = load i64, i64* %20, align 8
  %200 = getelementptr inbounds i8, i8* %198, i64 %199
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %31, align 1
  %202 = load i8, i8* %31, align 1
  %203 = zext i8 %202 to i32
  switch i32 %203, label %544 [
    i32 0, label %204
    i32 63, label %325
    i32 7, label %421
    i32 8, label %422
    i32 12, label %423
    i32 10, label %424
    i32 13, label %425
    i32 9, label %426
    i32 11, label %427
    i32 92, label %428
    i32 123, label %462
    i32 125, label %462
    i32 35, label %476
    i32 126, label %476
    i32 32, label %481
    i32 33, label %482
    i32 34, label %482
    i32 36, label %482
    i32 38, label %482
    i32 40, label %482
    i32 41, label %482
    i32 42, label %482
    i32 59, label %482
    i32 60, label %482
    i32 61, label %482
    i32 62, label %482
    i32 91, label %482
    i32 94, label %482
    i32 96, label %482
    i32 124, label %482
    i32 39, label %490
    i32 37, label %543
    i32 43, label %543
    i32 44, label %543
    i32 45, label %543
    i32 46, label %543
    i32 47, label %543
    i32 48, label %543
    i32 49, label %543
    i32 50, label %543
    i32 51, label %543
    i32 52, label %543
    i32 53, label %543
    i32 54, label %543
    i32 55, label %543
    i32 56, label %543
    i32 57, label %543
    i32 58, label %543
    i32 65, label %543
    i32 66, label %543
    i32 67, label %543
    i32 68, label %543
    i32 69, label %543
    i32 70, label %543
    i32 71, label %543
    i32 72, label %543
    i32 73, label %543
    i32 74, label %543
    i32 75, label %543
    i32 76, label %543
    i32 77, label %543
    i32 78, label %543
    i32 79, label %543
    i32 80, label %543
    i32 81, label %543
    i32 82, label %543
    i32 83, label %543
    i32 84, label %543
    i32 85, label %543
    i32 86, label %543
    i32 87, label %543
    i32 88, label %543
    i32 89, label %543
    i32 90, label %543
    i32 93, label %543
    i32 95, label %543
    i32 97, label %543
    i32 98, label %543
    i32 99, label %543
    i32 100, label %543
    i32 101, label %543
    i32 102, label %543
    i32 103, label %543
    i32 104, label %543
    i32 105, label %543
    i32 106, label %543
    i32 107, label %543
    i32 108, label %543
    i32 109, label %543
    i32 110, label %543
    i32 111, label %543
    i32 112, label %543
    i32 113, label %543
    i32 114, label %543
    i32 115, label %543
    i32 116, label %543
    i32 117, label %543
    i32 118, label %543
    i32 119, label %543
    i32 120, label %543
    i32 121, label %543
    i32 122, label %543
  ]

204:                                              ; preds = %197
  %205 = load i8, i8* %25, align 1
  %206 = trunc i8 %205 to i1
  br i1 %206, label %207, label %318

207:                                              ; preds = %204
  br label %208

208:                                              ; preds = %207
  %209 = load i8, i8* %27, align 1
  %210 = trunc i8 %209 to i1
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  br label %1086

212:                                              ; preds = %208
  store i8 1, i8* %34, align 1
  %213 = load i32, i32* %15, align 4
  %214 = icmp eq i32 %213, 2
  br i1 %214, label %215, label %255

215:                                              ; preds = %212
  %216 = load i8, i8* %28, align 1
  %217 = trunc i8 %216 to i1
  br i1 %217, label %255, label %218

218:                                              ; preds = %215
  br label %219

219:                                              ; preds = %218
  %220 = load i64, i64* %21, align 8
  %221 = load i64, i64* %12, align 8
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %223, label %227

223:                                              ; preds = %219
  %224 = load i8*, i8** %11, align 8
  %225 = load i64, i64* %21, align 8
  %226 = getelementptr inbounds i8, i8* %224, i64 %225
  store i8 39, i8* %226, align 1
  br label %227

227:                                              ; preds = %223, %219
  %228 = load i64, i64* %21, align 8
  %229 = add i64 %228, 1
  store i64 %229, i64* %21, align 8
  br label %230

230:                                              ; preds = %227
  br label %231

231:                                              ; preds = %230
  %232 = load i64, i64* %21, align 8
  %233 = load i64, i64* %12, align 8
  %234 = icmp ult i64 %232, %233
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = load i8*, i8** %11, align 8
  %237 = load i64, i64* %21, align 8
  %238 = getelementptr inbounds i8, i8* %236, i64 %237
  store i8 36, i8* %238, align 1
  br label %239

239:                                              ; preds = %235, %231
  %240 = load i64, i64* %21, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %21, align 8
  br label %242

242:                                              ; preds = %239
  br label %243

243:                                              ; preds = %242
  %244 = load i64, i64* %21, align 8
  %245 = load i64, i64* %12, align 8
  %246 = icmp ult i64 %244, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %243
  %248 = load i8*, i8** %11, align 8
  %249 = load i64, i64* %21, align 8
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  store i8 39, i8* %250, align 1
  br label %251

251:                                              ; preds = %247, %243
  %252 = load i64, i64* %21, align 8
  %253 = add i64 %252, 1
  store i64 %253, i64* %21, align 8
  br label %254

254:                                              ; preds = %251
  store i8 1, i8* %28, align 1
  br label %255

255:                                              ; preds = %254, %215, %212
  br label %256

256:                                              ; preds = %255
  %257 = load i64, i64* %21, align 8
  %258 = load i64, i64* %12, align 8
  %259 = icmp ult i64 %257, %258
  br i1 %259, label %260, label %264

260:                                              ; preds = %256
  %261 = load i8*, i8** %11, align 8
  %262 = load i64, i64* %21, align 8
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  store i8 92, i8* %263, align 1
  br label %264

264:                                              ; preds = %260, %256
  %265 = load i64, i64* %21, align 8
  %266 = add i64 %265, 1
  store i64 %266, i64* %21, align 8
  br label %267

267:                                              ; preds = %264
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %15, align 4
  %270 = icmp ne i32 %269, 2
  br i1 %270, label %271, label %317

271:                                              ; preds = %268
  %272 = load i64, i64* %20, align 8
  %273 = add i64 %272, 1
  %274 = load i64, i64* %14, align 8
  %275 = icmp ult i64 %273, %274
  br i1 %275, label %276, label %317

276:                                              ; preds = %271
  %277 = load i8*, i8** %13, align 8
  %278 = load i64, i64* %20, align 8
  %279 = add i64 %278, 1
  %280 = getelementptr inbounds i8, i8* %277, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = sext i8 %281 to i32
  %283 = icmp sle i32 48, %282
  br i1 %283, label %284, label %317

284:                                              ; preds = %276
  %285 = load i8*, i8** %13, align 8
  %286 = load i64, i64* %20, align 8
  %287 = add i64 %286, 1
  %288 = getelementptr inbounds i8, i8* %285, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = sext i8 %289 to i32
  %291 = icmp sle i32 %290, 57
  br i1 %291, label %292, label %317

292:                                              ; preds = %284
  br label %293

293:                                              ; preds = %292
  %294 = load i64, i64* %21, align 8
  %295 = load i64, i64* %12, align 8
  %296 = icmp ult i64 %294, %295
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = load i8*, i8** %11, align 8
  %299 = load i64, i64* %21, align 8
  %300 = getelementptr inbounds i8, i8* %298, i64 %299
  store i8 48, i8* %300, align 1
  br label %301

301:                                              ; preds = %297, %293
  %302 = load i64, i64* %21, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %21, align 8
  br label %304

304:                                              ; preds = %301
  br label %305

305:                                              ; preds = %304
  %306 = load i64, i64* %21, align 8
  %307 = load i64, i64* %12, align 8
  %308 = icmp ult i64 %306, %307
  br i1 %308, label %309, label %313

309:                                              ; preds = %305
  %310 = load i8*, i8** %11, align 8
  %311 = load i64, i64* %21, align 8
  %312 = getelementptr inbounds i8, i8* %310, i64 %311
  store i8 48, i8* %312, align 1
  br label %313

313:                                              ; preds = %309, %305
  %314 = load i64, i64* %21, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %21, align 8
  br label %316

316:                                              ; preds = %313
  br label %317

317:                                              ; preds = %316, %284, %276, %271, %268
  store i8 48, i8* %31, align 1
  br label %324

318:                                              ; preds = %204
  %319 = load i32, i32* %16, align 4
  %320 = and i32 %319, 1
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %318
  br label %1001

323:                                              ; preds = %318
  br label %324

324:                                              ; preds = %323, %317
  br label %857

325:                                              ; preds = %197
  %326 = load i32, i32* %15, align 4
  switch i32 %326, label %419 [
    i32 2, label %327
    i32 5, label %332
  ]

327:                                              ; preds = %325
  %328 = load i8, i8* %27, align 1
  %329 = trunc i8 %328 to i1
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  br label %1086

331:                                              ; preds = %327
  br label %420

332:                                              ; preds = %325
  %333 = load i32, i32* %16, align 4
  %334 = and i32 %333, 4
  %335 = icmp ne i32 %334, 0
  br i1 %335, label %336, label %418

336:                                              ; preds = %332
  %337 = load i64, i64* %20, align 8
  %338 = add i64 %337, 2
  %339 = load i64, i64* %14, align 8
  %340 = icmp ult i64 %338, %339
  br i1 %340, label %341, label %418

341:                                              ; preds = %336
  %342 = load i8*, i8** %13, align 8
  %343 = load i64, i64* %20, align 8
  %344 = add i64 %343, 1
  %345 = getelementptr inbounds i8, i8* %342, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = sext i8 %346 to i32
  %348 = icmp eq i32 %347, 63
  br i1 %348, label %349, label %418

349:                                              ; preds = %341
  %350 = load i8*, i8** %13, align 8
  %351 = load i64, i64* %20, align 8
  %352 = add i64 %351, 2
  %353 = getelementptr inbounds i8, i8* %350, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = sext i8 %354 to i32
  switch i32 %355, label %416 [
    i32 33, label %356
    i32 39, label %356
    i32 40, label %356
    i32 41, label %356
    i32 45, label %356
    i32 47, label %356
    i32 60, label %356
    i32 61, label %356
    i32 62, label %356
  ]

356:                                              ; preds = %349, %349, %349, %349, %349, %349, %349, %349, %349
  %357 = load i8, i8* %27, align 1
  %358 = trunc i8 %357 to i1
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  br label %1086

360:                                              ; preds = %356
  %361 = load i8*, i8** %13, align 8
  %362 = load i64, i64* %20, align 8
  %363 = add i64 %362, 2
  %364 = getelementptr inbounds i8, i8* %361, i64 %363
  %365 = load i8, i8* %364, align 1
  store i8 %365, i8* %31, align 1
  %366 = load i64, i64* %20, align 8
  %367 = add i64 %366, 2
  store i64 %367, i64* %20, align 8
  br label %368

368:                                              ; preds = %360
  %369 = load i64, i64* %21, align 8
  %370 = load i64, i64* %12, align 8
  %371 = icmp ult i64 %369, %370
  br i1 %371, label %372, label %376

372:                                              ; preds = %368
  %373 = load i8*, i8** %11, align 8
  %374 = load i64, i64* %21, align 8
  %375 = getelementptr inbounds i8, i8* %373, i64 %374
  store i8 63, i8* %375, align 1
  br label %376

376:                                              ; preds = %372, %368
  %377 = load i64, i64* %21, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %21, align 8
  br label %379

379:                                              ; preds = %376
  br label %380

380:                                              ; preds = %379
  %381 = load i64, i64* %21, align 8
  %382 = load i64, i64* %12, align 8
  %383 = icmp ult i64 %381, %382
  br i1 %383, label %384, label %388

384:                                              ; preds = %380
  %385 = load i8*, i8** %11, align 8
  %386 = load i64, i64* %21, align 8
  %387 = getelementptr inbounds i8, i8* %385, i64 %386
  store i8 34, i8* %387, align 1
  br label %388

388:                                              ; preds = %384, %380
  %389 = load i64, i64* %21, align 8
  %390 = add i64 %389, 1
  store i64 %390, i64* %21, align 8
  br label %391

391:                                              ; preds = %388
  br label %392

392:                                              ; preds = %391
  %393 = load i64, i64* %21, align 8
  %394 = load i64, i64* %12, align 8
  %395 = icmp ult i64 %393, %394
  br i1 %395, label %396, label %400

396:                                              ; preds = %392
  %397 = load i8*, i8** %11, align 8
  %398 = load i64, i64* %21, align 8
  %399 = getelementptr inbounds i8, i8* %397, i64 %398
  store i8 34, i8* %399, align 1
  br label %400

400:                                              ; preds = %396, %392
  %401 = load i64, i64* %21, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %21, align 8
  br label %403

403:                                              ; preds = %400
  br label %404

404:                                              ; preds = %403
  %405 = load i64, i64* %21, align 8
  %406 = load i64, i64* %12, align 8
  %407 = icmp ult i64 %405, %406
  br i1 %407, label %408, label %412

408:                                              ; preds = %404
  %409 = load i8*, i8** %11, align 8
  %410 = load i64, i64* %21, align 8
  %411 = getelementptr inbounds i8, i8* %409, i64 %410
  store i8 63, i8* %411, align 1
  br label %412

412:                                              ; preds = %408, %404
  %413 = load i64, i64* %21, align 8
  %414 = add i64 %413, 1
  store i64 %414, i64* %21, align 8
  br label %415

415:                                              ; preds = %412
  br label %417

416:                                              ; preds = %349
  br label %417

417:                                              ; preds = %416, %415
  br label %418

418:                                              ; preds = %417, %341, %336, %332
  br label %420

419:                                              ; preds = %325
  br label %420

420:                                              ; preds = %419, %418, %331
  br label %857

421:                                              ; preds = %197
  store i8 97, i8* %32, align 1
  br label %456

422:                                              ; preds = %197
  store i8 98, i8* %32, align 1
  br label %456

423:                                              ; preds = %197
  store i8 102, i8* %32, align 1
  br label %456

424:                                              ; preds = %197
  store i8 110, i8* %32, align 1
  br label %448

425:                                              ; preds = %197
  store i8 114, i8* %32, align 1
  br label %448

426:                                              ; preds = %197
  store i8 116, i8* %32, align 1
  br label %448

427:                                              ; preds = %197
  store i8 118, i8* %32, align 1
  br label %456

428:                                              ; preds = %197
  %429 = load i8, i8* %31, align 1
  store i8 %429, i8* %32, align 1
  %430 = load i32, i32* %15, align 4
  %431 = icmp eq i32 %430, 2
  br i1 %431, label %432, label %437

432:                                              ; preds = %428
  %433 = load i8, i8* %27, align 1
  %434 = trunc i8 %433 to i1
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  br label %1086

436:                                              ; preds = %432
  br label %950

437:                                              ; preds = %428
  %438 = load i8, i8* %25, align 1
  %439 = trunc i8 %438 to i1
  br i1 %439, label %440, label %447

440:                                              ; preds = %437
  %441 = load i8, i8* %27, align 1
  %442 = trunc i8 %441 to i1
  br i1 %442, label %443, label %447

443:                                              ; preds = %440
  %444 = load i64, i64* %24, align 8
  %445 = icmp ne i64 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  br label %950

447:                                              ; preds = %443, %440, %437
  br label %448

448:                                              ; preds = %447, %426, %425, %424
  %449 = load i32, i32* %15, align 4
  %450 = icmp eq i32 %449, 2
  br i1 %450, label %451, label %455

451:                                              ; preds = %448
  %452 = load i8, i8* %27, align 1
  %453 = trunc i8 %452 to i1
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  br label %1086

455:                                              ; preds = %451, %448
  br label %456

456:                                              ; preds = %455, %427, %423, %422, %421
  %457 = load i8, i8* %25, align 1
  %458 = trunc i8 %457 to i1
  br i1 %458, label %459, label %461

459:                                              ; preds = %456
  %460 = load i8, i8* %32, align 1
  store i8 %460, i8* %31, align 1
  br label %888

461:                                              ; preds = %456
  br label %857

462:                                              ; preds = %197, %197
  %463 = load i64, i64* %14, align 8
  %464 = icmp eq i64 %463, -1
  br i1 %464, label %465, label %471

465:                                              ; preds = %462
  %466 = load i8*, i8** %13, align 8
  %467 = getelementptr inbounds i8, i8* %466, i64 1
  %468 = load i8, i8* %467, align 1
  %469 = sext i8 %468 to i32
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %475, label %474

471:                                              ; preds = %462
  %472 = load i64, i64* %14, align 8
  %473 = icmp eq i64 %472, 1
  br i1 %473, label %475, label %474

474:                                              ; preds = %471, %465
  br label %857

475:                                              ; preds = %471, %465
  br label %476

476:                                              ; preds = %475, %197, %197
  %477 = load i64, i64* %20, align 8
  %478 = icmp ne i64 %477, 0
  br i1 %478, label %479, label %480

479:                                              ; preds = %476
  br label %857

480:                                              ; preds = %476
  br label %481

481:                                              ; preds = %480, %197
  store i8 1, i8* %35, align 1
  br label %482

482:                                              ; preds = %481, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  %483 = load i32, i32* %15, align 4
  %484 = icmp eq i32 %483, 2
  br i1 %484, label %485, label %489

485:                                              ; preds = %482
  %486 = load i8, i8* %27, align 1
  %487 = trunc i8 %486 to i1
  br i1 %487, label %488, label %489

488:                                              ; preds = %485
  br label %1086

489:                                              ; preds = %485, %482
  br label %857

490:                                              ; preds = %197
  store i8 1, i8* %29, align 1
  store i8 1, i8* %35, align 1
  %491 = load i32, i32* %15, align 4
  %492 = icmp eq i32 %491, 2
  br i1 %492, label %493, label %542

493:                                              ; preds = %490
  %494 = load i8, i8* %27, align 1
  %495 = trunc i8 %494 to i1
  br i1 %495, label %496, label %497

496:                                              ; preds = %493
  br label %1086

497:                                              ; preds = %493
  %498 = load i64, i64* %12, align 8
  %499 = icmp ne i64 %498, 0
  br i1 %499, label %500, label %505

500:                                              ; preds = %497
  %501 = load i64, i64* %22, align 8
  %502 = icmp ne i64 %501, 0
  br i1 %502, label %505, label %503

503:                                              ; preds = %500
  %504 = load i64, i64* %12, align 8
  store i64 %504, i64* %22, align 8
  store i64 0, i64* %12, align 8
  br label %505

505:                                              ; preds = %503, %500, %497
  br label %506

506:                                              ; preds = %505
  %507 = load i64, i64* %21, align 8
  %508 = load i64, i64* %12, align 8
  %509 = icmp ult i64 %507, %508
  br i1 %509, label %510, label %514

510:                                              ; preds = %506
  %511 = load i8*, i8** %11, align 8
  %512 = load i64, i64* %21, align 8
  %513 = getelementptr inbounds i8, i8* %511, i64 %512
  store i8 39, i8* %513, align 1
  br label %514

514:                                              ; preds = %510, %506
  %515 = load i64, i64* %21, align 8
  %516 = add i64 %515, 1
  store i64 %516, i64* %21, align 8
  br label %517

517:                                              ; preds = %514
  br label %518

518:                                              ; preds = %517
  %519 = load i64, i64* %21, align 8
  %520 = load i64, i64* %12, align 8
  %521 = icmp ult i64 %519, %520
  br i1 %521, label %522, label %526

522:                                              ; preds = %518
  %523 = load i8*, i8** %11, align 8
  %524 = load i64, i64* %21, align 8
  %525 = getelementptr inbounds i8, i8* %523, i64 %524
  store i8 92, i8* %525, align 1
  br label %526

526:                                              ; preds = %522, %518
  %527 = load i64, i64* %21, align 8
  %528 = add i64 %527, 1
  store i64 %528, i64* %21, align 8
  br label %529

529:                                              ; preds = %526
  br label %530

530:                                              ; preds = %529
  %531 = load i64, i64* %21, align 8
  %532 = load i64, i64* %12, align 8
  %533 = icmp ult i64 %531, %532
  br i1 %533, label %534, label %538

534:                                              ; preds = %530
  %535 = load i8*, i8** %11, align 8
  %536 = load i64, i64* %21, align 8
  %537 = getelementptr inbounds i8, i8* %535, i64 %536
  store i8 39, i8* %537, align 1
  br label %538

538:                                              ; preds = %534, %530
  %539 = load i64, i64* %21, align 8
  %540 = add i64 %539, 1
  store i64 %540, i64* %21, align 8
  br label %541

541:                                              ; preds = %538
  store i8 0, i8* %28, align 1
  br label %542

542:                                              ; preds = %541, %490
  br label %857

543:                                              ; preds = %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197, %197
  store i8 1, i8* %35, align 1
  br label %857

544:                                              ; preds = %197
  %545 = load i8, i8* %26, align 1
  %546 = trunc i8 %545 to i1
  br i1 %546, label %547, label %559

547:                                              ; preds = %544
  store i64 1, i64* %36, align 8
  %548 = call i16** @__ctype_b_loc() #16
  %549 = load i16*, i16** %548, align 8
  %550 = load i8, i8* %31, align 1
  %551 = zext i8 %550 to i32
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds i16, i16* %549, i64 %552
  %554 = load i16, i16* %553, align 2
  %555 = zext i16 %554 to i32
  %556 = and i32 %555, 16384
  %557 = icmp ne i32 %556, 0
  %558 = zext i1 %557 to i8
  store i8 %558, i8* %37, align 1
  br label %656

559:                                              ; preds = %544
  %560 = bitcast %struct.__mbstate_t* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %560, i8 0, i64 8, i1 false)
  store i64 0, i64* %36, align 8
  store i8 1, i8* %37, align 1
  %561 = load i64, i64* %14, align 8
  %562 = icmp eq i64 %561, -1
  br i1 %562, label %563, label %566

563:                                              ; preds = %559
  %564 = load i8*, i8** %13, align 8
  %565 = call i64 @strlen(i8* %564) #15
  store i64 %565, i64* %14, align 8
  br label %566

566:                                              ; preds = %563, %559
  br label %567

567:                                              ; preds = %651, %566
  %568 = load i8*, i8** %13, align 8
  %569 = load i64, i64* %20, align 8
  %570 = load i64, i64* %36, align 8
  %571 = add i64 %569, %570
  %572 = getelementptr inbounds i8, i8* %568, i64 %571
  %573 = load i64, i64* %14, align 8
  %574 = load i64, i64* %20, align 8
  %575 = load i64, i64* %36, align 8
  %576 = add i64 %574, %575
  %577 = sub i64 %573, %576
  %578 = call i64 @rpl_mbrtowc(i32* %39, i8* %572, i64 %577, %struct.__mbstate_t* %38)
  store i64 %578, i64* %40, align 8
  %579 = load i64, i64* %40, align 8
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %567
  br label %655

582:                                              ; preds = %567
  %583 = load i64, i64* %40, align 8
  %584 = icmp eq i64 %583, -1
  br i1 %584, label %585, label %586

585:                                              ; preds = %582
  store i8 0, i8* %37, align 1
  br label %655

586:                                              ; preds = %582
  %587 = load i64, i64* %40, align 8
  %588 = icmp eq i64 %587, -2
  br i1 %588, label %589, label %611

589:                                              ; preds = %586
  store i8 0, i8* %37, align 1
  br label %590

590:                                              ; preds = %607, %589
  %591 = load i64, i64* %20, align 8
  %592 = load i64, i64* %36, align 8
  %593 = add i64 %591, %592
  %594 = load i64, i64* %14, align 8
  %595 = icmp ult i64 %593, %594
  br i1 %595, label %596, label %605

596:                                              ; preds = %590
  %597 = load i8*, i8** %13, align 8
  %598 = load i64, i64* %20, align 8
  %599 = load i64, i64* %36, align 8
  %600 = add i64 %598, %599
  %601 = getelementptr inbounds i8, i8* %597, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = sext i8 %602 to i32
  %604 = icmp ne i32 %603, 0
  br label %605

605:                                              ; preds = %596, %590
  %606 = phi i1 [ false, %590 ], [ %604, %596 ]
  br i1 %606, label %607, label %610

607:                                              ; preds = %605
  %608 = load i64, i64* %36, align 8
  %609 = add i64 %608, 1
  store i64 %609, i64* %36, align 8
  br label %590, !llvm.loop !43

610:                                              ; preds = %605
  br label %655

611:                                              ; preds = %586
  %612 = load i8, i8* %27, align 1
  %613 = trunc i8 %612 to i1
  br i1 %613, label %614, label %639

614:                                              ; preds = %611
  %615 = load i32, i32* %15, align 4
  %616 = icmp eq i32 %615, 2
  br i1 %616, label %617, label %639

617:                                              ; preds = %614
  store i64 1, i64* %41, align 8
  br label %618

618:                                              ; preds = %635, %617
  %619 = load i64, i64* %41, align 8
  %620 = load i64, i64* %40, align 8
  %621 = icmp ult i64 %619, %620
  br i1 %621, label %622, label %638

622:                                              ; preds = %618
  %623 = load i8*, i8** %13, align 8
  %624 = load i64, i64* %20, align 8
  %625 = load i64, i64* %36, align 8
  %626 = add i64 %624, %625
  %627 = load i64, i64* %41, align 8
  %628 = add i64 %626, %627
  %629 = getelementptr inbounds i8, i8* %623, i64 %628
  %630 = load i8, i8* %629, align 1
  %631 = sext i8 %630 to i32
  switch i32 %631, label %633 [
    i32 91, label %632
    i32 92, label %632
    i32 94, label %632
    i32 96, label %632
    i32 124, label %632
  ]

632:                                              ; preds = %622, %622, %622, %622, %622
  br label %1086

633:                                              ; preds = %622
  br label %634

634:                                              ; preds = %633
  br label %635

635:                                              ; preds = %634
  %636 = load i64, i64* %41, align 8
  %637 = add i64 %636, 1
  store i64 %637, i64* %41, align 8
  br label %618, !llvm.loop !44

638:                                              ; preds = %618
  br label %639

639:                                              ; preds = %638, %614, %611
  %640 = load i32, i32* %39, align 4
  %641 = call i32 @iswprint(i32 %640) #13
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %644, label %643

643:                                              ; preds = %639
  store i8 0, i8* %37, align 1
  br label %644

644:                                              ; preds = %643, %639
  %645 = load i64, i64* %40, align 8
  %646 = load i64, i64* %36, align 8
  %647 = add i64 %646, %645
  store i64 %647, i64* %36, align 8
  br label %648

648:                                              ; preds = %644
  br label %649

649:                                              ; preds = %648
  br label %650

650:                                              ; preds = %649
  br label %651

651:                                              ; preds = %650
  %652 = call i32 @mbsinit(%struct.__mbstate_t* %38) #15
  %653 = icmp ne i32 %652, 0
  %654 = xor i1 %653, true
  br i1 %654, label %567, label %655, !llvm.loop !45

655:                                              ; preds = %651, %610, %585, %581
  br label %656

656:                                              ; preds = %655, %547
  %657 = load i8, i8* %37, align 1
  %658 = trunc i8 %657 to i1
  %659 = zext i1 %658 to i8
  store i8 %659, i8* %35, align 1
  %660 = load i64, i64* %36, align 8
  %661 = icmp ult i64 1, %660
  br i1 %661, label %668, label %662

662:                                              ; preds = %656
  %663 = load i8, i8* %25, align 1
  %664 = trunc i8 %663 to i1
  br i1 %664, label %665, label %856

665:                                              ; preds = %662
  %666 = load i8, i8* %37, align 1
  %667 = trunc i8 %666 to i1
  br i1 %667, label %856, label %668

668:                                              ; preds = %665, %656
  %669 = load i64, i64* %20, align 8
  %670 = load i64, i64* %36, align 8
  %671 = add i64 %669, %670
  store i64 %671, i64* %42, align 8
  br label %672

672:                                              ; preds = %849, %668
  %673 = load i8, i8* %25, align 1
  %674 = trunc i8 %673 to i1
  br i1 %674, label %675, label %780

675:                                              ; preds = %672
  %676 = load i8, i8* %37, align 1
  %677 = trunc i8 %676 to i1
  br i1 %677, label %780, label %678

678:                                              ; preds = %675
  br label %679

679:                                              ; preds = %678
  %680 = load i8, i8* %27, align 1
  %681 = trunc i8 %680 to i1
  br i1 %681, label %682, label %683

682:                                              ; preds = %679
  br label %1086

683:                                              ; preds = %679
  store i8 1, i8* %34, align 1
  %684 = load i32, i32* %15, align 4
  %685 = icmp eq i32 %684, 2
  br i1 %685, label %686, label %726

686:                                              ; preds = %683
  %687 = load i8, i8* %28, align 1
  %688 = trunc i8 %687 to i1
  br i1 %688, label %726, label %689

689:                                              ; preds = %686
  br label %690

690:                                              ; preds = %689
  %691 = load i64, i64* %21, align 8
  %692 = load i64, i64* %12, align 8
  %693 = icmp ult i64 %691, %692
  br i1 %693, label %694, label %698

694:                                              ; preds = %690
  %695 = load i8*, i8** %11, align 8
  %696 = load i64, i64* %21, align 8
  %697 = getelementptr inbounds i8, i8* %695, i64 %696
  store i8 39, i8* %697, align 1
  br label %698

698:                                              ; preds = %694, %690
  %699 = load i64, i64* %21, align 8
  %700 = add i64 %699, 1
  store i64 %700, i64* %21, align 8
  br label %701

701:                                              ; preds = %698
  br label %702

702:                                              ; preds = %701
  %703 = load i64, i64* %21, align 8
  %704 = load i64, i64* %12, align 8
  %705 = icmp ult i64 %703, %704
  br i1 %705, label %706, label %710

706:                                              ; preds = %702
  %707 = load i8*, i8** %11, align 8
  %708 = load i64, i64* %21, align 8
  %709 = getelementptr inbounds i8, i8* %707, i64 %708
  store i8 36, i8* %709, align 1
  br label %710

710:                                              ; preds = %706, %702
  %711 = load i64, i64* %21, align 8
  %712 = add i64 %711, 1
  store i64 %712, i64* %21, align 8
  br label %713

713:                                              ; preds = %710
  br label %714

714:                                              ; preds = %713
  %715 = load i64, i64* %21, align 8
  %716 = load i64, i64* %12, align 8
  %717 = icmp ult i64 %715, %716
  br i1 %717, label %718, label %722

718:                                              ; preds = %714
  %719 = load i8*, i8** %11, align 8
  %720 = load i64, i64* %21, align 8
  %721 = getelementptr inbounds i8, i8* %719, i64 %720
  store i8 39, i8* %721, align 1
  br label %722

722:                                              ; preds = %718, %714
  %723 = load i64, i64* %21, align 8
  %724 = add i64 %723, 1
  store i64 %724, i64* %21, align 8
  br label %725

725:                                              ; preds = %722
  store i8 1, i8* %28, align 1
  br label %726

726:                                              ; preds = %725, %686, %683
  br label %727

727:                                              ; preds = %726
  %728 = load i64, i64* %21, align 8
  %729 = load i64, i64* %12, align 8
  %730 = icmp ult i64 %728, %729
  br i1 %730, label %731, label %735

731:                                              ; preds = %727
  %732 = load i8*, i8** %11, align 8
  %733 = load i64, i64* %21, align 8
  %734 = getelementptr inbounds i8, i8* %732, i64 %733
  store i8 92, i8* %734, align 1
  br label %735

735:                                              ; preds = %731, %727
  %736 = load i64, i64* %21, align 8
  %737 = add i64 %736, 1
  store i64 %737, i64* %21, align 8
  br label %738

738:                                              ; preds = %735
  br label %739

739:                                              ; preds = %738
  br label %740

740:                                              ; preds = %739
  %741 = load i64, i64* %21, align 8
  %742 = load i64, i64* %12, align 8
  %743 = icmp ult i64 %741, %742
  br i1 %743, label %744, label %753

744:                                              ; preds = %740
  %745 = load i8, i8* %31, align 1
  %746 = zext i8 %745 to i32
  %747 = ashr i32 %746, 6
  %748 = add nsw i32 48, %747
  %749 = trunc i32 %748 to i8
  %750 = load i8*, i8** %11, align 8
  %751 = load i64, i64* %21, align 8
  %752 = getelementptr inbounds i8, i8* %750, i64 %751
  store i8 %749, i8* %752, align 1
  br label %753

753:                                              ; preds = %744, %740
  %754 = load i64, i64* %21, align 8
  %755 = add i64 %754, 1
  store i64 %755, i64* %21, align 8
  br label %756

756:                                              ; preds = %753
  br label %757

757:                                              ; preds = %756
  %758 = load i64, i64* %21, align 8
  %759 = load i64, i64* %12, align 8
  %760 = icmp ult i64 %758, %759
  br i1 %760, label %761, label %771

761:                                              ; preds = %757
  %762 = load i8, i8* %31, align 1
  %763 = zext i8 %762 to i32
  %764 = ashr i32 %763, 3
  %765 = and i32 %764, 7
  %766 = add nsw i32 48, %765
  %767 = trunc i32 %766 to i8
  %768 = load i8*, i8** %11, align 8
  %769 = load i64, i64* %21, align 8
  %770 = getelementptr inbounds i8, i8* %768, i64 %769
  store i8 %767, i8* %770, align 1
  br label %771

771:                                              ; preds = %761, %757
  %772 = load i64, i64* %21, align 8
  %773 = add i64 %772, 1
  store i64 %773, i64* %21, align 8
  br label %774

774:                                              ; preds = %771
  %775 = load i8, i8* %31, align 1
  %776 = zext i8 %775 to i32
  %777 = and i32 %776, 7
  %778 = add nsw i32 48, %777
  %779 = trunc i32 %778 to i8
  store i8 %779, i8* %31, align 1
  br label %797

780:                                              ; preds = %675, %672
  %781 = load i8, i8* %33, align 1
  %782 = trunc i8 %781 to i1
  br i1 %782, label %783, label %796

783:                                              ; preds = %780
  br label %784

784:                                              ; preds = %783
  %785 = load i64, i64* %21, align 8
  %786 = load i64, i64* %12, align 8
  %787 = icmp ult i64 %785, %786
  br i1 %787, label %788, label %792

788:                                              ; preds = %784
  %789 = load i8*, i8** %11, align 8
  %790 = load i64, i64* %21, align 8
  %791 = getelementptr inbounds i8, i8* %789, i64 %790
  store i8 92, i8* %791, align 1
  br label %792

792:                                              ; preds = %788, %784
  %793 = load i64, i64* %21, align 8
  %794 = add i64 %793, 1
  store i64 %794, i64* %21, align 8
  br label %795

795:                                              ; preds = %792
  store i8 0, i8* %33, align 1
  br label %796

796:                                              ; preds = %795, %780
  br label %797

797:                                              ; preds = %796, %774
  %798 = load i64, i64* %42, align 8
  %799 = load i64, i64* %20, align 8
  %800 = add i64 %799, 1
  %801 = icmp ule i64 %798, %800
  br i1 %801, label %802, label %803

802:                                              ; preds = %797
  br label %855

803:                                              ; preds = %797
  br label %804

804:                                              ; preds = %803
  %805 = load i8, i8* %28, align 1
  %806 = trunc i8 %805 to i1
  br i1 %806, label %807, label %835

807:                                              ; preds = %804
  %808 = load i8, i8* %34, align 1
  %809 = trunc i8 %808 to i1
  br i1 %809, label %835, label %810

810:                                              ; preds = %807
  br label %811

811:                                              ; preds = %810
  %812 = load i64, i64* %21, align 8
  %813 = load i64, i64* %12, align 8
  %814 = icmp ult i64 %812, %813
  br i1 %814, label %815, label %819

815:                                              ; preds = %811
  %816 = load i8*, i8** %11, align 8
  %817 = load i64, i64* %21, align 8
  %818 = getelementptr inbounds i8, i8* %816, i64 %817
  store i8 39, i8* %818, align 1
  br label %819

819:                                              ; preds = %815, %811
  %820 = load i64, i64* %21, align 8
  %821 = add i64 %820, 1
  store i64 %821, i64* %21, align 8
  br label %822

822:                                              ; preds = %819
  br label %823

823:                                              ; preds = %822
  %824 = load i64, i64* %21, align 8
  %825 = load i64, i64* %12, align 8
  %826 = icmp ult i64 %824, %825
  br i1 %826, label %827, label %831

827:                                              ; preds = %823
  %828 = load i8*, i8** %11, align 8
  %829 = load i64, i64* %21, align 8
  %830 = getelementptr inbounds i8, i8* %828, i64 %829
  store i8 39, i8* %830, align 1
  br label %831

831:                                              ; preds = %827, %823
  %832 = load i64, i64* %21, align 8
  %833 = add i64 %832, 1
  store i64 %833, i64* %21, align 8
  br label %834

834:                                              ; preds = %831
  store i8 0, i8* %28, align 1
  br label %835

835:                                              ; preds = %834, %807, %804
  br label %836

836:                                              ; preds = %835
  br label %837

837:                                              ; preds = %836
  %838 = load i64, i64* %21, align 8
  %839 = load i64, i64* %12, align 8
  %840 = icmp ult i64 %838, %839
  br i1 %840, label %841, label %846

841:                                              ; preds = %837
  %842 = load i8, i8* %31, align 1
  %843 = load i8*, i8** %11, align 8
  %844 = load i64, i64* %21, align 8
  %845 = getelementptr inbounds i8, i8* %843, i64 %844
  store i8 %842, i8* %845, align 1
  br label %846

846:                                              ; preds = %841, %837
  %847 = load i64, i64* %21, align 8
  %848 = add i64 %847, 1
  store i64 %848, i64* %21, align 8
  br label %849

849:                                              ; preds = %846
  %850 = load i8*, i8** %13, align 8
  %851 = load i64, i64* %20, align 8
  %852 = add i64 %851, 1
  store i64 %852, i64* %20, align 8
  %853 = getelementptr inbounds i8, i8* %850, i64 %852
  %854 = load i8, i8* %853, align 1
  store i8 %854, i8* %31, align 1
  br label %672

855:                                              ; preds = %802
  br label %950

856:                                              ; preds = %665, %662
  br label %857

857:                                              ; preds = %856, %543, %542, %489, %479, %474, %461, %420, %324
  %858 = load i8, i8* %25, align 1
  %859 = trunc i8 %858 to i1
  br i1 %859, label %860, label %863

860:                                              ; preds = %857
  %861 = load i32, i32* %15, align 4
  %862 = icmp ne i32 %861, 2
  br i1 %862, label %866, label %863

863:                                              ; preds = %860, %857
  %864 = load i8, i8* %27, align 1
  %865 = trunc i8 %864 to i1
  br i1 %865, label %866, label %883

866:                                              ; preds = %863, %860
  %867 = load i32*, i32** %17, align 8
  %868 = icmp ne i32* %867, null
  br i1 %868, label %869, label %883

869:                                              ; preds = %866
  %870 = load i32*, i32** %17, align 8
  %871 = load i8, i8* %31, align 1
  %872 = zext i8 %871 to i64
  %873 = udiv i64 %872, 32
  %874 = getelementptr inbounds i32, i32* %870, i64 %873
  %875 = load i32, i32* %874, align 4
  %876 = load i8, i8* %31, align 1
  %877 = zext i8 %876 to i64
  %878 = urem i64 %877, 32
  %879 = trunc i64 %878 to i32
  %880 = lshr i32 %875, %879
  %881 = and i32 %880, 1
  %882 = icmp ne i32 %881, 0
  br i1 %882, label %887, label %883

883:                                              ; preds = %869, %866, %863
  %884 = load i8, i8* %33, align 1
  %885 = trunc i8 %884 to i1
  br i1 %885, label %887, label %886

886:                                              ; preds = %883
  br label %950

887:                                              ; preds = %883, %869
  br label %888

888:                                              ; preds = %887, %459
  br label %889

889:                                              ; preds = %888
  %890 = load i8, i8* %27, align 1
  %891 = trunc i8 %890 to i1
  br i1 %891, label %892, label %893

892:                                              ; preds = %889
  br label %1086

893:                                              ; preds = %889
  store i8 1, i8* %34, align 1
  %894 = load i32, i32* %15, align 4
  %895 = icmp eq i32 %894, 2
  br i1 %895, label %896, label %936

896:                                              ; preds = %893
  %897 = load i8, i8* %28, align 1
  %898 = trunc i8 %897 to i1
  br i1 %898, label %936, label %899

899:                                              ; preds = %896
  br label %900

900:                                              ; preds = %899
  %901 = load i64, i64* %21, align 8
  %902 = load i64, i64* %12, align 8
  %903 = icmp ult i64 %901, %902
  br i1 %903, label %904, label %908

904:                                              ; preds = %900
  %905 = load i8*, i8** %11, align 8
  %906 = load i64, i64* %21, align 8
  %907 = getelementptr inbounds i8, i8* %905, i64 %906
  store i8 39, i8* %907, align 1
  br label %908

908:                                              ; preds = %904, %900
  %909 = load i64, i64* %21, align 8
  %910 = add i64 %909, 1
  store i64 %910, i64* %21, align 8
  br label %911

911:                                              ; preds = %908
  br label %912

912:                                              ; preds = %911
  %913 = load i64, i64* %21, align 8
  %914 = load i64, i64* %12, align 8
  %915 = icmp ult i64 %913, %914
  br i1 %915, label %916, label %920

916:                                              ; preds = %912
  %917 = load i8*, i8** %11, align 8
  %918 = load i64, i64* %21, align 8
  %919 = getelementptr inbounds i8, i8* %917, i64 %918
  store i8 36, i8* %919, align 1
  br label %920

920:                                              ; preds = %916, %912
  %921 = load i64, i64* %21, align 8
  %922 = add i64 %921, 1
  store i64 %922, i64* %21, align 8
  br label %923

923:                                              ; preds = %920
  br label %924

924:                                              ; preds = %923
  %925 = load i64, i64* %21, align 8
  %926 = load i64, i64* %12, align 8
  %927 = icmp ult i64 %925, %926
  br i1 %927, label %928, label %932

928:                                              ; preds = %924
  %929 = load i8*, i8** %11, align 8
  %930 = load i64, i64* %21, align 8
  %931 = getelementptr inbounds i8, i8* %929, i64 %930
  store i8 39, i8* %931, align 1
  br label %932

932:                                              ; preds = %928, %924
  %933 = load i64, i64* %21, align 8
  %934 = add i64 %933, 1
  store i64 %934, i64* %21, align 8
  br label %935

935:                                              ; preds = %932
  store i8 1, i8* %28, align 1
  br label %936

936:                                              ; preds = %935, %896, %893
  br label %937

937:                                              ; preds = %936
  %938 = load i64, i64* %21, align 8
  %939 = load i64, i64* %12, align 8
  %940 = icmp ult i64 %938, %939
  br i1 %940, label %941, label %945

941:                                              ; preds = %937
  %942 = load i8*, i8** %11, align 8
  %943 = load i64, i64* %21, align 8
  %944 = getelementptr inbounds i8, i8* %942, i64 %943
  store i8 92, i8* %944, align 1
  br label %945

945:                                              ; preds = %941, %937
  %946 = load i64, i64* %21, align 8
  %947 = add i64 %946, 1
  store i64 %947, i64* %21, align 8
  br label %948

948:                                              ; preds = %945
  br label %949

949:                                              ; preds = %948
  br label %950

950:                                              ; preds = %949, %886, %855, %446, %436
  br label %951

951:                                              ; preds = %950
  %952 = load i8, i8* %28, align 1
  %953 = trunc i8 %952 to i1
  br i1 %953, label %954, label %982

954:                                              ; preds = %951
  %955 = load i8, i8* %34, align 1
  %956 = trunc i8 %955 to i1
  br i1 %956, label %982, label %957

957:                                              ; preds = %954
  br label %958

958:                                              ; preds = %957
  %959 = load i64, i64* %21, align 8
  %960 = load i64, i64* %12, align 8
  %961 = icmp ult i64 %959, %960
  br i1 %961, label %962, label %966

962:                                              ; preds = %958
  %963 = load i8*, i8** %11, align 8
  %964 = load i64, i64* %21, align 8
  %965 = getelementptr inbounds i8, i8* %963, i64 %964
  store i8 39, i8* %965, align 1
  br label %966

966:                                              ; preds = %962, %958
  %967 = load i64, i64* %21, align 8
  %968 = add i64 %967, 1
  store i64 %968, i64* %21, align 8
  br label %969

969:                                              ; preds = %966
  br label %970

970:                                              ; preds = %969
  %971 = load i64, i64* %21, align 8
  %972 = load i64, i64* %12, align 8
  %973 = icmp ult i64 %971, %972
  br i1 %973, label %974, label %978

974:                                              ; preds = %970
  %975 = load i8*, i8** %11, align 8
  %976 = load i64, i64* %21, align 8
  %977 = getelementptr inbounds i8, i8* %975, i64 %976
  store i8 39, i8* %977, align 1
  br label %978

978:                                              ; preds = %974, %970
  %979 = load i64, i64* %21, align 8
  %980 = add i64 %979, 1
  store i64 %980, i64* %21, align 8
  br label %981

981:                                              ; preds = %978
  store i8 0, i8* %28, align 1
  br label %982

982:                                              ; preds = %981, %954, %951
  br label %983

983:                                              ; preds = %982
  br label %984

984:                                              ; preds = %983
  %985 = load i64, i64* %21, align 8
  %986 = load i64, i64* %12, align 8
  %987 = icmp ult i64 %985, %986
  br i1 %987, label %988, label %993

988:                                              ; preds = %984
  %989 = load i8, i8* %31, align 1
  %990 = load i8*, i8** %11, align 8
  %991 = load i64, i64* %21, align 8
  %992 = getelementptr inbounds i8, i8* %990, i64 %991
  store i8 %989, i8* %992, align 1
  br label %993

993:                                              ; preds = %988, %984
  %994 = load i64, i64* %21, align 8
  %995 = add i64 %994, 1
  store i64 %995, i64* %21, align 8
  br label %996

996:                                              ; preds = %993
  %997 = load i8, i8* %35, align 1
  %998 = trunc i8 %997 to i1
  br i1 %998, label %1000, label %999

999:                                              ; preds = %996
  store i8 0, i8* %30, align 1
  br label %1000

1000:                                             ; preds = %999, %996
  br label %1001

1001:                                             ; preds = %1000, %322
  %1002 = load i64, i64* %20, align 8
  %1003 = add i64 %1002, 1
  store i64 %1003, i64* %20, align 8
  br label %138, !llvm.loop !46

1004:                                             ; preds = %154
  %1005 = load i64, i64* %21, align 8
  %1006 = icmp eq i64 %1005, 0
  br i1 %1006, label %1007, label %1014

1007:                                             ; preds = %1004
  %1008 = load i32, i32* %15, align 4
  %1009 = icmp eq i32 %1008, 2
  br i1 %1009, label %1010, label %1014

1010:                                             ; preds = %1007
  %1011 = load i8, i8* %27, align 1
  %1012 = trunc i8 %1011 to i1
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1010
  br label %1086

1014:                                             ; preds = %1010, %1007, %1004
  %1015 = load i32, i32* %15, align 4
  %1016 = icmp eq i32 %1015, 2
  br i1 %1016, label %1017, label %1046

1017:                                             ; preds = %1014
  %1018 = load i8, i8* %27, align 1
  %1019 = trunc i8 %1018 to i1
  br i1 %1019, label %1046, label %1020

1020:                                             ; preds = %1017
  %1021 = load i8, i8* %29, align 1
  %1022 = trunc i8 %1021 to i1
  br i1 %1022, label %1023, label %1046

1023:                                             ; preds = %1020
  %1024 = load i8, i8* %30, align 1
  %1025 = trunc i8 %1024 to i1
  br i1 %1025, label %1026, label %1036

1026:                                             ; preds = %1023
  %1027 = load i8*, i8** %11, align 8
  %1028 = load i64, i64* %22, align 8
  %1029 = load i8*, i8** %13, align 8
  %1030 = load i64, i64* %14, align 8
  %1031 = load i32, i32* %16, align 4
  %1032 = load i32*, i32** %17, align 8
  %1033 = load i8*, i8** %18, align 8
  %1034 = load i8*, i8** %19, align 8
  %1035 = call i64 @quotearg_buffer_restyled(i8* %1027, i64 %1028, i8* %1029, i64 %1030, i32 5, i32 %1031, i32* %1032, i8* %1033, i8* %1034)
  store i64 %1035, i64* %10, align 8
  br label %1104

1036:                                             ; preds = %1023
  %1037 = load i64, i64* %12, align 8
  %1038 = icmp ne i64 %1037, 0
  br i1 %1038, label %1044, label %1039

1039:                                             ; preds = %1036
  %1040 = load i64, i64* %22, align 8
  %1041 = icmp ne i64 %1040, 0
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1039
  %1043 = load i64, i64* %22, align 8
  store i64 %1043, i64* %12, align 8
  store i64 0, i64* %21, align 8
  br label %50

1044:                                             ; preds = %1039, %1036
  br label %1045

1045:                                             ; preds = %1044
  br label %1046

1046:                                             ; preds = %1045, %1020, %1017, %1014
  %1047 = load i8*, i8** %23, align 8
  %1048 = icmp ne i8* %1047, null
  br i1 %1048, label %1049, label %1076

1049:                                             ; preds = %1046
  %1050 = load i8, i8* %27, align 1
  %1051 = trunc i8 %1050 to i1
  br i1 %1051, label %1076, label %1052

1052:                                             ; preds = %1049
  br label %1053

1053:                                             ; preds = %1072, %1052
  %1054 = load i8*, i8** %23, align 8
  %1055 = load i8, i8* %1054, align 1
  %1056 = icmp ne i8 %1055, 0
  br i1 %1056, label %1057, label %1075

1057:                                             ; preds = %1053
  br label %1058

1058:                                             ; preds = %1057
  %1059 = load i64, i64* %21, align 8
  %1060 = load i64, i64* %12, align 8
  %1061 = icmp ult i64 %1059, %1060
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1058
  %1063 = load i8*, i8** %23, align 8
  %1064 = load i8, i8* %1063, align 1
  %1065 = load i8*, i8** %11, align 8
  %1066 = load i64, i64* %21, align 8
  %1067 = getelementptr inbounds i8, i8* %1065, i64 %1066
  store i8 %1064, i8* %1067, align 1
  br label %1068

1068:                                             ; preds = %1062, %1058
  %1069 = load i64, i64* %21, align 8
  %1070 = add i64 %1069, 1
  store i64 %1070, i64* %21, align 8
  br label %1071

1071:                                             ; preds = %1068
  br label %1072

1072:                                             ; preds = %1071
  %1073 = load i8*, i8** %23, align 8
  %1074 = getelementptr inbounds i8, i8* %1073, i32 1
  store i8* %1074, i8** %23, align 8
  br label %1053, !llvm.loop !47

1075:                                             ; preds = %1053
  br label %1076

1076:                                             ; preds = %1075, %1049, %1046
  %1077 = load i64, i64* %21, align 8
  %1078 = load i64, i64* %12, align 8
  %1079 = icmp ult i64 %1077, %1078
  br i1 %1079, label %1080, label %1084

1080:                                             ; preds = %1076
  %1081 = load i8*, i8** %11, align 8
  %1082 = load i64, i64* %21, align 8
  %1083 = getelementptr inbounds i8, i8* %1081, i64 %1082
  store i8 0, i8* %1083, align 1
  br label %1084

1084:                                             ; preds = %1080, %1076
  %1085 = load i64, i64* %21, align 8
  store i64 %1085, i64* %10, align 8
  br label %1104

1086:                                             ; preds = %1013, %892, %682, %632, %496, %488, %454, %435, %359, %330, %211, %195
  %1087 = load i32, i32* %15, align 4
  %1088 = icmp eq i32 %1087, 2
  br i1 %1088, label %1089, label %1093

1089:                                             ; preds = %1086
  %1090 = load i8, i8* %25, align 1
  %1091 = trunc i8 %1090 to i1
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1089
  store i32 4, i32* %15, align 4
  br label %1093

1093:                                             ; preds = %1092, %1089, %1086
  %1094 = load i8*, i8** %11, align 8
  %1095 = load i64, i64* %12, align 8
  %1096 = load i8*, i8** %13, align 8
  %1097 = load i64, i64* %14, align 8
  %1098 = load i32, i32* %15, align 4
  %1099 = load i32, i32* %16, align 4
  %1100 = and i32 %1099, -3
  %1101 = load i8*, i8** %18, align 8
  %1102 = load i8*, i8** %19, align 8
  %1103 = call i64 @quotearg_buffer_restyled(i8* %1094, i64 %1095, i8* %1096, i64 %1097, i32 %1098, i32 %1100, i32* null, i8* %1101, i8* %1102)
  store i64 %1103, i64* %10, align 8
  br label %1104

1104:                                             ; preds = %1093, %1084, %1026
  %1105 = load i64, i64* %10, align 8
  ret i64 %1105
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load i8*, i8** %4, align 8
  %9 = call i8* @gettext(i8* %8) #13
  store i8* %9, i8** %6, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = icmp ne i8* %10, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %3, align 8
  br label %45

15:                                               ; preds = %2
  %16 = call i8* @locale_charset()
  store i8* %16, i8** %7, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = call i32 @c_strcasecmp(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.347, i64 0, i64 0)) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = load i8*, i8** %4, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 96
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.348, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.349, i64 0, i64 0)
  store i8* %27, i8** %3, align 8
  br label %45

28:                                               ; preds = %15
  %29 = load i8*, i8** %7, align 8
  %30 = call i32 @c_strcasecmp(i8* %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.350, i64 0, i64 0)) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %28
  %33 = load i8*, i8** %4, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 96
  %38 = zext i1 %37 to i64
  %39 = select i1 %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.351, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.352, i64 0, i64 0)
  store i8* %39, i8** %3, align 8
  br label %45

40:                                               ; preds = %28
  %41 = load i32, i32* %5, align 4
  %42 = icmp eq i32 %41, 9
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.344, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.346, i64 0, i64 0)
  store i8* %44, i8** %3, align 8
  br label %45

45:                                               ; preds = %40, %32, %20, %13
  %46 = load i8*, i8** %3, align 8
  ret i8* %46
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_style(i32 %0, i8* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @quotearg_n_style(i32 0, i32 %5, i8* %6)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct.quoting_options, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %8 = bitcast %struct.quoting_options* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false)
  %9 = load i8, i8* %6, align 1
  %10 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext %9, i32 1)
  %11 = load i8*, i8** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = call i8* @quotearg_n_options(i32 0, i8* %11, i64 %12, %struct.quoting_options* %7)
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_char(i8* %0, i8 signext %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load i8*, i8** %3, align 8
  %6 = load i8, i8* %4, align 1
  %7 = call i8* @quotearg_char_mem(i8* %5, i64 -1, i8 signext %6)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_colon(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @quotearg_char(i8* %3, i8 signext 58)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_style_colon(i32 %0, i32 %1, i8* %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.quoting_options, align 8
  %8 = alloca %struct.quoting_options, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = load i32, i32* %5, align 4
  call void @quoting_options_from_style(%struct.quoting_options* sret(%struct.quoting_options) align 8 %8, i32 %9)
  %10 = bitcast %struct.quoting_options* %7 to i8*
  %11 = bitcast %struct.quoting_options* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 56, i1 false)
  %12 = call i32 @set_char_quoting(%struct.quoting_options* %7, i8 signext 58, i32 1)
  %13 = load i32, i32* %4, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = call i8* @quotearg_n_options(i32 %13, i8* %14, i64 -1, %struct.quoting_options* %7)
  ret i8* %15
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n_mem(i32 %0, i8* %1, i64 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = call i8* @quotearg_n_options(i32 %7, i8* %8, i64 %9, %struct.quoting_options* @quote_quoting_options)
  ret i8* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote_n(i32 %0, i8* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @quote_n_mem(i32 %5, i8* %6, i64 -1)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quote(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i8* @quote_n(i32 0, i8* %3)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca %struct.stat, align 8
  %22 = alloca %struct.stat, align 8
  %23 = alloca i8, align 1
  store i32 %0, i32* %7, align 4
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i32 %4, i32* %11, align 4
  store i32 -1, i32* %12, align 4
  store i32 22, i32* %13, align 4
  %24 = load i32, i32* %7, align 4
  %25 = load i8*, i8** %8, align 8
  %26 = load i32, i32* %9, align 4
  %27 = load i8*, i8** %10, align 8
  %28 = load i32, i32* %11, align 4
  %29 = call i64 (i64, ...) @syscall(i64 316, i32 %24, i8* %25, i32 %26, i8* %27, i32 %28) #13
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %12, align 4
  %31 = call i32* @__errno_location() #16
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %13, align 4
  %33 = load i32, i32* %12, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %5
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 22
  br i1 %37, label %46, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %13, align 4
  %40 = icmp eq i32 %39, 38
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = load i32, i32* %13, align 4
  %43 = icmp eq i32 %42, 95
  br i1 %43, label %46, label %44

44:                                               ; preds = %41, %5
  %45 = load i32, i32* %12, align 4
  store i32 %45, i32* %6, align 4
  br label %193

46:                                               ; preds = %41, %38, %35
  %47 = load i8*, i8** %8, align 8
  store i8* %47, i8** %16, align 8
  %48 = load i8*, i8** %10, align 8
  store i8* %48, i8** %17, align 8
  store i32 20, i32* %20, align 4
  store i8 0, i8* %23, align 1
  %49 = load i32, i32* %11, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %75

51:                                               ; preds = %46
  %52 = load i32, i32* %11, align 4
  %53 = and i32 %52, -2
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = call i32 @errno_fail(i32 95)
  store i32 %56, i32* %6, align 4
  br label %193

57:                                               ; preds = %51
  %58 = load i32, i32* %9, align 4
  %59 = load i8*, i8** %10, align 8
  %60 = call i32 @lstatat(i32 %58, i8* %59, %struct.stat* %22)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = call i32* @__errno_location() #16
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 75
  br i1 %65, label %66, label %68

66:                                               ; preds = %62, %57
  %67 = call i32 @errno_fail(i32 17)
  store i32 %67, i32* %6, align 4
  br label %193

68:                                               ; preds = %62
  %69 = call i32* @__errno_location() #16
  %70 = load i32, i32* %69, align 4
  %71 = icmp ne i32 %70, 2
  br i1 %71, label %72, label %73

72:                                               ; preds = %68
  store i32 -1, i32* %6, align 4
  br label %193

73:                                               ; preds = %68
  store i8 1, i8* %23, align 1
  br label %74

74:                                               ; preds = %73
  br label %75

75:                                               ; preds = %74, %46
  %76 = load i8*, i8** %8, align 8
  %77 = call i64 @strlen(i8* %76) #15
  store i64 %77, i64* %14, align 8
  %78 = load i8*, i8** %10, align 8
  %79 = call i64 @strlen(i8* %78) #15
  store i64 %79, i64* %15, align 8
  %80 = load i64, i64* %14, align 8
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %75
  %83 = load i64, i64* %15, align 8
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %82, %75
  %86 = load i32, i32* %7, align 4
  %87 = load i8*, i8** %8, align 8
  %88 = load i32, i32* %9, align 4
  %89 = load i8*, i8** %10, align 8
  %90 = call i32 @renameat(i32 %86, i8* %87, i32 %88, i8* %89) #13
  store i32 %90, i32* %6, align 4
  br label %193

91:                                               ; preds = %82
  %92 = load i8*, i8** %8, align 8
  %93 = load i64, i64* %14, align 8
  %94 = sub i64 %93, 1
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  %98 = icmp eq i32 %97, 47
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %18, align 1
  %100 = load i8*, i8** %10, align 8
  %101 = load i64, i64* %15, align 8
  %102 = sub i64 %101, 1
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = icmp eq i32 %105, 47
  %107 = zext i1 %106 to i8
  store i8 %107, i8* %19, align 1
  %108 = load i8, i8* %18, align 1
  %109 = trunc i8 %108 to i1
  br i1 %109, label %119, label %110

110:                                              ; preds = %91
  %111 = load i8, i8* %19, align 1
  %112 = trunc i8 %111 to i1
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = load i32, i32* %7, align 4
  %115 = load i8*, i8** %8, align 8
  %116 = load i32, i32* %9, align 4
  %117 = load i8*, i8** %10, align 8
  %118 = call i32 @renameat(i32 %114, i8* %115, i32 %116, i8* %117) #13
  store i32 %118, i32* %6, align 4
  br label %193

119:                                              ; preds = %110, %91
  %120 = load i32, i32* %7, align 4
  %121 = load i8*, i8** %8, align 8
  %122 = call i32 @lstatat(i32 %120, i8* %121, %struct.stat* %21)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  store i32 -1, i32* %6, align 4
  br label %193

125:                                              ; preds = %119
  %126 = load i8, i8* %23, align 1
  %127 = trunc i8 %126 to i1
  br i1 %127, label %128, label %136

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 3
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 61440
  %132 = icmp eq i32 %131, 16384
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = call i32 @errno_fail(i32 2)
  store i32 %134, i32* %6, align 4
  br label %193

135:                                              ; preds = %128
  br label %169

136:                                              ; preds = %125
  %137 = load i32, i32* %9, align 4
  %138 = load i8*, i8** %10, align 8
  %139 = call i32 @lstatat(i32 %137, i8* %138, %struct.stat* %22)
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %152

141:                                              ; preds = %136
  %142 = call i32* @__errno_location() #16
  %143 = load i32, i32* %142, align 4
  %144 = icmp ne i32 %143, 2
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = and i32 %147, 61440
  %149 = icmp eq i32 %148, 16384
  br i1 %149, label %151, label %150

150:                                              ; preds = %145, %141
  store i32 -1, i32* %6, align 4
  br label %193

151:                                              ; preds = %145
  br label %168

152:                                              ; preds = %136
  %153 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 61440
  %156 = icmp eq i32 %155, 16384
  br i1 %156, label %159, label %157

157:                                              ; preds = %152
  %158 = call i32 @errno_fail(i32 20)
  store i32 %158, i32* %6, align 4
  br label %193

159:                                              ; preds = %152
  %160 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 61440
  %163 = icmp eq i32 %162, 16384
  br i1 %163, label %166, label %164

164:                                              ; preds = %159
  %165 = call i32 @errno_fail(i32 21)
  store i32 %165, i32* %6, align 4
  br label %193

166:                                              ; preds = %159
  br label %167

167:                                              ; preds = %166
  br label %168

168:                                              ; preds = %167, %151
  br label %169

169:                                              ; preds = %168, %135
  %170 = load i32, i32* %7, align 4
  %171 = load i8*, i8** %16, align 8
  %172 = load i32, i32* %9, align 4
  %173 = load i8*, i8** %17, align 8
  %174 = call i32 @renameat(i32 %170, i8* %171, i32 %172, i8* %173) #13
  store i32 %174, i32* %12, align 4
  %175 = call i32* @__errno_location() #16
  %176 = load i32, i32* %175, align 4
  store i32 %176, i32* %20, align 4
  br label %177

177:                                              ; preds = %169
  %178 = load i8*, i8** %16, align 8
  %179 = load i8*, i8** %8, align 8
  %180 = icmp ne i8* %178, %179
  br i1 %180, label %181, label %183

181:                                              ; preds = %177
  %182 = load i8*, i8** %16, align 8
  call void @free(i8* %182) #13
  br label %183

183:                                              ; preds = %181, %177
  %184 = load i8*, i8** %17, align 8
  %185 = load i8*, i8** %10, align 8
  %186 = icmp ne i8* %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = load i8*, i8** %17, align 8
  call void @free(i8* %188) #13
  br label %189

189:                                              ; preds = %187, %183
  %190 = load i32, i32* %20, align 4
  %191 = call i32* @__errno_location() #16
  store i32 %190, i32* %191, align 4
  %192 = load i32, i32* %12, align 4
  store i32 %192, i32* %6, align 4
  br label %193

193:                                              ; preds = %189, %164, %157, %150, %133, %124, %113, %85, %72, %66, %55, %44
  %194 = load i32, i32* %6, align 4
  ret i32 %194
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %0) #3 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32* @__errno_location() #16
  store i32 %3, i32* %4, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @safe_write(i32 %0, i8* %1, i64 %2) #3 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  br label %9

9:                                                ; preds = %35, %22, %3
  %10 = load i32, i32* %5, align 4
  %11 = load i8*, i8** %6, align 8
  %12 = load i64, i64* %7, align 8
  %13 = call i64 @write(i32 %10, i8* %11, i64 %12)
  store i64 %13, i64* %8, align 8
  %14 = load i64, i64* %8, align 8
  %15 = icmp sle i64 0, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %9
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4, align 8
  br label %36

18:                                               ; preds = %9
  %19 = call i32* @__errno_location() #16
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  br label %9

23:                                               ; preds = %18
  %24 = call i32* @__errno_location() #16
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 22
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load i64, i64* %7, align 8
  %29 = icmp ult i64 2146435072, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store i64 2146435072, i64* %7, align 8
  br label %33

31:                                               ; preds = %27, %23
  %32 = load i64, i64* %8, align 8
  store i64 %32, i64* %4, align 8
  br label %36

33:                                               ; preds = %30
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  br label %9

36:                                               ; preds = %31, %16
  %37 = load i64, i64* %4, align 8
  ret i64 %37
}

declare dso_local i64 @write(i32, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_name(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call zeroext i1 @same_nameat(i32 -100, i8* %5, i32 -100, i8* %6)
  ret i1 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_nameat(i32 %0, i8* %1, i32 %2, i8* %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %struct.stat, align 8
  %17 = alloca %struct.stat, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %21 = load i8*, i8** %6, align 8
  %22 = call i8* @last_component(i8* %21) #15
  store i8* %22, i8** %9, align 8
  %23 = load i8*, i8** %8, align 8
  %24 = call i8* @last_component(i8* %23) #15
  store i8* %24, i8** %10, align 8
  %25 = load i8*, i8** %9, align 8
  %26 = call i64 @base_len(i8* %25) #15
  store i64 %26, i64* %11, align 8
  %27 = load i8*, i8** %10, align 8
  %28 = call i64 @base_len(i8* %27) #15
  store i64 %28, i64* %12, align 8
  %29 = load i64, i64* %11, align 8
  %30 = load i64, i64* %12, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %4
  %33 = load i8*, i8** %9, align 8
  %34 = load i8*, i8** %10, align 8
  %35 = load i64, i64* %12, align 8
  %36 = call i32 @memcmp(i8* %33, i8* %34, i64 %35) #15
  %37 = icmp eq i32 %36, 0
  br label %38

38:                                               ; preds = %32, %4
  %39 = phi i1 [ false, %4 ], [ %37, %32 ]
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %13, align 1
  %41 = load i8, i8* %13, align 1
  %42 = trunc i8 %41 to i1
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %14, align 1
  store i8 0, i8* %15, align 1
  %44 = load i8, i8* %14, align 1
  %45 = trunc i8 %44 to i1
  br i1 %45, label %46, label %87

46:                                               ; preds = %38
  %47 = load i8*, i8** %6, align 8
  %48 = call i8* @dir_name(i8* %47)
  store i8* %48, i8** %18, align 8
  store i32 256, i32* %19, align 4
  %49 = load i32, i32* %5, align 4
  %50 = load i8*, i8** %18, align 8
  %51 = load i32, i32* %19, align 4
  %52 = call i32 @fstatat(i32 %49, i8* %50, %struct.stat* %16, i32 %51) #13
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %46
  %55 = call i32* @__errno_location() #16
  %56 = load i32, i32* %55, align 4
  %57 = load i8*, i8** %18, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.369, i64 0, i64 0), i8* %57)
  br label %58

58:                                               ; preds = %54, %46
  %59 = load i8*, i8** %18, align 8
  call void @free(i8* %59) #13
  %60 = load i8*, i8** %8, align 8
  %61 = call i8* @dir_name(i8* %60)
  store i8* %61, i8** %20, align 8
  %62 = load i32, i32* %7, align 4
  %63 = load i8*, i8** %20, align 8
  %64 = load i32, i32* %19, align 4
  %65 = call i32 @fstatat(i32 %62, i8* %63, %struct.stat* %17, i32 %64) #13
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %58
  %68 = call i32* @__errno_location() #16
  %69 = load i32, i32* %68, align 4
  %70 = load i8*, i8** %20, align 8
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.369, i64 0, i64 0), i8* %70)
  br label %71

71:                                               ; preds = %67, %58
  %72 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %79, %81
  br label %83

83:                                               ; preds = %77, %71
  %84 = phi i1 [ false, %71 ], [ %82, %77 ]
  %85 = zext i1 %84 to i8
  store i8 %85, i8* %15, align 1
  %86 = load i8*, i8** %20, align 8
  call void @free(i8* %86) #13
  br label %87

87:                                               ; preds = %83, %38
  %88 = load i8, i8* %15, align 1
  %89 = trunc i8 %88 to i1
  ret i1 %89
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @streamsavedir(%struct.__dirstream* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.__dirstream*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.direntry_t*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32 (i8*, i8*)*, align 8
  %14 = alloca %struct.dirent*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i8*, align 8
  store %struct.__dirstream* %0, %struct.__dirstream** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* null, i8** %6, align 8
  store i64 0, i64* %7, align 8
  store %struct.direntry_t* null, %struct.direntry_t** %8, align 8
  store i64 0, i64* %9, align 8
  store i64 0, i64* %10, align 8
  store i64 0, i64* %11, align 8
  %21 = load i32, i32* %5, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %22
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %23, align 8
  store i32 (i8*, i8*)* %24, i32 (i8*, i8*)** %13, align 8
  %25 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8
  %26 = icmp eq %struct.__dirstream* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %200

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %125, %28
  %30 = call i32* @__errno_location() #16
  store i32 0, i32* %30, align 4
  %31 = load %struct.__dirstream*, %struct.__dirstream** %4, align 8
  %32 = call %struct.dirent* @readdir(%struct.__dirstream* %31)
  store %struct.dirent* %32, %struct.dirent** %14, align 8
  %33 = load %struct.dirent*, %struct.dirent** %14, align 8
  %34 = icmp ne %struct.dirent* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  br label %126

36:                                               ; preds = %29
  %37 = load %struct.dirent*, %struct.dirent** %14, align 8
  %38 = getelementptr inbounds %struct.dirent, %struct.dirent* %37, i32 0, i32 4
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %38, i64 0, i64 0
  store i8* %39, i8** %15, align 8
  %40 = load i8*, i8** %15, align 8
  %41 = load i8*, i8** %15, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 0
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp ne i32 %44, 46
  br i1 %45, label %46, label %47

46:                                               ; preds = %36
  br label %55

47:                                               ; preds = %36
  %48 = load i8*, i8** %15, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp ne i32 %51, 46
  %53 = zext i1 %52 to i64
  %54 = select i1 %52, i32 1, i32 2
  br label %55

55:                                               ; preds = %47, %46
  %56 = phi i32 [ 0, %46 ], [ %54, %47 ]
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %40, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %125

62:                                               ; preds = %55
  %63 = load %struct.dirent*, %struct.dirent** %14, align 8
  %64 = getelementptr inbounds %struct.dirent, %struct.dirent* %63, i32 0, i32 4
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %64, i64 0, i64 0
  %66 = call i64 @strlen(i8* %65) #15
  %67 = add i64 %66, 1
  store i64 %67, i64* %16, align 8
  %68 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  %69 = icmp ne i32 (i8*, i8*)* %68, null
  br i1 %69, label %70, label %97

70:                                               ; preds = %62
  %71 = load i64, i64* %9, align 8
  %72 = load i64, i64* %10, align 8
  %73 = icmp eq i64 %71, %72
  br i1 %73, label %74, label %81

74:                                               ; preds = %70
  %75 = load i64, i64* %9, align 8
  store i64 %75, i64* %17, align 8
  %76 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %77 = bitcast %struct.direntry_t* %76 to i8*
  %78 = call i8* @x2nrealloc(i8* %77, i64* %17, i64 16)
  %79 = bitcast i8* %78 to %struct.direntry_t*
  store %struct.direntry_t* %79, %struct.direntry_t** %8, align 8
  %80 = load i64, i64* %17, align 8
  store i64 %80, i64* %9, align 8
  br label %81

81:                                               ; preds = %74, %70
  %82 = load i8*, i8** %15, align 8
  %83 = call noalias i8* @xstrdup(i8* %82)
  %84 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %85 = load i64, i64* %10, align 8
  %86 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %84, i64 %85
  %87 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %86, i32 0, i32 0
  store i8* %83, i8** %87, align 8
  %88 = load %struct.dirent*, %struct.dirent** %14, align 8
  %89 = getelementptr inbounds %struct.dirent, %struct.dirent* %88, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %92 = load i64, i64* %10, align 8
  %93 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %91, i64 %92
  %94 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %93, i32 0, i32 1
  store i64 %90, i64* %94, align 8
  %95 = load i64, i64* %10, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %10, align 8
  br label %121

97:                                               ; preds = %62
  %98 = load i64, i64* %7, align 8
  %99 = load i64, i64* %11, align 8
  %100 = sub i64 %98, %99
  %101 = load i64, i64* %16, align 8
  %102 = icmp ule i64 %100, %101
  br i1 %102, label %103, label %115

103:                                              ; preds = %97
  %104 = load i64, i64* %11, align 8
  %105 = load i64, i64* %16, align 8
  %106 = add i64 %104, %105
  store i64 %106, i64* %18, align 8
  %107 = load i64, i64* %18, align 8
  %108 = load i64, i64* %11, align 8
  %109 = icmp ult i64 %107, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  call void @xalloc_die() #17
  unreachable

111:                                              ; preds = %103
  %112 = load i8*, i8** %6, align 8
  %113 = call i8* @x2nrealloc(i8* %112, i64* %18, i64 1)
  store i8* %113, i8** %6, align 8
  %114 = load i64, i64* %18, align 8
  store i64 %114, i64* %7, align 8
  br label %115

115:                                              ; preds = %111, %97
  %116 = load i8*, i8** %6, align 8
  %117 = load i64, i64* %11, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = load i8*, i8** %15, align 8
  %120 = load i64, i64* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %119, i64 %120, i1 false)
  br label %121

121:                                              ; preds = %115, %81
  %122 = load i64, i64* %16, align 8
  %123 = load i64, i64* %11, align 8
  %124 = add i64 %123, %122
  store i64 %124, i64* %11, align 8
  br label %125

125:                                              ; preds = %121, %55
  br label %29

126:                                              ; preds = %35
  %127 = call i32* @__errno_location() #16
  %128 = load i32, i32* %127, align 4
  store i32 %128, i32* %12, align 4
  %129 = load i32, i32* %12, align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %133 = bitcast %struct.direntry_t* %132 to i8*
  call void @free(i8* %133) #13
  %134 = load i8*, i8** %6, align 8
  call void @free(i8* %134) #13
  %135 = load i32, i32* %12, align 4
  %136 = call i32* @__errno_location() #16
  store i32 %135, i32* %136, align 4
  store i8* null, i8** %3, align 8
  br label %200

137:                                              ; preds = %126
  %138 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  %139 = icmp ne i32 (i8*, i8*)* %138, null
  br i1 %139, label %140, label %185

140:                                              ; preds = %137
  %141 = load i64, i64* %10, align 8
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %148

143:                                              ; preds = %140
  %144 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %145 = bitcast %struct.direntry_t* %144 to i8*
  %146 = load i64, i64* %10, align 8
  %147 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  call void @qsort(i8* %145, i64 %146, i64 16, i32 (i8*, i8*)* %147)
  br label %148

148:                                              ; preds = %143, %140
  %149 = load i64, i64* %11, align 8
  %150 = add i64 %149, 1
  %151 = call noalias i8* @xmalloc(i64 %150)
  store i8* %151, i8** %6, align 8
  store i64 0, i64* %11, align 8
  store i64 0, i64* %19, align 8
  br label %152

152:                                              ; preds = %179, %148
  %153 = load i64, i64* %19, align 8
  %154 = load i64, i64* %10, align 8
  %155 = icmp ult i64 %153, %154
  br i1 %155, label %156, label %182

156:                                              ; preds = %152
  %157 = load i8*, i8** %6, align 8
  %158 = load i64, i64* %11, align 8
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  store i8* %159, i8** %20, align 8
  %160 = load i8*, i8** %20, align 8
  %161 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %162 = load i64, i64* %19, align 8
  %163 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %161, i64 %162
  %164 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %163, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = call i8* @stpcpy(i8* %160, i8* %165) #13
  %167 = load i8*, i8** %20, align 8
  %168 = ptrtoint i8* %166 to i64
  %169 = ptrtoint i8* %167 to i64
  %170 = sub i64 %168, %169
  %171 = add nsw i64 %170, 1
  %172 = load i64, i64* %11, align 8
  %173 = add i64 %172, %171
  store i64 %173, i64* %11, align 8
  %174 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %175 = load i64, i64* %19, align 8
  %176 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %174, i64 %175
  %177 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %176, i32 0, i32 0
  %178 = load i8*, i8** %177, align 8
  call void @free(i8* %178) #13
  br label %179

179:                                              ; preds = %156
  %180 = load i64, i64* %19, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %19, align 8
  br label %152, !llvm.loop !48

182:                                              ; preds = %152
  %183 = load %struct.direntry_t*, %struct.direntry_t** %8, align 8
  %184 = bitcast %struct.direntry_t* %183 to i8*
  call void @free(i8* %184) #13
  br label %195

185:                                              ; preds = %137
  %186 = load i64, i64* %11, align 8
  %187 = load i64, i64* %7, align 8
  %188 = icmp eq i64 %186, %187
  br i1 %188, label %189, label %194

189:                                              ; preds = %185
  %190 = load i8*, i8** %6, align 8
  %191 = load i64, i64* %11, align 8
  %192 = add i64 %191, 1
  %193 = call i8* @xrealloc(i8* %190, i64 %192)
  store i8* %193, i8** %6, align 8
  br label %194

194:                                              ; preds = %189, %185
  br label %195

195:                                              ; preds = %194, %182
  %196 = load i8*, i8** %6, align 8
  %197 = load i64, i64* %11, align 8
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  store i8 0, i8* %198, align 1
  %199 = load i8*, i8** %6, align 8
  store i8* %199, i8** %3, align 8
  br label %200

200:                                              ; preds = %195, %131, %27
  %201 = load i8*, i8** %3, align 8
  ret i8* %201
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.direntry_t*, align 8
  %6 = alloca %struct.direntry_t*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.direntry_t*
  store %struct.direntry_t* %8, %struct.direntry_t** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.direntry_t*
  store %struct.direntry_t* %10, %struct.direntry_t** %6, align 8
  %11 = load %struct.direntry_t*, %struct.direntry_t** %5, align 8
  %12 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = load %struct.direntry_t*, %struct.direntry_t** %6, align 8
  %15 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %14, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %13, i8* %16) #15
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.direntry_t*, align 8
  %6 = alloca %struct.direntry_t*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.direntry_t*
  store %struct.direntry_t* %8, %struct.direntry_t** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.direntry_t*
  store %struct.direntry_t* %10, %struct.direntry_t** %6, align 8
  %11 = load %struct.direntry_t*, %struct.direntry_t** %5, align 8
  %12 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = load %struct.direntry_t*, %struct.direntry_t** %6, align 8
  %15 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %14, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %13, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  br label %28

19:                                               ; preds = %2
  %20 = load %struct.direntry_t*, %struct.direntry_t** %5, align 8
  %21 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = load %struct.direntry_t*, %struct.direntry_t** %6, align 8
  %24 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %22, %25
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %19, %18
  %29 = phi i32 [ -1, %18 ], [ %27, %19 ]
  ret i32 %29
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @savedir(i8* %0, i32 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.__dirstream*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = load i8*, i8** %4, align 8
  %10 = call %struct.__dirstream* @opendir_safer(i8* %9)
  store %struct.__dirstream* %10, %struct.__dirstream** %6, align 8
  %11 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8
  %12 = icmp ne %struct.__dirstream* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %29

14:                                               ; preds = %2
  %15 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8
  %16 = load i32, i32* %5, align 4
  %17 = call i8* @streamsavedir(%struct.__dirstream* %15, i32 %16)
  store i8* %17, i8** %7, align 8
  %18 = load %struct.__dirstream*, %struct.__dirstream** %6, align 8
  %19 = call i32 @closedir(%struct.__dirstream* %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = call i32* @__errno_location() #16
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %8, align 4
  %24 = load i8*, i8** %7, align 8
  call void @free(i8* %24) #13
  %25 = load i32, i32* %8, align 4
  %26 = call i32* @__errno_location() #16
  store i32 %25, i32* %26, align 4
  store i8* null, i8** %3, align 8
  br label %29

27:                                               ; preds = %14
  %28 = load i8*, i8** %7, align 8
  store i8* %28, i8** %3, align 8
  br label %29

29:                                               ; preds = %27, %21, %13
  %30 = load i8*, i8** %3, align 8
  ret i8* %30
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @freecon(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @setfscreatecon(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = call i32* @__errno_location() #16
  store i32 95, i32* %3, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lgetfilecon(i8* %0, i8** %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8**, align 8
  store i8* %0, i8** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = call i32* @__errno_location() #16
  store i32 95, i32* %5, align 4
  ret i32 -1
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @get_stat_atime_ns(%struct.stat* %0) #8 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 11
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @get_stat_ctime_ns(%struct.stat* %0) #8 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 13
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @get_stat_mtime_ns(%struct.stat* %0) #8 {
  %2 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %2, align 8
  %3 = load %struct.stat*, %struct.stat** %2, align 8
  %4 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 12
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal { i64, i64 } @get_stat_atime(%struct.stat* %0) #8 {
  %2 = alloca %struct.timespec, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %3, align 8
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 11
  %6 = bitcast %struct.timespec* %2 to i8*
  %7 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %struct.timespec* %2 to { i64, i64 }*
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 8
  ret { i64, i64 } %9
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal { i64, i64 } @get_stat_mtime(%struct.stat* %0) #8 {
  %2 = alloca %struct.timespec, align 8
  %3 = alloca %struct.stat*, align 8
  store %struct.stat* %0, %struct.stat** %3, align 8
  %4 = load %struct.stat*, %struct.stat** %3, align 8
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 12
  %6 = bitcast %struct.timespec* %2 to i8*
  %7 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = bitcast %struct.timespec* %2 to { i64, i64 }*
  %9 = load { i64, i64 }, { i64, i64 }* %8, align 8
  ret { i64, i64 } %9
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lstatat(i32 %0, i8* %1, %struct.stat* %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store %struct.stat* %2, %struct.stat** %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = load i8*, i8** %5, align 8
  %9 = load %struct.stat*, %struct.stat** %6, align 8
  %10 = call i32 @fstatat(i32 %7, i8* %8, %struct.stat* %9, i32 256) #13
  ret i32 %10
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32 (i8*, i8*)*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.randint_source*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i32 %1, i32* %8, align 4
  store i8* %2, i8** %9, align 8
  store i32 (i8*, i8*)* %3, i32 (i8*, i8*)** %10, align 8
  store i64 %4, i64* %11, align 8
  store i32 -1, i32* %15, align 4
  %21 = call i32* @__errno_location() #16
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %16, align 4
  store i32 238328, i32* %18, align 4
  %23 = load i8*, i8** %7, align 8
  %24 = call i64 @strlen(i8* %23) #15
  store i64 %24, i64* %12, align 8
  %25 = load i64, i64* %12, align 8
  %26 = load i64, i64* %11, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = add i64 %26, %28
  %30 = icmp ult i64 %25, %29
  br i1 %30, label %42, label %31

31:                                               ; preds = %5
  %32 = load i8*, i8** %7, align 8
  %33 = load i64, i64* %12, align 8
  %34 = load i64, i64* %11, align 8
  %35 = sub i64 %33, %34
  %36 = load i32, i32* %8, align 4
  %37 = sext i32 %36 to i64
  %38 = sub i64 %35, %37
  %39 = getelementptr inbounds i8, i8* %32, i64 %38
  %40 = load i64, i64* %11, align 8
  %41 = call zeroext i1 @check_x_suffix(i8* %39, i64 %40) #15
  br i1 %41, label %44, label %42

42:                                               ; preds = %31, %5
  %43 = call i32* @__errno_location() #16
  store i32 22, i32* %43, align 4
  store i32 -1, i32* %6, align 4
  br label %111

44:                                               ; preds = %31
  %45 = load i8*, i8** %7, align 8
  %46 = load i64, i64* %12, align 8
  %47 = load i64, i64* %11, align 8
  %48 = sub i64 %46, %47
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = sub i64 %48, %50
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  store i8* %52, i8** %13, align 8
  %53 = load i64, i64* %11, align 8
  %54 = call %struct.randint_source* @randint_all_new(i8* null, i64 %53)
  store %struct.randint_source* %54, %struct.randint_source** %17, align 8
  %55 = load %struct.randint_source*, %struct.randint_source** %17, align 8
  %56 = icmp ne %struct.randint_source* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %44
  store i32 -1, i32* %6, align 4
  br label %111

58:                                               ; preds = %44
  store i32 0, i32* %14, align 4
  br label %59

59:                                               ; preds = %96, %58
  %60 = load i32, i32* %14, align 4
  %61 = load i32, i32* %18, align 4
  %62 = icmp ult i32 %60, %61
  br i1 %62, label %63, label %99

63:                                               ; preds = %59
  store i64 0, i64* %19, align 8
  br label %64

64:                                               ; preds = %76, %63
  %65 = load i64, i64* %19, align 8
  %66 = load i64, i64* %11, align 8
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %68, label %79

68:                                               ; preds = %64
  %69 = load %struct.randint_source*, %struct.randint_source** %17, align 8
  %70 = call i64 @randint_genmax(%struct.randint_source* %69, i64 61)
  %71 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = load i8*, i8** %13, align 8
  %74 = load i64, i64* %19, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  store i8 %72, i8* %75, align 1
  br label %76

76:                                               ; preds = %68
  %77 = load i64, i64* %19, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %19, align 8
  br label %64, !llvm.loop !49

79:                                               ; preds = %64
  %80 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %10, align 8
  %81 = load i8*, i8** %7, align 8
  %82 = load i8*, i8** %9, align 8
  %83 = call i32 %80(i8* %81, i8* %82)
  store i32 %83, i32* %15, align 4
  %84 = load i32, i32* %15, align 4
  %85 = icmp sge i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  %87 = load i32, i32* %16, align 4
  %88 = call i32* @__errno_location() #16
  store i32 %87, i32* %88, align 4
  br label %103

89:                                               ; preds = %79
  %90 = call i32* @__errno_location() #16
  %91 = load i32, i32* %90, align 4
  %92 = icmp ne i32 %91, 17
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  store i32 -1, i32* %15, align 4
  br label %103

94:                                               ; preds = %89
  br label %95

95:                                               ; preds = %94
  br label %96

96:                                               ; preds = %95
  %97 = load i32, i32* %14, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %14, align 4
  br label %59, !llvm.loop !50

99:                                               ; preds = %59
  %100 = load %struct.randint_source*, %struct.randint_source** %17, align 8
  %101 = call i32 @randint_all_free(%struct.randint_source* %100)
  %102 = call i32* @__errno_location() #16
  store i32 17, i32* %102, align 4
  store i32 -1, i32* %6, align 4
  br label %111

103:                                              ; preds = %93, %86
  %104 = call i32* @__errno_location() #16
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %20, align 4
  %106 = load %struct.randint_source*, %struct.randint_source** %17, align 8
  %107 = call i32 @randint_all_free(%struct.randint_source* %106)
  %108 = load i32, i32* %20, align 4
  %109 = call i32* @__errno_location() #16
  store i32 %108, i32* %109, align 4
  %110 = load i32, i32* %15, align 4
  store i32 %110, i32* %6, align 4
  br label %111

111:                                              ; preds = %103, %99, %57, %42
  %112 = load i32, i32* %6, align 4
  ret i32 %112
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %0, i64 %1) #8 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i64 @strspn(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.386, i64 0, i64 0)) #15
  %8 = icmp ule i64 %5, %7
  ret i1 %8
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fd_safer(i32 %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp sle i32 0, %5
  br i1 %6, label %7, label %20

7:                                                ; preds = %1
  %8 = load i32, i32* %2, align 4
  %9 = icmp sle i32 %8, 2
  br i1 %9, label %10, label %20

10:                                               ; preds = %7
  %11 = load i32, i32* %2, align 4
  %12 = call i32 @dup_safer(i32 %11)
  store i32 %12, i32* %3, align 4
  %13 = call i32* @__errno_location() #16
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %4, align 4
  %15 = load i32, i32* %2, align 4
  %16 = call i32 @close(i32 %15)
  %17 = load i32, i32* %4, align 4
  %18 = call i32* @__errno_location() #16
  store i32 %17, i32* %18, align 4
  %19 = load i32, i32* %3, align 4
  store i32 %19, i32* %2, align 4
  br label %20

20:                                               ; preds = %10, %7, %1
  %21 = load i32, i32* %2, align 4
  ret i32 %21
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimecmp(i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.stat*, align 8
  %7 = alloca %struct.stat*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store %struct.stat* %1, %struct.stat** %6, align 8
  store %struct.stat* %2, %struct.stat** %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load i8*, i8** %5, align 8
  %10 = load %struct.stat*, %struct.stat** %6, align 8
  %11 = load %struct.stat*, %struct.stat** %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call i32 @utimecmpat(i32 -100, i8* %9, %struct.stat* %10, %struct.stat* %11, i32 %12)
  ret i32 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimecmpat(i32 %0, i8* %1, %struct.stat* %2, %struct.stat* %3, i32 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.stat*, align 8
  %10 = alloca %struct.stat*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.fs_res*, align 8
  %17 = alloca %struct.fs_res, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca [2 x %struct.timespec], align 16
  %31 = alloca %struct.stat, align 8
  %32 = alloca i64, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  store i8* %1, i8** %8, align 8
  store %struct.stat* %2, %struct.stat** %9, align 8
  store %struct.stat* %3, %struct.stat** %10, align 8
  store i32 %4, i32* %11, align 4
  %36 = load %struct.stat*, %struct.stat** %9, align 8
  %37 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 12
  %38 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %12, align 8
  %40 = load %struct.stat*, %struct.stat** %10, align 8
  %41 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 12
  %42 = getelementptr inbounds %struct.timespec, %struct.timespec* %41, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %13, align 8
  %44 = load %struct.stat*, %struct.stat** %9, align 8
  %45 = call i64 @get_stat_mtime_ns(%struct.stat* %44) #15
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %14, align 4
  %47 = load %struct.stat*, %struct.stat** %10, align 8
  %48 = call i64 @get_stat_mtime_ns(%struct.stat* %47) #15
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %15, align 4
  %50 = load i32, i32* %11, align 4
  %51 = and i32 %50, 1
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %405

53:                                               ; preds = %5
  store %struct.fs_res* null, %struct.fs_res** %16, align 8
  %54 = load i64, i64* %12, align 8
  %55 = load i64, i64* %13, align 8
  %56 = icmp eq i64 %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load i32, i32* %14, align 4
  %59 = load i32, i32* %15, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  store i32 0, i32* %6, align 4
  br label %431

62:                                               ; preds = %57, %53
  %63 = load i64, i64* %12, align 8
  %64 = load i64, i64* %13, align 8
  %65 = sub nsw i64 %64, 2
  %66 = icmp sle i64 %63, %65
  br i1 %66, label %67, label %68

67:                                               ; preds = %62
  store i32 -1, i32* %6, align 4
  br label %431

68:                                               ; preds = %62
  %69 = load i64, i64* %13, align 8
  %70 = load i64, i64* %12, align 8
  %71 = sub nsw i64 %70, 2
  %72 = icmp sle i64 %69, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %68
  store i32 1, i32* %6, align 4
  br label %431

74:                                               ; preds = %68
  %75 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8
  %76 = icmp ne %struct.hash_table* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free)
  store %struct.hash_table* %78, %struct.hash_table** @utimecmpat.ht, align 8
  br label %79

79:                                               ; preds = %77, %74
  %80 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8
  %81 = icmp ne %struct.hash_table* %80, null
  br i1 %81, label %82, label %116

82:                                               ; preds = %79
  %83 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %84 = icmp ne %struct.fs_res* %83, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %82
  %86 = call noalias i8* @malloc(i64 16) #13
  %87 = bitcast i8* %86 to %struct.fs_res*
  store %struct.fs_res* %87, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %88 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %89 = icmp ne %struct.fs_res* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  br label %117

91:                                               ; preds = %85
  %92 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %93 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %92, i32 0, i32 1
  store i32 2000000000, i32* %93, align 8
  %94 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %95 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %94, i32 0, i32 2
  store i8 0, i8* %95, align 4
  br label %96

96:                                               ; preds = %91, %82
  %97 = load %struct.stat*, %struct.stat** %9, align 8
  %98 = getelementptr inbounds %struct.stat, %struct.stat* %97, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %101 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %100, i32 0, i32 0
  store i64 %99, i64* %101, align 8
  %102 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8
  %103 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %104 = bitcast %struct.fs_res* %103 to i8*
  %105 = call i8* @hash_insert(%struct.hash_table* %102, i8* %104)
  %106 = bitcast i8* %105 to %struct.fs_res*
  store %struct.fs_res* %106, %struct.fs_res** %16, align 8
  %107 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %108 = icmp ne %struct.fs_res* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %96
  br label %117

110:                                              ; preds = %96
  %111 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %112 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  %113 = icmp eq %struct.fs_res* %111, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8
  br label %115

115:                                              ; preds = %114, %110
  br label %138

116:                                              ; preds = %79
  br label %117

117:                                              ; preds = %116, %109, %90
  %118 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8
  %119 = icmp ne %struct.hash_table* %118, null
  br i1 %119, label %120, label %129

120:                                              ; preds = %117
  %121 = load %struct.stat*, %struct.stat** %9, align 8
  %122 = getelementptr inbounds %struct.stat, %struct.stat* %121, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %17, i32 0, i32 0
  store i64 %123, i64* %124, align 8
  %125 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8
  %126 = bitcast %struct.fs_res* %17 to i8*
  %127 = call i8* @hash_lookup(%struct.hash_table* %125, i8* %126)
  %128 = bitcast i8* %127 to %struct.fs_res*
  store %struct.fs_res* %128, %struct.fs_res** %16, align 8
  br label %129

129:                                              ; preds = %120, %117
  %130 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %131 = icmp ne %struct.fs_res* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  store %struct.fs_res* %17, %struct.fs_res** %16, align 8
  %133 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %134 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %133, i32 0, i32 1
  store i32 2000000000, i32* %134, align 8
  %135 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %136 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %135, i32 0, i32 2
  store i8 0, i8* %136, align 4
  br label %137

137:                                              ; preds = %132, %129
  br label %138

138:                                              ; preds = %137, %115
  %139 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %140 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %139, i32 0, i32 1
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %18, align 4
  %142 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %143 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %142, i32 0, i32 2
  %144 = load i8, i8* %143, align 4
  %145 = trunc i8 %144 to i1
  br i1 %145, label %391, label %146

146:                                              ; preds = %138
  %147 = load %struct.stat*, %struct.stat** %9, align 8
  %148 = getelementptr inbounds %struct.stat, %struct.stat* %147, i32 0, i32 11
  %149 = getelementptr inbounds %struct.timespec, %struct.timespec* %148, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %19, align 8
  %151 = load %struct.stat*, %struct.stat** %9, align 8
  %152 = getelementptr inbounds %struct.stat, %struct.stat* %151, i32 0, i32 13
  %153 = getelementptr inbounds %struct.timespec, %struct.timespec* %152, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %20, align 8
  %155 = load i64, i64* %12, align 8
  store i64 %155, i64* %21, align 8
  %156 = load %struct.stat*, %struct.stat** %9, align 8
  %157 = call i64 @get_stat_atime_ns(%struct.stat* %156) #15
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %22, align 4
  %159 = load %struct.stat*, %struct.stat** %9, align 8
  %160 = call i64 @get_stat_ctime_ns(%struct.stat* %159) #15
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %23, align 4
  %162 = load i32, i32* %14, align 4
  store i32 %162, i32* %24, align 4
  %163 = load i64, i64* %19, align 8
  %164 = load i64, i64* %20, align 8
  %165 = or i64 %163, %164
  %166 = load i64, i64* %21, align 8
  %167 = or i64 %165, %166
  %168 = and i64 %167, 1
  %169 = icmp ne i64 %168, 0
  %170 = zext i1 %169 to i8
  store i8 %170, i8* %25, align 1
  %171 = load i32, i32* %22, align 4
  store i32 %171, i32* %26, align 4
  %172 = load i32, i32* %23, align 4
  store i32 %172, i32* %27, align 4
  %173 = load i32, i32* %24, align 4
  store i32 %173, i32* %28, align 4
  store i32 1, i32* %29, align 4
  %174 = load i32, i32* %29, align 4
  %175 = mul nsw i32 %174, 10
  store i32 %175, i32* %29, align 4
  %176 = load i32, i32* %26, align 4
  %177 = load i32, i32* %29, align 4
  %178 = srem i32 %176, %177
  %179 = load i32, i32* %27, align 4
  %180 = load i32, i32* %29, align 4
  %181 = srem i32 %179, %180
  %182 = or i32 %178, %181
  %183 = load i32, i32* %28, align 4
  %184 = load i32, i32* %29, align 4
  %185 = srem i32 %183, %184
  %186 = or i32 %182, %185
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %146
  store i32 1, i32* %18, align 4
  br label %239

189:                                              ; preds = %146
  %190 = load i32, i32* %29, align 4
  store i32 %190, i32* %18, align 4
  %191 = load i32, i32* %29, align 4
  %192 = load i32, i32* %26, align 4
  %193 = sdiv i32 %192, %191
  store i32 %193, i32* %26, align 4
  %194 = load i32, i32* %29, align 4
  %195 = load i32, i32* %27, align 4
  %196 = sdiv i32 %195, %194
  store i32 %196, i32* %27, align 4
  %197 = load i32, i32* %29, align 4
  %198 = load i32, i32* %28, align 4
  %199 = sdiv i32 %198, %197
  store i32 %199, i32* %28, align 4
  br label %200

200:                                              ; preds = %229, %189
  %201 = load i32, i32* %18, align 4
  %202 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %203 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = icmp slt i32 %201, %204
  br i1 %205, label %206, label %216

206:                                              ; preds = %200
  %207 = load i32, i32* %26, align 4
  %208 = srem i32 %207, 10
  %209 = load i32, i32* %27, align 4
  %210 = srem i32 %209, 10
  %211 = or i32 %208, %210
  %212 = load i32, i32* %28, align 4
  %213 = srem i32 %212, 10
  %214 = or i32 %211, %213
  %215 = icmp eq i32 %214, 0
  br label %216

216:                                              ; preds = %206, %200
  %217 = phi i1 [ false, %200 ], [ %215, %206 ]
  br i1 %217, label %218, label %238

218:                                              ; preds = %216
  %219 = load i32, i32* %18, align 4
  %220 = icmp eq i32 %219, 1000000000
  br i1 %220, label %221, label %228

221:                                              ; preds = %218
  %222 = load i8, i8* %25, align 1
  %223 = trunc i8 %222 to i1
  br i1 %223, label %227, label %224

224:                                              ; preds = %221
  %225 = load i32, i32* %18, align 4
  %226 = mul nsw i32 %225, 2
  store i32 %226, i32* %18, align 4
  br label %227

227:                                              ; preds = %224, %221
  br label %238

228:                                              ; preds = %218
  br label %229

229:                                              ; preds = %228
  %230 = load i32, i32* %18, align 4
  %231 = mul nsw i32 %230, 10
  store i32 %231, i32* %18, align 4
  %232 = load i32, i32* %26, align 4
  %233 = sdiv i32 %232, 10
  store i32 %233, i32* %26, align 4
  %234 = load i32, i32* %27, align 4
  %235 = sdiv i32 %234, 10
  store i32 %235, i32* %27, align 4
  %236 = load i32, i32* %28, align 4
  %237 = sdiv i32 %236, 10
  store i32 %237, i32* %28, align 4
  br label %200, !llvm.loop !51

238:                                              ; preds = %227, %216
  br label %239

239:                                              ; preds = %238, %188
  %240 = load i32, i32* %18, align 4
  %241 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %242 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %241, i32 0, i32 1
  store i32 %240, i32* %242, align 8
  %243 = load i32, i32* %18, align 4
  %244 = icmp slt i32 1, %243
  br i1 %244, label %245, label %385

245:                                              ; preds = %239
  %246 = load i32, i32* %15, align 4
  %247 = srem i32 %246, 1
  %248 = load i32, i32* %15, align 4
  %249 = sub nsw i32 %248, %247
  store i32 %249, i32* %15, align 4
  %250 = load i64, i64* %13, align 8
  %251 = load i32, i32* %18, align 4
  %252 = icmp eq i32 %251, 2000000000
  %253 = zext i1 %252 to i64
  %254 = select i1 %252, i32 1, i32 0
  %255 = xor i32 %254, -1
  %256 = sext i32 %255 to i64
  %257 = and i64 %250, %256
  store i64 %257, i64* %32, align 8
  %258 = load i64, i64* %13, align 8
  %259 = load i64, i64* %12, align 8
  %260 = icmp slt i64 %258, %259
  br i1 %260, label %269, label %261

261:                                              ; preds = %245
  %262 = load i64, i64* %13, align 8
  %263 = load i64, i64* %12, align 8
  %264 = icmp eq i64 %262, %263
  br i1 %264, label %265, label %270

265:                                              ; preds = %261
  %266 = load i32, i32* %15, align 4
  %267 = load i32, i32* %14, align 4
  %268 = icmp sle i32 %266, %267
  br i1 %268, label %269, label %270

269:                                              ; preds = %265, %245
  store i32 1, i32* %6, align 4
  br label %431

270:                                              ; preds = %265, %261
  %271 = load i64, i64* %12, align 8
  %272 = load i64, i64* %32, align 8
  %273 = icmp slt i64 %271, %272
  br i1 %273, label %286, label %274

274:                                              ; preds = %270
  %275 = load i64, i64* %12, align 8
  %276 = load i64, i64* %32, align 8
  %277 = icmp eq i64 %275, %276
  br i1 %277, label %278, label %287

278:                                              ; preds = %274
  %279 = load i32, i32* %14, align 4
  %280 = load i32, i32* %15, align 4
  %281 = load i32, i32* %15, align 4
  %282 = load i32, i32* %18, align 4
  %283 = srem i32 %281, %282
  %284 = sub nsw i32 %280, %283
  %285 = icmp slt i32 %279, %284
  br i1 %285, label %286, label %287

286:                                              ; preds = %278, %270
  store i32 -1, i32* %6, align 4
  br label %431

287:                                              ; preds = %278, %274
  %288 = load i64, i64* %19, align 8
  %289 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 0
  %290 = getelementptr inbounds %struct.timespec, %struct.timespec* %289, i32 0, i32 0
  store i64 %288, i64* %290, align 16
  %291 = load i32, i32* %22, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 0
  %294 = getelementptr inbounds %struct.timespec, %struct.timespec* %293, i32 0, i32 1
  store i64 %292, i64* %294, align 8
  %295 = load i64, i64* %21, align 8
  %296 = load i32, i32* %18, align 4
  %297 = icmp eq i32 %296, 2000000000
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = or i64 %295, %299
  %301 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 1
  %302 = getelementptr inbounds %struct.timespec, %struct.timespec* %301, i32 0, i32 0
  store i64 %300, i64* %302, align 16
  %303 = load i32, i32* %24, align 4
  %304 = load i32, i32* %18, align 4
  %305 = sdiv i32 %304, 9
  %306 = add nsw i32 %303, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 1
  %309 = getelementptr inbounds %struct.timespec, %struct.timespec* %308, i32 0, i32 1
  store i64 %307, i64* %309, align 8
  %310 = load i32, i32* %7, align 4
  %311 = load i8*, i8** %8, align 8
  %312 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 0
  %313 = call i32 @utimensat(i32 %310, i8* %311, %struct.timespec* %312, i32 256) #13
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %287
  store i32 -2, i32* %6, align 4
  br label %431

316:                                              ; preds = %287
  %317 = load i32, i32* %7, align 4
  %318 = load i8*, i8** %8, align 8
  %319 = call i32 @fstatat(i32 %317, i8* %318, %struct.stat* %31, i32 256) #13
  store i32 %319, i32* %33, align 4
  %320 = load i32, i32* %33, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %struct.stat, %struct.stat* %31, i32 0, i32 12
  %323 = getelementptr inbounds %struct.timespec, %struct.timespec* %322, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = load i64, i64* %21, align 8
  %326 = xor i64 %324, %325
  %327 = or i64 %321, %326
  %328 = call i64 @get_stat_mtime_ns(%struct.stat* %31) #15
  %329 = load i32, i32* %24, align 4
  %330 = sext i32 %329 to i64
  %331 = xor i64 %328, %330
  %332 = or i64 %327, %331
  %333 = icmp ne i64 %332, 0
  br i1 %333, label %334, label %346

334:                                              ; preds = %316
  %335 = load i64, i64* %21, align 8
  %336 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 1
  %337 = getelementptr inbounds %struct.timespec, %struct.timespec* %336, i32 0, i32 0
  store i64 %335, i64* %337, align 16
  %338 = load i32, i32* %24, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 1
  %341 = getelementptr inbounds %struct.timespec, %struct.timespec* %340, i32 0, i32 1
  store i64 %339, i64* %341, align 8
  %342 = load i32, i32* %7, align 4
  %343 = load i8*, i8** %8, align 8
  %344 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %30, i64 0, i64 0
  %345 = call i32 @utimensat(i32 %342, i8* %343, %struct.timespec* %344, i32 256) #13
  br label %346

346:                                              ; preds = %334, %316
  %347 = load i32, i32* %33, align 4
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %346
  store i32 -2, i32* %6, align 4
  br label %431

350:                                              ; preds = %346
  %351 = load i32, i32* %18, align 4
  store i32 %351, i32* %34, align 4
  %352 = getelementptr inbounds %struct.stat, %struct.stat* %31, i32 0, i32 12
  %353 = getelementptr inbounds %struct.timespec, %struct.timespec* %352, i32 0, i32 0
  %354 = load i64, i64* %353, align 8
  %355 = and i64 %354, 1
  %356 = mul nsw i64 1000000000, %355
  %357 = call i64 @get_stat_mtime_ns(%struct.stat* %31) #15
  %358 = add nsw i64 %356, %357
  %359 = trunc i64 %358 to i32
  store i32 %359, i32* %35, align 4
  store i32 1, i32* %18, align 4
  %360 = load i32, i32* %18, align 4
  %361 = load i32, i32* %35, align 4
  %362 = sdiv i32 %361, %360
  store i32 %362, i32* %35, align 4
  br label %363

363:                                              ; preds = %381, %350
  %364 = load i32, i32* %35, align 4
  %365 = srem i32 %364, 10
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %384

367:                                              ; preds = %363
  %368 = load i32, i32* %18, align 4
  %369 = icmp eq i32 %368, 1000000000
  br i1 %369, label %370, label %373

370:                                              ; preds = %367
  %371 = load i32, i32* %18, align 4
  %372 = mul nsw i32 %371, 2
  store i32 %372, i32* %18, align 4
  br label %384

373:                                              ; preds = %367
  %374 = load i32, i32* %18, align 4
  %375 = mul nsw i32 %374, 10
  store i32 %375, i32* %18, align 4
  %376 = load i32, i32* %18, align 4
  %377 = load i32, i32* %34, align 4
  %378 = icmp eq i32 %376, %377
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  br label %384

380:                                              ; preds = %373
  br label %381

381:                                              ; preds = %380
  %382 = load i32, i32* %35, align 4
  %383 = sdiv i32 %382, 10
  store i32 %383, i32* %35, align 4
  br label %363, !llvm.loop !52

384:                                              ; preds = %379, %370, %363
  br label %385

385:                                              ; preds = %384, %239
  %386 = load i32, i32* %18, align 4
  %387 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %388 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %387, i32 0, i32 1
  store i32 %386, i32* %388, align 8
  %389 = load %struct.fs_res*, %struct.fs_res** %16, align 8
  %390 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %389, i32 0, i32 2
  store i8 1, i8* %390, align 4
  br label %391

391:                                              ; preds = %385, %138
  %392 = load i32, i32* %18, align 4
  %393 = icmp eq i32 %392, 2000000000
  %394 = zext i1 %393 to i64
  %395 = select i1 %393, i32 1, i32 0
  %396 = xor i32 %395, -1
  %397 = sext i32 %396 to i64
  %398 = load i64, i64* %13, align 8
  %399 = and i64 %398, %397
  store i64 %399, i64* %13, align 8
  %400 = load i32, i32* %15, align 4
  %401 = load i32, i32* %18, align 4
  %402 = srem i32 %400, %401
  %403 = load i32, i32* %15, align 4
  %404 = sub nsw i32 %403, %402
  store i32 %404, i32* %15, align 4
  br label %405

405:                                              ; preds = %391, %5
  %406 = load i64, i64* %12, align 8
  %407 = load i64, i64* %13, align 8
  %408 = icmp slt i64 %406, %407
  br i1 %408, label %409, label %410

409:                                              ; preds = %405
  br label %429

410:                                              ; preds = %405
  %411 = load i64, i64* %12, align 8
  %412 = load i64, i64* %13, align 8
  %413 = icmp sgt i64 %411, %412
  br i1 %413, label %414, label %415

414:                                              ; preds = %410
  br label %427

415:                                              ; preds = %410
  %416 = load i32, i32* %14, align 4
  %417 = load i32, i32* %15, align 4
  %418 = icmp slt i32 %416, %417
  br i1 %418, label %419, label %420

419:                                              ; preds = %415
  br label %425

420:                                              ; preds = %415
  %421 = load i32, i32* %14, align 4
  %422 = load i32, i32* %15, align 4
  %423 = icmp sgt i32 %421, %422
  %424 = zext i1 %423 to i32
  br label %425

425:                                              ; preds = %420, %419
  %426 = phi i32 [ -1, %419 ], [ %424, %420 ]
  br label %427

427:                                              ; preds = %425, %414
  %428 = phi i32 [ 1, %414 ], [ %426, %425 ]
  br label %429

429:                                              ; preds = %427, %409
  %430 = phi i32 [ -1, %409 ], [ %428, %427 ]
  store i32 %430, i32* %6, align 4
  br label %431

431:                                              ; preds = %429, %349, %315, %286, %269, %73, %67, %61
  %432 = load i32, i32* %6, align 4
  ret i32 %432
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.fs_res*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.fs_res*
  store %struct.fs_res* %7, %struct.fs_res** %5, align 8
  %8 = load %struct.fs_res*, %struct.fs_res** %5, align 8
  %9 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %8, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = urem i64 %10, %11
  ret i64 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %0, i8* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.fs_res*, align 8
  %6 = alloca %struct.fs_res*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = bitcast i8* %7 to %struct.fs_res*
  store %struct.fs_res* %8, %struct.fs_res** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = bitcast i8* %9 to %struct.fs_res*
  store %struct.fs_res* %10, %struct.fs_res** %6, align 8
  %11 = load %struct.fs_res*, %struct.fs_res** %5, align 8
  %12 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = load %struct.fs_res*, %struct.fs_res** %6, align 8
  %15 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %14, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %13, %16
  ret i1 %17
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fdutimens(i32 %0, i8* %1, %struct.timespec* %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca %struct.timespec*, align 8
  %8 = alloca [2 x %struct.timespec], align 16
  %9 = alloca %struct.timespec*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.stat, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.timespec, align 8
  %14 = alloca %struct.timespec, align 8
  %15 = alloca [2 x %struct.timespec], align 16
  %16 = alloca %struct.timespec*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca %struct.timespec*, align 8
  %22 = alloca [2 x %struct.timespec], align 16
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store %struct.timespec* %2, %struct.timespec** %7, align 8
  %23 = load %struct.timespec*, %struct.timespec** %7, align 8
  %24 = icmp ne %struct.timespec* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %8, i64 0, i64 0
  br label %28

27:                                               ; preds = %3
  br label %28

28:                                               ; preds = %27, %25
  %29 = phi %struct.timespec* [ %26, %25 ], [ null, %27 ]
  store %struct.timespec* %29, %struct.timespec** %9, align 8
  store i32 0, i32* %10, align 4
  %30 = load %struct.timespec*, %struct.timespec** %9, align 8
  %31 = icmp ne %struct.timespec* %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %28
  %33 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %8, i64 0, i64 0
  %34 = load %struct.timespec*, %struct.timespec** %7, align 8
  %35 = getelementptr inbounds %struct.timespec, %struct.timespec* %34, i64 0
  %36 = bitcast %struct.timespec* %33 to i8*
  %37 = bitcast %struct.timespec* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %36, i8* align 8 %37, i64 16, i1 false)
  %38 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %8, i64 0, i64 1
  %39 = load %struct.timespec*, %struct.timespec** %7, align 8
  %40 = getelementptr inbounds %struct.timespec, %struct.timespec* %39, i64 1
  %41 = bitcast %struct.timespec* %38 to i8*
  %42 = bitcast %struct.timespec* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %41, i8* align 8 %42, i64 16, i1 false)
  %43 = load %struct.timespec*, %struct.timespec** %9, align 8
  %44 = call i32 @validate_timespec(%struct.timespec* %43)
  store i32 %44, i32* %10, align 4
  br label %45

45:                                               ; preds = %32, %28
  %46 = load i32, i32* %10, align 4
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 -1, i32* %4, align 4
  br label %326

49:                                               ; preds = %45
  %50 = load i32, i32* %5, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %49
  %53 = load i8*, i8** %6, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = call i32* @__errno_location() #16
  store i32 9, i32* %56, align 4
  store i32 -1, i32* %4, align 4
  br label %326

57:                                               ; preds = %52, %49
  %58 = load i32, i32* @utimensat_works_really, align 4
  %59 = icmp sle i32 0, %58
  br i1 %59, label %60, label %156

60:                                               ; preds = %57
  %61 = load i32, i32* %10, align 4
  %62 = icmp eq i32 %61, 2
  br i1 %62, label %63, label %113

63:                                               ; preds = %60
  %64 = load i32, i32* %5, align 4
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %63
  %67 = load i8*, i8** %6, align 8
  %68 = call i32 @stat(i8* %67, %struct.stat* %11) #13
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %74, label %75

70:                                               ; preds = %63
  %71 = load i32, i32* %5, align 4
  %72 = call i32 @fstat(i32 %71, %struct.stat* %11) #13
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70, %66
  store i32 -1, i32* %4, align 4
  br label %326

75:                                               ; preds = %70, %66
  %76 = load %struct.timespec*, %struct.timespec** %9, align 8
  %77 = getelementptr inbounds %struct.timespec, %struct.timespec* %76, i64 0
  %78 = getelementptr inbounds %struct.timespec, %struct.timespec* %77, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 1073741822
  br i1 %80, label %81, label %92

81:                                               ; preds = %75
  %82 = load %struct.timespec*, %struct.timespec** %9, align 8
  %83 = getelementptr inbounds %struct.timespec, %struct.timespec* %82, i64 0
  %84 = call { i64, i64 } @get_stat_atime(%struct.stat* %11) #15
  %85 = bitcast %struct.timespec* %13 to { i64, i64 }*
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %85, i32 0, i32 0
  %87 = extractvalue { i64, i64 } %84, 0
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %85, i32 0, i32 1
  %89 = extractvalue { i64, i64 } %84, 1
  store i64 %89, i64* %88, align 8
  %90 = bitcast %struct.timespec* %83 to i8*
  %91 = bitcast %struct.timespec* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 16, i1 false)
  br label %110

92:                                               ; preds = %75
  %93 = load %struct.timespec*, %struct.timespec** %9, align 8
  %94 = getelementptr inbounds %struct.timespec, %struct.timespec* %93, i64 1
  %95 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, 1073741822
  br i1 %97, label %98, label %109

98:                                               ; preds = %92
  %99 = load %struct.timespec*, %struct.timespec** %9, align 8
  %100 = getelementptr inbounds %struct.timespec, %struct.timespec* %99, i64 1
  %101 = call { i64, i64 } @get_stat_mtime(%struct.stat* %11) #15
  %102 = bitcast %struct.timespec* %14 to { i64, i64 }*
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %102, i32 0, i32 0
  %104 = extractvalue { i64, i64 } %101, 0
  store i64 %104, i64* %103, align 8
  %105 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %102, i32 0, i32 1
  %106 = extractvalue { i64, i64 } %101, 1
  store i64 %106, i64* %105, align 8
  %107 = bitcast %struct.timespec* %100 to i8*
  %108 = bitcast %struct.timespec* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false)
  br label %109

109:                                              ; preds = %98, %92
  br label %110

110:                                              ; preds = %109, %81
  %111 = load i32, i32* %10, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %10, align 4
  br label %113

113:                                              ; preds = %110, %60
  %114 = load i32, i32* %5, align 4
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %134

116:                                              ; preds = %113
  %117 = load i8*, i8** %6, align 8
  %118 = load %struct.timespec*, %struct.timespec** %9, align 8
  %119 = call i32 @utimensat(i32 -100, i8* %117, %struct.timespec* %118, i32 0) #13
  store i32 %119, i32* %12, align 4
  %120 = load i32, i32* %12, align 4
  %121 = icmp slt i32 0, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = call i32* @__errno_location() #16
  store i32 38, i32* %123, align 4
  br label %124

124:                                              ; preds = %122, %116
  %125 = load i32, i32* %12, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %124
  %128 = call i32* @__errno_location() #16
  %129 = load i32, i32* %128, align 4
  %130 = icmp ne i32 %129, 38
  br i1 %130, label %131, label %133

131:                                              ; preds = %127, %124
  store i32 1, i32* @utimensat_works_really, align 4
  %132 = load i32, i32* %12, align 4
  store i32 %132, i32* %4, align 4
  br label %326

133:                                              ; preds = %127
  br label %134

134:                                              ; preds = %133, %113
  %135 = load i32, i32* %5, align 4
  %136 = icmp sle i32 0, %135
  br i1 %136, label %137, label %155

137:                                              ; preds = %134
  %138 = load i32, i32* %5, align 4
  %139 = load %struct.timespec*, %struct.timespec** %9, align 8
  %140 = call i32 @futimens(i32 %138, %struct.timespec* %139) #13
  store i32 %140, i32* %12, align 4
  %141 = load i32, i32* %12, align 4
  %142 = icmp slt i32 0, %141
  br i1 %142, label %143, label %145

143:                                              ; preds = %137
  %144 = call i32* @__errno_location() #16
  store i32 38, i32* %144, align 4
  br label %145

145:                                              ; preds = %143, %137
  %146 = load i32, i32* %12, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = call i32* @__errno_location() #16
  %150 = load i32, i32* %149, align 4
  %151 = icmp ne i32 %150, 38
  br i1 %151, label %152, label %154

152:                                              ; preds = %148, %145
  store i32 1, i32* @utimensat_works_really, align 4
  %153 = load i32, i32* %12, align 4
  store i32 %153, i32* %4, align 4
  br label %326

154:                                              ; preds = %148
  br label %155

155:                                              ; preds = %154, %134
  br label %156

156:                                              ; preds = %155, %57
  store i32 -1, i32* @utimensat_works_really, align 4
  store i32 -1, i32* @lutimensat_works_really, align 4
  %157 = load i32, i32* %10, align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %181

159:                                              ; preds = %156
  %160 = load i32, i32* %10, align 4
  %161 = icmp ne i32 %160, 3
  br i1 %161, label %162, label %174

162:                                              ; preds = %159
  %163 = load i32, i32* %5, align 4
  %164 = icmp slt i32 %163, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %162
  %166 = load i8*, i8** %6, align 8
  %167 = call i32 @stat(i8* %166, %struct.stat* %11) #13
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %173, label %174

169:                                              ; preds = %162
  %170 = load i32, i32* %5, align 4
  %171 = call i32 @fstat(i32 %170, %struct.stat* %11) #13
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %169, %165
  store i32 -1, i32* %4, align 4
  br label %326

174:                                              ; preds = %169, %165, %159
  %175 = load %struct.timespec*, %struct.timespec** %9, align 8
  %176 = icmp ne %struct.timespec* %175, null
  br i1 %176, label %177, label %180

177:                                              ; preds = %174
  %178 = call zeroext i1 @update_timespec(%struct.stat* %11, %struct.timespec** %9)
  br i1 %178, label %179, label %180

179:                                              ; preds = %177
  store i32 0, i32* %4, align 4
  br label %326

180:                                              ; preds = %177, %174
  br label %181

181:                                              ; preds = %180, %156
  %182 = load %struct.timespec*, %struct.timespec** %9, align 8
  %183 = icmp ne %struct.timespec* %182, null
  br i1 %183, label %184, label %212

184:                                              ; preds = %181
  %185 = load %struct.timespec*, %struct.timespec** %9, align 8
  %186 = getelementptr inbounds %struct.timespec, %struct.timespec* %185, i64 0
  %187 = getelementptr inbounds %struct.timespec, %struct.timespec* %186, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %15, i64 0, i64 0
  %190 = getelementptr inbounds %struct.timespec, %struct.timespec* %189, i32 0, i32 0
  store i64 %188, i64* %190, align 16
  %191 = load %struct.timespec*, %struct.timespec** %9, align 8
  %192 = getelementptr inbounds %struct.timespec, %struct.timespec* %191, i64 0
  %193 = getelementptr inbounds %struct.timespec, %struct.timespec* %192, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = sdiv i64 %194, 1000
  %196 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %15, i64 0, i64 0
  %197 = getelementptr inbounds %struct.timespec, %struct.timespec* %196, i32 0, i32 1
  store i64 %195, i64* %197, align 8
  %198 = load %struct.timespec*, %struct.timespec** %9, align 8
  %199 = getelementptr inbounds %struct.timespec, %struct.timespec* %198, i64 1
  %200 = getelementptr inbounds %struct.timespec, %struct.timespec* %199, i32 0, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %15, i64 0, i64 1
  %203 = getelementptr inbounds %struct.timespec, %struct.timespec* %202, i32 0, i32 0
  store i64 %201, i64* %203, align 16
  %204 = load %struct.timespec*, %struct.timespec** %9, align 8
  %205 = getelementptr inbounds %struct.timespec, %struct.timespec* %204, i64 1
  %206 = getelementptr inbounds %struct.timespec, %struct.timespec* %205, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = sdiv i64 %207, 1000
  %209 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %15, i64 0, i64 1
  %210 = getelementptr inbounds %struct.timespec, %struct.timespec* %209, i32 0, i32 1
  store i64 %208, i64* %210, align 8
  %211 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %15, i64 0, i64 0
  store %struct.timespec* %211, %struct.timespec** %16, align 8
  br label %213

212:                                              ; preds = %181
  store %struct.timespec* null, %struct.timespec** %16, align 8
  br label %213

213:                                              ; preds = %212, %184
  %214 = load i32, i32* %5, align 4
  %215 = icmp slt i32 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %213
  %217 = load i8*, i8** %6, align 8
  %218 = load %struct.timespec*, %struct.timespec** %16, align 8
  %219 = call i32 @futimesat(i32 -100, i8* %217, %struct.timespec* %218) #13
  store i32 %219, i32* %4, align 4
  br label %326

220:                                              ; preds = %213
  %221 = load i32, i32* %5, align 4
  %222 = load %struct.timespec*, %struct.timespec** %16, align 8
  %223 = call i32 @futimesat(i32 %221, i8* null, %struct.timespec* %222) #13
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %317

225:                                              ; preds = %220
  %226 = load %struct.timespec*, %struct.timespec** %16, align 8
  %227 = icmp ne %struct.timespec* %226, null
  br i1 %227, label %228, label %316

228:                                              ; preds = %225
  %229 = load %struct.timespec*, %struct.timespec** %16, align 8
  %230 = getelementptr inbounds %struct.timespec, %struct.timespec* %229, i64 0
  %231 = getelementptr inbounds %struct.timespec, %struct.timespec* %230, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp sle i64 500000, %232
  %234 = zext i1 %233 to i8
  store i8 %234, i8* %17, align 1
  %235 = load %struct.timespec*, %struct.timespec** %16, align 8
  %236 = getelementptr inbounds %struct.timespec, %struct.timespec* %235, i64 1
  %237 = getelementptr inbounds %struct.timespec, %struct.timespec* %236, i32 0, i32 1
  %238 = load i64, i64* %237, align 8
  %239 = icmp sle i64 500000, %238
  %240 = zext i1 %239 to i8
  store i8 %240, i8* %18, align 1
  %241 = load i8, i8* %17, align 1
  %242 = trunc i8 %241 to i1
  %243 = zext i1 %242 to i32
  %244 = load i8, i8* %18, align 1
  %245 = trunc i8 %244 to i1
  %246 = zext i1 %245 to i32
  %247 = or i32 %243, %246
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %315

249:                                              ; preds = %228
  %250 = load i32, i32* %5, align 4
  %251 = call i32 @fstat(i32 %250, %struct.stat* %11) #13
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %315

253:                                              ; preds = %249
  %254 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 11
  %255 = getelementptr inbounds %struct.timespec, %struct.timespec* %254, i32 0, i32 0
  %256 = load i64, i64* %255, align 8
  %257 = load %struct.timespec*, %struct.timespec** %16, align 8
  %258 = getelementptr inbounds %struct.timespec, %struct.timespec* %257, i64 0
  %259 = getelementptr inbounds %struct.timespec, %struct.timespec* %258, i32 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = sub nsw i64 %256, %260
  store i64 %261, i64* %19, align 8
  %262 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 12
  %263 = getelementptr inbounds %struct.timespec, %struct.timespec* %262, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = load %struct.timespec*, %struct.timespec** %16, align 8
  %266 = getelementptr inbounds %struct.timespec, %struct.timespec* %265, i64 1
  %267 = getelementptr inbounds %struct.timespec, %struct.timespec* %266, i32 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = sub nsw i64 %264, %268
  store i64 %269, i64* %20, align 8
  store %struct.timespec* null, %struct.timespec** %21, align 8
  %270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %22, i64 0, i64 0
  %271 = load %struct.timespec*, %struct.timespec** %16, align 8
  %272 = getelementptr inbounds %struct.timespec, %struct.timespec* %271, i64 0
  %273 = bitcast %struct.timespec* %270 to i8*
  %274 = bitcast %struct.timespec* %272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %273, i8* align 8 %274, i64 16, i1 false)
  %275 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %22, i64 0, i64 1
  %276 = load %struct.timespec*, %struct.timespec** %16, align 8
  %277 = getelementptr inbounds %struct.timespec, %struct.timespec* %276, i64 1
  %278 = bitcast %struct.timespec* %275 to i8*
  %279 = bitcast %struct.timespec* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %278, i8* align 8 %279, i64 16, i1 false)
  %280 = load i8, i8* %17, align 1
  %281 = trunc i8 %280 to i1
  br i1 %281, label %282, label %293

282:                                              ; preds = %253
  %283 = load i64, i64* %19, align 8
  %284 = icmp eq i64 %283, 1
  br i1 %284, label %285, label %293

285:                                              ; preds = %282
  %286 = call i64 @get_stat_atime_ns(%struct.stat* %11) #15
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %293

288:                                              ; preds = %285
  %289 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %22, i64 0, i64 0
  store %struct.timespec* %289, %struct.timespec** %21, align 8
  %290 = load %struct.timespec*, %struct.timespec** %21, align 8
  %291 = getelementptr inbounds %struct.timespec, %struct.timespec* %290, i64 0
  %292 = getelementptr inbounds %struct.timespec, %struct.timespec* %291, i32 0, i32 1
  store i64 0, i64* %292, align 8
  br label %293

293:                                              ; preds = %288, %285, %282, %253
  %294 = load i8, i8* %18, align 1
  %295 = trunc i8 %294 to i1
  br i1 %295, label %296, label %307

296:                                              ; preds = %293
  %297 = load i64, i64* %20, align 8
  %298 = icmp eq i64 %297, 1
  br i1 %298, label %299, label %307

299:                                              ; preds = %296
  %300 = call i64 @get_stat_mtime_ns(%struct.stat* %11) #15
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %307

302:                                              ; preds = %299
  %303 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %22, i64 0, i64 0
  store %struct.timespec* %303, %struct.timespec** %21, align 8
  %304 = load %struct.timespec*, %struct.timespec** %21, align 8
  %305 = getelementptr inbounds %struct.timespec, %struct.timespec* %304, i64 1
  %306 = getelementptr inbounds %struct.timespec, %struct.timespec* %305, i32 0, i32 1
  store i64 0, i64* %306, align 8
  br label %307

307:                                              ; preds = %302, %299, %296, %293
  %308 = load %struct.timespec*, %struct.timespec** %21, align 8
  %309 = icmp ne %struct.timespec* %308, null
  br i1 %309, label %310, label %314

310:                                              ; preds = %307
  %311 = load i32, i32* %5, align 4
  %312 = load %struct.timespec*, %struct.timespec** %21, align 8
  %313 = call i32 @futimesat(i32 %311, i8* null, %struct.timespec* %312) #13
  br label %314

314:                                              ; preds = %310, %307
  br label %315

315:                                              ; preds = %314, %249, %228
  br label %316

316:                                              ; preds = %315, %225
  store i32 0, i32* %4, align 4
  br label %326

317:                                              ; preds = %220
  br label %318

318:                                              ; preds = %317
  %319 = load i8*, i8** %6, align 8
  %320 = icmp ne i8* %319, null
  br i1 %320, label %322, label %321

321:                                              ; preds = %318
  store i32 -1, i32* %4, align 4
  br label %326

322:                                              ; preds = %318
  %323 = load i8*, i8** %6, align 8
  %324 = load %struct.timespec*, %struct.timespec** %16, align 8
  %325 = call i32 @utimes(i8* %323, %struct.timespec* %324) #13
  store i32 %325, i32* %4, align 4
  br label %326

326:                                              ; preds = %322, %321, %316, %216, %179, %173, %152, %131, %74, %55, %48
  %327 = load i32, i32* %4, align 4
  ret i32 %327
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.timespec*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.timespec* %0, %struct.timespec** %3, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %6 = load %struct.timespec*, %struct.timespec** %3, align 8
  %7 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %7, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ne i64 %9, 1073741823
  br i1 %10, label %11, label %29

11:                                               ; preds = %1
  %12 = load %struct.timespec*, %struct.timespec** %3, align 8
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 0
  %14 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ne i64 %15, 1073741822
  br i1 %16, label %17, label %29

17:                                               ; preds = %11
  %18 = load %struct.timespec*, %struct.timespec** %3, align 8
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0
  %20 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp sle i64 0, %21
  br i1 %22, label %23, label %53

23:                                               ; preds = %17
  %24 = load %struct.timespec*, %struct.timespec** %3, align 8
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, 1000000000
  br i1 %28, label %29, label %53

29:                                               ; preds = %23, %11, %1
  %30 = load %struct.timespec*, %struct.timespec** %3, align 8
  %31 = getelementptr inbounds %struct.timespec, %struct.timespec* %30, i64 1
  %32 = getelementptr inbounds %struct.timespec, %struct.timespec* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp ne i64 %33, 1073741823
  br i1 %34, label %35, label %55

35:                                               ; preds = %29
  %36 = load %struct.timespec*, %struct.timespec** %3, align 8
  %37 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1
  %38 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ne i64 %39, 1073741822
  br i1 %40, label %41, label %55

41:                                               ; preds = %35
  %42 = load %struct.timespec*, %struct.timespec** %3, align 8
  %43 = getelementptr inbounds %struct.timespec, %struct.timespec* %42, i64 1
  %44 = getelementptr inbounds %struct.timespec, %struct.timespec* %43, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp sle i64 0, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %41
  %48 = load %struct.timespec*, %struct.timespec** %3, align 8
  %49 = getelementptr inbounds %struct.timespec, %struct.timespec* %48, i64 1
  %50 = getelementptr inbounds %struct.timespec, %struct.timespec* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %51, 1000000000
  br i1 %52, label %55, label %53

53:                                               ; preds = %47, %41, %23, %17
  %54 = call i32* @__errno_location() #16
  store i32 22, i32* %54, align 4
  store i32 -1, i32* %2, align 4
  br label %111

55:                                               ; preds = %47, %35, %29
  %56 = load %struct.timespec*, %struct.timespec** %3, align 8
  %57 = getelementptr inbounds %struct.timespec, %struct.timespec* %56, i64 0
  %58 = getelementptr inbounds %struct.timespec, %struct.timespec* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 1073741823
  br i1 %60, label %67, label %61

61:                                               ; preds = %55
  %62 = load %struct.timespec*, %struct.timespec** %3, align 8
  %63 = getelementptr inbounds %struct.timespec, %struct.timespec* %62, i64 0
  %64 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 1073741822
  br i1 %66, label %67, label %80

67:                                               ; preds = %61, %55
  %68 = load %struct.timespec*, %struct.timespec** %3, align 8
  %69 = getelementptr inbounds %struct.timespec, %struct.timespec* %68, i64 0
  %70 = getelementptr inbounds %struct.timespec, %struct.timespec* %69, i32 0, i32 0
  store i64 0, i64* %70, align 8
  store i32 1, i32* %4, align 4
  %71 = load %struct.timespec*, %struct.timespec** %3, align 8
  %72 = getelementptr inbounds %struct.timespec, %struct.timespec* %71, i64 0
  %73 = getelementptr inbounds %struct.timespec, %struct.timespec* %72, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 1073741822
  br i1 %75, label %76, label %79

76:                                               ; preds = %67
  %77 = load i32, i32* %5, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %76, %67
  br label %80

80:                                               ; preds = %79, %61
  %81 = load %struct.timespec*, %struct.timespec** %3, align 8
  %82 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 1
  %83 = getelementptr inbounds %struct.timespec, %struct.timespec* %82, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 1073741823
  br i1 %85, label %92, label %86

86:                                               ; preds = %80
  %87 = load %struct.timespec*, %struct.timespec** %3, align 8
  %88 = getelementptr inbounds %struct.timespec, %struct.timespec* %87, i64 1
  %89 = getelementptr inbounds %struct.timespec, %struct.timespec* %88, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 1073741822
  br i1 %91, label %92, label %105

92:                                               ; preds = %86, %80
  %93 = load %struct.timespec*, %struct.timespec** %3, align 8
  %94 = getelementptr inbounds %struct.timespec, %struct.timespec* %93, i64 1
  %95 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i32 0, i32 0
  store i64 0, i64* %95, align 8
  store i32 1, i32* %4, align 4
  %96 = load %struct.timespec*, %struct.timespec** %3, align 8
  %97 = getelementptr inbounds %struct.timespec, %struct.timespec* %96, i64 1
  %98 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 1073741822
  br i1 %100, label %101, label %104

101:                                              ; preds = %92
  %102 = load i32, i32* %5, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %5, align 4
  br label %104

104:                                              ; preds = %101, %92
  br label %105

105:                                              ; preds = %104, %86
  %106 = load i32, i32* %4, align 4
  %107 = load i32, i32* %5, align 4
  %108 = icmp eq i32 %107, 1
  %109 = zext i1 %108 to i32
  %110 = add nsw i32 %106, %109
  store i32 %110, i32* %2, align 4
  br label %111

111:                                              ; preds = %105, %53
  %112 = load i32, i32* %2, align 4
  ret i32 %112
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %0, %struct.timespec** %1) #3 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.stat*, align 8
  %5 = alloca %struct.timespec**, align 8
  %6 = alloca %struct.timespec*, align 8
  %7 = alloca %struct.timespec, align 8
  %8 = alloca %struct.timespec, align 8
  store %struct.stat* %0, %struct.stat** %4, align 8
  store %struct.timespec** %1, %struct.timespec*** %5, align 8
  %9 = load %struct.timespec**, %struct.timespec*** %5, align 8
  %10 = load %struct.timespec*, %struct.timespec** %9, align 8
  store %struct.timespec* %10, %struct.timespec** %6, align 8
  %11 = load %struct.timespec*, %struct.timespec** %6, align 8
  %12 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 1073741822
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = load %struct.timespec*, %struct.timespec** %6, align 8
  %18 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 1
  %19 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 1073741822
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i1 true, i1* %3, align 1
  br label %94

23:                                               ; preds = %16, %2
  %24 = load %struct.timespec*, %struct.timespec** %6, align 8
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0
  %26 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 1073741823
  br i1 %28, label %29, label %37

29:                                               ; preds = %23
  %30 = load %struct.timespec*, %struct.timespec** %6, align 8
  %31 = getelementptr inbounds %struct.timespec, %struct.timespec* %30, i64 1
  %32 = getelementptr inbounds %struct.timespec, %struct.timespec* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 1073741823
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load %struct.timespec**, %struct.timespec*** %5, align 8
  store %struct.timespec* null, %struct.timespec** %36, align 8
  store i1 false, i1* %3, align 1
  br label %94

37:                                               ; preds = %29, %23
  %38 = load %struct.timespec*, %struct.timespec** %6, align 8
  %39 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 0
  %40 = getelementptr inbounds %struct.timespec, %struct.timespec* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 1073741822
  br i1 %42, label %43, label %55

43:                                               ; preds = %37
  %44 = load %struct.timespec*, %struct.timespec** %6, align 8
  %45 = getelementptr inbounds %struct.timespec, %struct.timespec* %44, i64 0
  %46 = load %struct.stat*, %struct.stat** %4, align 8
  %47 = call { i64, i64 } @get_stat_atime(%struct.stat* %46) #15
  %48 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 0
  %50 = extractvalue { i64, i64 } %47, 0
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %48, i32 0, i32 1
  %52 = extractvalue { i64, i64 } %47, 1
  store i64 %52, i64* %51, align 8
  %53 = bitcast %struct.timespec* %45 to i8*
  %54 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  br label %65

55:                                               ; preds = %37
  %56 = load %struct.timespec*, %struct.timespec** %6, align 8
  %57 = getelementptr inbounds %struct.timespec, %struct.timespec* %56, i64 0
  %58 = getelementptr inbounds %struct.timespec, %struct.timespec* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 1073741823
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = load %struct.timespec*, %struct.timespec** %6, align 8
  %63 = getelementptr inbounds %struct.timespec, %struct.timespec* %62, i64 0
  call void @gettime(%struct.timespec* %63)
  br label %64

64:                                               ; preds = %61, %55
  br label %65

65:                                               ; preds = %64, %43
  %66 = load %struct.timespec*, %struct.timespec** %6, align 8
  %67 = getelementptr inbounds %struct.timespec, %struct.timespec* %66, i64 1
  %68 = getelementptr inbounds %struct.timespec, %struct.timespec* %67, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 1073741822
  br i1 %70, label %71, label %83

71:                                               ; preds = %65
  %72 = load %struct.timespec*, %struct.timespec** %6, align 8
  %73 = getelementptr inbounds %struct.timespec, %struct.timespec* %72, i64 1
  %74 = load %struct.stat*, %struct.stat** %4, align 8
  %75 = call { i64, i64 } @get_stat_mtime(%struct.stat* %74) #15
  %76 = bitcast %struct.timespec* %8 to { i64, i64 }*
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %76, i32 0, i32 0
  %78 = extractvalue { i64, i64 } %75, 0
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %76, i32 0, i32 1
  %80 = extractvalue { i64, i64 } %75, 1
  store i64 %80, i64* %79, align 8
  %81 = bitcast %struct.timespec* %73 to i8*
  %82 = bitcast %struct.timespec* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 16, i1 false)
  br label %93

83:                                               ; preds = %65
  %84 = load %struct.timespec*, %struct.timespec** %6, align 8
  %85 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1
  %86 = getelementptr inbounds %struct.timespec, %struct.timespec* %85, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, 1073741823
  br i1 %88, label %89, label %92

89:                                               ; preds = %83
  %90 = load %struct.timespec*, %struct.timespec** %6, align 8
  %91 = getelementptr inbounds %struct.timespec, %struct.timespec* %90, i64 1
  call void @gettime(%struct.timespec* %91)
  br label %92

92:                                               ; preds = %89, %83
  br label %93

93:                                               ; preds = %92, %71
  store i1 false, i1* %3, align 1
  br label %94

94:                                               ; preds = %93, %35, %22
  %95 = load i1, i1* %3, align 1
  ret i1 %95
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #1

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens(i8* %0, %struct.timespec* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.timespec*, align 8
  store i8* %0, i8** %3, align 8
  store %struct.timespec* %1, %struct.timespec** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load %struct.timespec*, %struct.timespec** %4, align 8
  %7 = call i32 @fdutimens(i32 -1, i8* %5, %struct.timespec* %6)
  ret i32 %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @lutimens(i8* %0, %struct.timespec* %1) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.timespec*, align 8
  %6 = alloca [2 x %struct.timespec], align 16
  %7 = alloca %struct.timespec*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.stat, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.timespec, align 8
  %12 = alloca %struct.timespec, align 8
  store i8* %0, i8** %4, align 8
  store %struct.timespec* %1, %struct.timespec** %5, align 8
  %13 = load %struct.timespec*, %struct.timespec** %5, align 8
  %14 = icmp ne %struct.timespec* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %6, i64 0, i64 0
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %15
  %19 = phi %struct.timespec* [ %16, %15 ], [ null, %17 ]
  store %struct.timespec* %19, %struct.timespec** %7, align 8
  store i32 0, i32* %8, align 4
  %20 = load %struct.timespec*, %struct.timespec** %7, align 8
  %21 = icmp ne %struct.timespec* %20, null
  br i1 %21, label %22, label %35

22:                                               ; preds = %18
  %23 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %6, i64 0, i64 0
  %24 = load %struct.timespec*, %struct.timespec** %5, align 8
  %25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0
  %26 = bitcast %struct.timespec* %23 to i8*
  %27 = bitcast %struct.timespec* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %6, i64 0, i64 1
  %29 = load %struct.timespec*, %struct.timespec** %5, align 8
  %30 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1
  %31 = bitcast %struct.timespec* %28 to i8*
  %32 = bitcast %struct.timespec* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %31, i8* align 8 %32, i64 16, i1 false)
  %33 = load %struct.timespec*, %struct.timespec** %7, align 8
  %34 = call i32 @validate_timespec(%struct.timespec* %33)
  store i32 %34, i32* %8, align 4
  br label %35

35:                                               ; preds = %22, %18
  %36 = load i32, i32* %8, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 -1, i32* %3, align 4
  br label %143

39:                                               ; preds = %35
  %40 = load i32, i32* @lutimensat_works_really, align 4
  %41 = icmp sle i32 0, %40
  br i1 %41, label %42, label %106

42:                                               ; preds = %39
  %43 = load i32, i32* %8, align 4
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %45, label %88

45:                                               ; preds = %42
  %46 = load i8*, i8** %4, align 8
  %47 = call i32 @lstat(i8* %46, %struct.stat* %9) #13
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 -1, i32* %3, align 4
  br label %143

50:                                               ; preds = %45
  %51 = load %struct.timespec*, %struct.timespec** %7, align 8
  %52 = getelementptr inbounds %struct.timespec, %struct.timespec* %51, i64 0
  %53 = getelementptr inbounds %struct.timespec, %struct.timespec* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 1073741822
  br i1 %55, label %56, label %67

56:                                               ; preds = %50
  %57 = load %struct.timespec*, %struct.timespec** %7, align 8
  %58 = getelementptr inbounds %struct.timespec, %struct.timespec* %57, i64 0
  %59 = call { i64, i64 } @get_stat_atime(%struct.stat* %9) #15
  %60 = bitcast %struct.timespec* %11 to { i64, i64 }*
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 0
  %62 = extractvalue { i64, i64 } %59, 0
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %60, i32 0, i32 1
  %64 = extractvalue { i64, i64 } %59, 1
  store i64 %64, i64* %63, align 8
  %65 = bitcast %struct.timespec* %58 to i8*
  %66 = bitcast %struct.timespec* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 16, i1 false)
  br label %85

67:                                               ; preds = %50
  %68 = load %struct.timespec*, %struct.timespec** %7, align 8
  %69 = getelementptr inbounds %struct.timespec, %struct.timespec* %68, i64 1
  %70 = getelementptr inbounds %struct.timespec, %struct.timespec* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 1073741822
  br i1 %72, label %73, label %84

73:                                               ; preds = %67
  %74 = load %struct.timespec*, %struct.timespec** %7, align 8
  %75 = getelementptr inbounds %struct.timespec, %struct.timespec* %74, i64 1
  %76 = call { i64, i64 } @get_stat_mtime(%struct.stat* %9) #15
  %77 = bitcast %struct.timespec* %12 to { i64, i64 }*
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %77, i32 0, i32 0
  %79 = extractvalue { i64, i64 } %76, 0
  store i64 %79, i64* %78, align 8
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %77, i32 0, i32 1
  %81 = extractvalue { i64, i64 } %76, 1
  store i64 %81, i64* %80, align 8
  %82 = bitcast %struct.timespec* %75 to i8*
  %83 = bitcast %struct.timespec* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 16, i1 false)
  br label %84

84:                                               ; preds = %73, %67
  br label %85

85:                                               ; preds = %84, %56
  %86 = load i32, i32* %8, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %8, align 4
  br label %88

88:                                               ; preds = %85, %42
  %89 = load i8*, i8** %4, align 8
  %90 = load %struct.timespec*, %struct.timespec** %7, align 8
  %91 = call i32 @utimensat(i32 -100, i8* %89, %struct.timespec* %90, i32 256) #13
  store i32 %91, i32* %10, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp slt i32 0, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = call i32* @__errno_location() #16
  store i32 38, i32* %95, align 4
  br label %96

96:                                               ; preds = %94, %88
  %97 = load i32, i32* %10, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = call i32* @__errno_location() #16
  %101 = load i32, i32* %100, align 4
  %102 = icmp ne i32 %101, 38
  br i1 %102, label %103, label %105

103:                                              ; preds = %99, %96
  store i32 1, i32* @utimensat_works_really, align 4
  store i32 1, i32* @lutimensat_works_really, align 4
  %104 = load i32, i32* %10, align 4
  store i32 %104, i32* %3, align 4
  br label %143

105:                                              ; preds = %99
  br label %106

106:                                              ; preds = %105, %39
  store i32 -1, i32* @lutimensat_works_really, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %124

109:                                              ; preds = %106
  %110 = load i32, i32* %8, align 4
  %111 = icmp ne i32 %110, 3
  br i1 %111, label %112, label %117

112:                                              ; preds = %109
  %113 = load i8*, i8** %4, align 8
  %114 = call i32 @lstat(i8* %113, %struct.stat* %9) #13
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %112
  store i32 -1, i32* %3, align 4
  br label %143

117:                                              ; preds = %112, %109
  %118 = load %struct.timespec*, %struct.timespec** %7, align 8
  %119 = icmp ne %struct.timespec* %118, null
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = call zeroext i1 @update_timespec(%struct.stat* %9, %struct.timespec** %7)
  br i1 %121, label %122, label %123

122:                                              ; preds = %120
  store i32 0, i32* %3, align 4
  br label %143

123:                                              ; preds = %120, %117
  br label %124

124:                                              ; preds = %123, %106
  %125 = load i32, i32* %8, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %124
  %128 = load i8*, i8** %4, align 8
  %129 = call i32 @lstat(i8* %128, %struct.stat* %9) #13
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  store i32 -1, i32* %3, align 4
  br label %143

132:                                              ; preds = %127, %124
  %133 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 61440
  %136 = icmp eq i32 %135, 40960
  br i1 %136, label %141, label %137

137:                                              ; preds = %132
  %138 = load i8*, i8** %4, align 8
  %139 = load %struct.timespec*, %struct.timespec** %7, align 8
  %140 = call i32 @fdutimens(i32 -1, i8* %138, %struct.timespec* %139)
  store i32 %140, i32* %3, align 4
  br label %143

141:                                              ; preds = %132
  %142 = call i32* @__errno_location() #16
  store i32 38, i32* %142, align 4
  store i32 -1, i32* %3, align 4
  br label %143

143:                                              ; preds = %141, %137, %131, %122, %116, %103, %49, %38
  %144 = load i32, i32* %3, align 4
  ret i32 %144
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_arn(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, i8** %4, i64 %5) #3 {
  %7 = alloca %struct._IO_FILE*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %7, align 8
  store i8* %1, i8** %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i8** %4, i8*** %11, align 8
  store i64 %5, i64* %12, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %6
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %17 = load i8*, i8** %8, align 8
  %18 = load i8*, i8** %9, align 8
  %19 = load i8*, i8** %10, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.397, i64 0, i64 0), i8* %17, i8* %18, i8* %19)
  br label %26

21:                                               ; preds = %6
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %23 = load i8*, i8** %9, align 8
  %24 = load i8*, i8** %10, align 8
  %25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.398, i64 0, i64 0), i8* %23, i8* %24)
  br label %26

26:                                               ; preds = %21, %15
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %28 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.399, i64 0, i64 0)) #13
  %29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %28, i32 2018)
  %30 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.400, i64 0, i64 0)) #13
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %32 = call i32 @fputs_unlocked(i8* %30, %struct._IO_FILE* %31)
  %33 = load i64, i64* %12, align 8
  switch i64 %33, label %206 [
    i64 0, label %34
    i64 1, label %35
    i64 2, label %42
    i64 3, label %52
    i64 4, label %65
    i64 5, label %81
    i64 6, label %100
    i64 7, label %122
    i64 8, label %147
    i64 9, label %175
  ]

34:                                               ; preds = %26
  call void @abort() #14
  unreachable

35:                                               ; preds = %26
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %37 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.401, i64 0, i64 0)) #13
  %38 = load i8**, i8*** %11, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 0
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* %37, i8* %40)
  br label %237

42:                                               ; preds = %26
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.402, i64 0, i64 0)) #13
  %45 = load i8**, i8*** %11, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  %47 = load i8*, i8** %46, align 8
  %48 = load i8**, i8*** %11, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 1
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* %44, i8* %47, i8* %50)
  br label %237

52:                                               ; preds = %26
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %54 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.403, i64 0, i64 0)) #13
  %55 = load i8**, i8*** %11, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8**, i8*** %11, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i64 1
  %60 = load i8*, i8** %59, align 8
  %61 = load i8**, i8*** %11, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 2
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* %54, i8* %57, i8* %60, i8* %63)
  br label %237

65:                                               ; preds = %26
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %67 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.404, i64 0, i64 0)) #13
  %68 = load i8**, i8*** %11, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 0
  %70 = load i8*, i8** %69, align 8
  %71 = load i8**, i8*** %11, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i64 1
  %73 = load i8*, i8** %72, align 8
  %74 = load i8**, i8*** %11, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 2
  %76 = load i8*, i8** %75, align 8
  %77 = load i8**, i8*** %11, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 3
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* %67, i8* %70, i8* %73, i8* %76, i8* %79)
  br label %237

81:                                               ; preds = %26
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %83 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.405, i64 0, i64 0)) #13
  %84 = load i8**, i8*** %11, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 0
  %86 = load i8*, i8** %85, align 8
  %87 = load i8**, i8*** %11, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 1
  %89 = load i8*, i8** %88, align 8
  %90 = load i8**, i8*** %11, align 8
  %91 = getelementptr inbounds i8*, i8** %90, i64 2
  %92 = load i8*, i8** %91, align 8
  %93 = load i8**, i8*** %11, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 3
  %95 = load i8*, i8** %94, align 8
  %96 = load i8**, i8*** %11, align 8
  %97 = getelementptr inbounds i8*, i8** %96, i64 4
  %98 = load i8*, i8** %97, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* %83, i8* %86, i8* %89, i8* %92, i8* %95, i8* %98)
  br label %237

100:                                              ; preds = %26
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %102 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.406, i64 0, i64 0)) #13
  %103 = load i8**, i8*** %11, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 0
  %105 = load i8*, i8** %104, align 8
  %106 = load i8**, i8*** %11, align 8
  %107 = getelementptr inbounds i8*, i8** %106, i64 1
  %108 = load i8*, i8** %107, align 8
  %109 = load i8**, i8*** %11, align 8
  %110 = getelementptr inbounds i8*, i8** %109, i64 2
  %111 = load i8*, i8** %110, align 8
  %112 = load i8**, i8*** %11, align 8
  %113 = getelementptr inbounds i8*, i8** %112, i64 3
  %114 = load i8*, i8** %113, align 8
  %115 = load i8**, i8*** %11, align 8
  %116 = getelementptr inbounds i8*, i8** %115, i64 4
  %117 = load i8*, i8** %116, align 8
  %118 = load i8**, i8*** %11, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i64 5
  %120 = load i8*, i8** %119, align 8
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* %102, i8* %105, i8* %108, i8* %111, i8* %114, i8* %117, i8* %120)
  br label %237

122:                                              ; preds = %26
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %124 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.407, i64 0, i64 0)) #13
  %125 = load i8**, i8*** %11, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 0
  %127 = load i8*, i8** %126, align 8
  %128 = load i8**, i8*** %11, align 8
  %129 = getelementptr inbounds i8*, i8** %128, i64 1
  %130 = load i8*, i8** %129, align 8
  %131 = load i8**, i8*** %11, align 8
  %132 = getelementptr inbounds i8*, i8** %131, i64 2
  %133 = load i8*, i8** %132, align 8
  %134 = load i8**, i8*** %11, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i64 3
  %136 = load i8*, i8** %135, align 8
  %137 = load i8**, i8*** %11, align 8
  %138 = getelementptr inbounds i8*, i8** %137, i64 4
  %139 = load i8*, i8** %138, align 8
  %140 = load i8**, i8*** %11, align 8
  %141 = getelementptr inbounds i8*, i8** %140, i64 5
  %142 = load i8*, i8** %141, align 8
  %143 = load i8**, i8*** %11, align 8
  %144 = getelementptr inbounds i8*, i8** %143, i64 6
  %145 = load i8*, i8** %144, align 8
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %123, i8* %124, i8* %127, i8* %130, i8* %133, i8* %136, i8* %139, i8* %142, i8* %145)
  br label %237

147:                                              ; preds = %26
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %149 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.408, i64 0, i64 0)) #13
  %150 = load i8**, i8*** %11, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i64 0
  %152 = load i8*, i8** %151, align 8
  %153 = load i8**, i8*** %11, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 1
  %155 = load i8*, i8** %154, align 8
  %156 = load i8**, i8*** %11, align 8
  %157 = getelementptr inbounds i8*, i8** %156, i64 2
  %158 = load i8*, i8** %157, align 8
  %159 = load i8**, i8*** %11, align 8
  %160 = getelementptr inbounds i8*, i8** %159, i64 3
  %161 = load i8*, i8** %160, align 8
  %162 = load i8**, i8*** %11, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i64 4
  %164 = load i8*, i8** %163, align 8
  %165 = load i8**, i8*** %11, align 8
  %166 = getelementptr inbounds i8*, i8** %165, i64 5
  %167 = load i8*, i8** %166, align 8
  %168 = load i8**, i8*** %11, align 8
  %169 = getelementptr inbounds i8*, i8** %168, i64 6
  %170 = load i8*, i8** %169, align 8
  %171 = load i8**, i8*** %11, align 8
  %172 = getelementptr inbounds i8*, i8** %171, i64 7
  %173 = load i8*, i8** %172, align 8
  %174 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %148, i8* %149, i8* %152, i8* %155, i8* %158, i8* %161, i8* %164, i8* %167, i8* %170, i8* %173)
  br label %237

175:                                              ; preds = %26
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %177 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.409, i64 0, i64 0)) #13
  %178 = load i8**, i8*** %11, align 8
  %179 = getelementptr inbounds i8*, i8** %178, i64 0
  %180 = load i8*, i8** %179, align 8
  %181 = load i8**, i8*** %11, align 8
  %182 = getelementptr inbounds i8*, i8** %181, i64 1
  %183 = load i8*, i8** %182, align 8
  %184 = load i8**, i8*** %11, align 8
  %185 = getelementptr inbounds i8*, i8** %184, i64 2
  %186 = load i8*, i8** %185, align 8
  %187 = load i8**, i8*** %11, align 8
  %188 = getelementptr inbounds i8*, i8** %187, i64 3
  %189 = load i8*, i8** %188, align 8
  %190 = load i8**, i8*** %11, align 8
  %191 = getelementptr inbounds i8*, i8** %190, i64 4
  %192 = load i8*, i8** %191, align 8
  %193 = load i8**, i8*** %11, align 8
  %194 = getelementptr inbounds i8*, i8** %193, i64 5
  %195 = load i8*, i8** %194, align 8
  %196 = load i8**, i8*** %11, align 8
  %197 = getelementptr inbounds i8*, i8** %196, i64 6
  %198 = load i8*, i8** %197, align 8
  %199 = load i8**, i8*** %11, align 8
  %200 = getelementptr inbounds i8*, i8** %199, i64 7
  %201 = load i8*, i8** %200, align 8
  %202 = load i8**, i8*** %11, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i64 8
  %204 = load i8*, i8** %203, align 8
  %205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* %177, i8* %180, i8* %183, i8* %186, i8* %189, i8* %192, i8* %195, i8* %198, i8* %201, i8* %204)
  br label %237

206:                                              ; preds = %26
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %208 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.410, i64 0, i64 0)) #13
  %209 = load i8**, i8*** %11, align 8
  %210 = getelementptr inbounds i8*, i8** %209, i64 0
  %211 = load i8*, i8** %210, align 8
  %212 = load i8**, i8*** %11, align 8
  %213 = getelementptr inbounds i8*, i8** %212, i64 1
  %214 = load i8*, i8** %213, align 8
  %215 = load i8**, i8*** %11, align 8
  %216 = getelementptr inbounds i8*, i8** %215, i64 2
  %217 = load i8*, i8** %216, align 8
  %218 = load i8**, i8*** %11, align 8
  %219 = getelementptr inbounds i8*, i8** %218, i64 3
  %220 = load i8*, i8** %219, align 8
  %221 = load i8**, i8*** %11, align 8
  %222 = getelementptr inbounds i8*, i8** %221, i64 4
  %223 = load i8*, i8** %222, align 8
  %224 = load i8**, i8*** %11, align 8
  %225 = getelementptr inbounds i8*, i8** %224, i64 5
  %226 = load i8*, i8** %225, align 8
  %227 = load i8**, i8*** %11, align 8
  %228 = getelementptr inbounds i8*, i8** %227, i64 6
  %229 = load i8*, i8** %228, align 8
  %230 = load i8**, i8*** %11, align 8
  %231 = getelementptr inbounds i8*, i8** %230, i64 7
  %232 = load i8*, i8** %231, align 8
  %233 = load i8**, i8*** %11, align 8
  %234 = getelementptr inbounds i8*, i8** %233, i64 8
  %235 = load i8*, i8** %234, align 8
  %236 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* %208, i8* %211, i8* %214, i8* %217, i8* %220, i8* %223, i8* %226, i8* %229, i8* %232, i8* %235)
  br label %237

237:                                              ; preds = %206, %175, %147, %122, %100, %81, %65, %52, %42, %35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %4) #3 {
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.__va_list_tag*, align 8
  %11 = alloca i64, align 8
  %12 = alloca [10 x i8*], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store %struct.__va_list_tag* %4, %struct.__va_list_tag** %10, align 8
  store i64 0, i64* %11, align 8
  br label %13

13:                                               ; preds = %41, %5
  %14 = load i64, i64* %11, align 8
  %15 = icmp ult i64 %14, 10
  br i1 %15, label %16, label %38

16:                                               ; preds = %13
  %17 = load %struct.__va_list_tag*, %struct.__va_list_tag** %10, align 8
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ule i32 %19, 40
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr i8, i8* %23, i32 %19
  %25 = bitcast i8* %24 to i8**
  %26 = add i32 %19, 8
  store i32 %26, i32* %18, align 8
  br label %32

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %17, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to i8**
  %31 = getelementptr i8, i8* %29, i32 8
  store i8* %31, i8** %28, align 8
  br label %32

32:                                               ; preds = %27, %21
  %33 = phi i8** [ %25, %21 ], [ %30, %27 ]
  %34 = load i8*, i8** %33, align 8
  %35 = load i64, i64* %11, align 8
  %36 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 %35
  store i8* %34, i8** %36, align 8
  %37 = icmp ne i8* %34, null
  br label %38

38:                                               ; preds = %32, %13
  %39 = phi i1 [ false, %13 ], [ %37, %32 ]
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  br label %41

41:                                               ; preds = %40
  %42 = load i64, i64* %11, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %11, align 8
  br label %13, !llvm.loop !53

44:                                               ; preds = %38
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %46 = load i8*, i8** %7, align 8
  %47 = load i8*, i8** %8, align 8
  %48 = load i8*, i8** %9, align 8
  %49 = getelementptr inbounds [10 x i8*], [10 x i8*]* %12, i64 0, i64 0
  %50 = load i64, i64* %11, align 8
  call void @version_etc_arn(%struct._IO_FILE* %45, i8* %46, i8* %47, i8* %48, i8** %49, i64 %50)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @version_etc(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, ...) #3 {
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  %11 = bitcast %struct.__va_list_tag* %10 to i8*
  call void @llvm.va_start(i8* %11)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  call void @version_etc_va(%struct._IO_FILE* %12, i8* %13, i8* %14, i8* %15, %struct.__va_list_tag* %16)
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %9, i64 0, i64 0
  %18 = bitcast %struct.__va_list_tag* %17 to i8*
  call void @llvm.va_end(i8* %18)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @can_write_any_file() #3 {
  %1 = alloca i8, align 1
  %2 = load i8, i8* @can_write_any_file.initialized, align 1
  %3 = trunc i8 %2 to i1
  br i1 %3, label %11, label %4

4:                                                ; preds = %0
  store i8 0, i8* %1, align 1
  %5 = call i32 @geteuid() #13
  %6 = icmp eq i32 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %1, align 1
  %8 = load i8, i8* %1, align 1
  %9 = trunc i8 %8 to i1
  %10 = zext i1 %9 to i8
  store i8 %10, i8* @can_write_any_file.can_write, align 1
  store i8 1, i8* @can_write_any_file.initialized, align 1
  br label %11

11:                                               ; preds = %4, %0
  %12 = load i8, i8* @can_write_any_file.can_write, align 1
  %13 = trunc i8 %12 to i1
  ret i1 %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xmalloc(i64 %0) #3 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  store i64 %0, i64* %2, align 8
  %4 = load i64, i64* %2, align 8
  %5 = call noalias i8* @malloc(i64 %4) #13
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = load i64, i64* %2, align 8
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @xalloc_die() #17
  unreachable

12:                                               ; preds = %8, %1
  %13 = load i8*, i8** %3, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xnrealloc(i8* %0, i64 %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i64, i64* %6, align 8
  %8 = udiv i64 9223372036854775807, %7
  %9 = load i64, i64* %5, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @xalloc_die() #17
  unreachable

12:                                               ; preds = %3
  %13 = load i8*, i8** %4, align 8
  %14 = load i64, i64* %5, align 8
  %15 = load i64, i64* %6, align 8
  %16 = mul i64 %14, %15
  %17 = call i8* @xrealloc(i8* %13, i64 %16)
  ret i8* %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xrealloc(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = load i8*, i8** %4, align 8
  call void @free(i8* %12) #13
  store i8* null, i8** %3, align 8
  br label %25

13:                                               ; preds = %8, %2
  %14 = load i8*, i8** %4, align 8
  %15 = load i64, i64* %5, align 8
  %16 = call i8* @realloc(i8* %14, i64 %15) #13
  store i8* %16, i8** %4, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = load i64, i64* %5, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @xalloc_die() #17
  unreachable

23:                                               ; preds = %19, %13
  %24 = load i8*, i8** %4, align 8
  store i8* %24, i8** %3, align 8
  br label %25

25:                                               ; preds = %23, %11
  %26 = load i8*, i8** %3, align 8
  ret i8* %26
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @x2nrealloc(i8* %0, i64* %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %3
  %13 = load i64, i64* %7, align 8
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = load i64, i64* %6, align 8
  %17 = udiv i64 128, %16
  store i64 %17, i64* %7, align 8
  %18 = load i64, i64* %7, align 8
  %19 = icmp ne i64 %18, 0
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = load i64, i64* %7, align 8
  %24 = add i64 %23, %22
  store i64 %24, i64* %7, align 8
  br label %25

25:                                               ; preds = %15, %12
  %26 = load i64, i64* %6, align 8
  %27 = udiv i64 9223372036854775807, %26
  %28 = load i64, i64* %7, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  call void @xalloc_die() #17
  unreachable

31:                                               ; preds = %25
  br label %44

32:                                               ; preds = %3
  %33 = load i64, i64* %6, align 8
  %34 = udiv i64 6148914691236517204, %33
  %35 = load i64, i64* %7, align 8
  %36 = icmp ule i64 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  call void @xalloc_die() #17
  unreachable

38:                                               ; preds = %32
  %39 = load i64, i64* %7, align 8
  %40 = udiv i64 %39, 2
  %41 = add i64 %40, 1
  %42 = load i64, i64* %7, align 8
  %43 = add i64 %42, %41
  store i64 %43, i64* %7, align 8
  br label %44

44:                                               ; preds = %38, %31
  %45 = load i64, i64* %7, align 8
  %46 = load i64*, i64** %5, align 8
  store i64 %45, i64* %46, align 8
  %47 = load i8*, i8** %4, align 8
  %48 = load i64, i64* %7, align 8
  %49 = load i64, i64* %6, align 8
  %50 = mul i64 %48, %49
  %51 = call i8* @xrealloc(i8* %47, i64 %50)
  ret i8* %51
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xcharalloc(i64 %0) #3 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call noalias i8* @xmalloc(i64 %3)
  ret i8* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xmemdup(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = call noalias i8* @xmalloc(i64 %5)
  %7 = load i8*, i8** %3, align 8
  %8 = load i64, i64* %4, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false)
  ret i8* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noalias i8* @xstrdup(i8* %0) #3 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i64 @strlen(i8* %4) #15
  %6 = add i64 %5, 1
  %7 = call i8* @xmemdup(i8* %3, i64 %6)
  ret i8* %7
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @xalloc_die() #0 {
  %1 = load volatile i32, i32* @exit_failure, align 4
  %2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.431, i64 0, i64 0)) #13
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.432, i64 0, i64 0), i8* %2)
  call void @abort() #14
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @yesno() #3 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i8* null, i8** %2, align 8
  store i64 0, i64* %3, align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %6 = call i64 @getline(i8** %2, i64* %3, %struct._IO_FILE* %5)
  store i64 %6, i64* %4, align 8
  %7 = load i64, i64* %4, align 8
  %8 = icmp sle i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %0
  store i8 0, i8* %1, align 1
  br label %28

10:                                               ; preds = %0
  %11 = load i8*, i8** %2, align 8
  %12 = load i64, i64* %4, align 8
  %13 = sub nsw i64 %12, 1
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp eq i32 %16, 10
  br i1 %17, label %18, label %23

18:                                               ; preds = %10
  %19 = load i8*, i8** %2, align 8
  %20 = load i64, i64* %4, align 8
  %21 = sub nsw i64 %20, 1
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  store i8 0, i8* %22, align 1
  br label %23

23:                                               ; preds = %18, %10
  %24 = load i8*, i8** %2, align 8
  %25 = call i32 @rpmatch(i8* %24) #13
  %26 = icmp slt i32 0, %25
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %1, align 1
  br label %28

28:                                               ; preds = %23, %9
  %29 = load i8*, i8** %2, align 8
  call void @free(i8* %29) #13
  %30 = load i8, i8* %1, align 1
  %31 = trunc i8 %30 to i1
  ret i1 %31
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl(i32 %0, i32 %1, ...) #3 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 -1, i32* %6, align 4
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %12 = bitcast %struct.__va_list_tag* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = load i32, i32* %4, align 4
  switch i32 %13, label %86 [
    i32 1030, label %14
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 16
  %18 = icmp ule i32 %17, 40
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 3
  %21 = load i8*, i8** %20, align 16
  %22 = getelementptr i8, i8* %21, i32 %17
  %23 = bitcast i8* %22 to i32*
  %24 = add i32 %17, 8
  store i32 %24, i32* %16, align 16
  br label %30

25:                                               ; preds = %14
  %26 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %15, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr i8, i8* %27, i32 8
  store i8* %29, i8** %26, align 8
  br label %30

30:                                               ; preds = %25, %19
  %31 = phi i32* [ %23, %19 ], [ %28, %25 ]
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %7, align 4
  %33 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4
  %34 = icmp sle i32 0, %33
  br i1 %34, label %35, label %56

35:                                               ; preds = %30
  %36 = load i32, i32* %3, align 4
  %37 = load i32, i32* %4, align 4
  %38 = load i32, i32* %7, align 4
  %39 = call i32 (i32, i32, ...) @fcntl(i32 %36, i32 %37, i32 %38)
  store i32 %39, i32* %6, align 4
  %40 = load i32, i32* %6, align 4
  %41 = icmp sle i32 0, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = call i32* @__errno_location() #16
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 22
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %35
  store i32 1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4
  br label %55

47:                                               ; preds = %42
  %48 = load i32, i32* %3, align 4
  %49 = load i32, i32* %7, align 4
  %50 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %48, i32 0, i32 %49)
  store i32 %50, i32* %6, align 4
  %51 = load i32, i32* %6, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %47
  br label %109

54:                                               ; preds = %47
  store i32 -1, i32* @rpl_fcntl.have_dupfd_cloexec, align 4
  br label %55

55:                                               ; preds = %54, %46
  br label %60

56:                                               ; preds = %30
  %57 = load i32, i32* %3, align 4
  %58 = load i32, i32* %7, align 4
  %59 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %57, i32 0, i32 %58)
  store i32 %59, i32* %6, align 4
  br label %60

60:                                               ; preds = %56, %55
  %61 = load i32, i32* %6, align 4
  %62 = icmp sle i32 0, %61
  br i1 %62, label %63, label %85

63:                                               ; preds = %60
  %64 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %85

66:                                               ; preds = %63
  %67 = load i32, i32* %6, align 4
  %68 = call i32 (i32, i32, ...) @fcntl(i32 %67, i32 1)
  store i32 %68, i32* %8, align 4
  %69 = load i32, i32* %8, align 4
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = load i32, i32* %6, align 4
  %73 = load i32, i32* %8, align 4
  %74 = or i32 %73, 1
  %75 = call i32 (i32, i32, ...) @fcntl(i32 %72, i32 2, i32 %74)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %84

77:                                               ; preds = %71, %66
  %78 = call i32* @__errno_location() #16
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %9, align 4
  %80 = load i32, i32* %6, align 4
  %81 = call i32 @close(i32 %80)
  %82 = load i32, i32* %9, align 4
  %83 = call i32* @__errno_location() #16
  store i32 %82, i32* %83, align 4
  store i32 -1, i32* %6, align 4
  br label %84

84:                                               ; preds = %77, %71
  br label %85

85:                                               ; preds = %84, %63, %60
  br label %109

86:                                               ; preds = %2
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %88 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 16
  %90 = icmp ule i32 %89, 40
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 3
  %93 = load i8*, i8** %92, align 16
  %94 = getelementptr i8, i8* %93, i32 %89
  %95 = bitcast i8* %94 to i8**
  %96 = add i32 %89, 8
  store i32 %96, i32* %88, align 16
  br label %102

97:                                               ; preds = %86
  %98 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %87, i32 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast i8* %99 to i8**
  %101 = getelementptr i8, i8* %99, i32 8
  store i8* %101, i8** %98, align 8
  br label %102

102:                                              ; preds = %97, %91
  %103 = phi i8** [ %95, %91 ], [ %100, %97 ]
  %104 = load i8*, i8** %103, align 8
  store i8* %104, i8** %10, align 8
  %105 = load i32, i32* %3, align 4
  %106 = load i32, i32* %4, align 4
  %107 = load i8*, i8** %10, align 8
  %108 = call i32 (i32, i32, ...) @fcntl(i32 %105, i32 %106, i8* %107)
  store i32 %108, i32* %6, align 4
  br label %109

109:                                              ; preds = %102, %85, %53
  %110 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %111 = bitcast %struct.__va_list_tag* %110 to i8*
  call void @llvm.va_end(i8* %111)
  %112 = load i32, i32* %6, align 4
  ret i32 %112
}

declare dso_local i32 @fcntl(i32, i32, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fflush(%struct._IO_FILE* %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = call i32 @__freading(%struct._IO_FILE* %7) #13
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6, %1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = call i32 @fflush(%struct._IO_FILE* %11)
  store i32 %12, i32* %2, align 4
  br label %17

13:                                               ; preds = %6
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %14)
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @fflush(%struct._IO_FILE* %15)
  store i32 %16, i32* %2, align 4
  br label %17

17:                                               ; preds = %13, %10
  %18 = load i32, i32* %2, align 4
  ret i32 %18
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #1

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %0) #3 {
  %2 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %2, align 8
  %10 = call i32 @rpl_fseeko(%struct._IO_FILE* %9, i64 0, i32 1)
  br label %11

11:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @freadahead(%struct._IO_FILE* %0) #8 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %5 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5
  %6 = load i8*, i8** %5, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %7, i32 0, i32 4
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ugt i8* %6, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  store i64 0, i64* %2, align 8
  br label %41

12:                                               ; preds = %1
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %14 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %17 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %16, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %15 to i64
  %20 = ptrtoint i8* %18 to i64
  %21 = sub i64 %19, %20
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %23 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 256
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %12
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %29 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %28, i32 0, i32 11
  %30 = load i8*, i8** %29, align 8
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %32 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %31, i32 0, i32 9
  %33 = load i8*, i8** %32, align 8
  %34 = ptrtoint i8* %30 to i64
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %34, %35
  br label %38

37:                                               ; preds = %12
  br label %38

38:                                               ; preds = %37, %27
  %39 = phi i64 [ %36, %27 ], [ 0, %37 ]
  %40 = add nsw i64 %21, %39
  store i64 %40, i64* %2, align 8
  br label %41

41:                                               ; preds = %38, %11
  %42 = load i64, i64* %2, align 8
  ret i64 %42
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fseeko(%struct._IO_FILE* nonnull %0, i64 %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %11, %14
  br i1 %15, label %16, label %46

16:                                               ; preds = %3
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %18 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 5
  %19 = load i8*, i8** %18, align 8
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %21 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %20, i32 0, i32 4
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %19, %22
  br i1 %23, label %24, label %46

24:                                               ; preds = %16
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %26 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %25, i32 0, i32 9
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %31 = call i32 @fileno(%struct._IO_FILE* %30) #13
  %32 = load i64, i64* %6, align 8
  %33 = load i32, i32* %7, align 4
  %34 = call i64 @lseek(i32 %31, i64 %32, i32 %33) #13
  store i64 %34, i64* %8, align 8
  %35 = load i64, i64* %8, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  store i32 -1, i32* %4, align 4
  br label %51

38:                                               ; preds = %29
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %40 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, -17
  store i32 %42, i32* %40, align 8
  %43 = load i64, i64* %8, align 8
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %45 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %44, i32 0, i32 21
  store i64 %43, i64* %45, align 8
  store i32 0, i32* %4, align 4
  br label %51

46:                                               ; preds = %24, %16, %3
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %48 = load i64, i64* %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = call i32 @fseeko(%struct._IO_FILE* %47, i64 %48, i32 %49)
  store i32 %50, i32* %4, align 4
  br label %51

51:                                               ; preds = %46, %38, %37
  %52 = load i32, i32* %4, align 4
  ret i32 %52
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #1

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rpl_mbrtowc(i32* %0, i8* %1, i64 %2, %struct.__mbstate_t* %3) #3 {
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.__mbstate_t*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  store i32* %0, i32** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %9, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %4
  store i32* %11, i32** %6, align 8
  br label %16

16:                                               ; preds = %15, %4
  %17 = load i32*, i32** %6, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = load i64, i64* %8, align 8
  %20 = load %struct.__mbstate_t*, %struct.__mbstate_t** %9, align 8
  %21 = call i64 @mbrtowc(i32* %17, i8* %18, i64 %19, %struct.__mbstate_t* %20) #13
  store i64 %21, i64* %10, align 8
  %22 = load i64, i64* %10, align 8
  %23 = icmp ule i64 -2, %22
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = load i64, i64* %8, align 8
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = call zeroext i1 @hard_locale(i32 0)
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = load i8*, i8** %7, align 8
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %12, align 1
  %32 = load i8, i8* %12, align 1
  %33 = zext i8 %32 to i32
  %34 = load i32*, i32** %6, align 8
  store i32 %33, i32* %34, align 4
  store i64 1, i64* %5, align 8
  br label %37

35:                                               ; preds = %27, %24, %16
  %36 = load i64, i64* %10, align 8
  store i64 %36, i64* %5, align 8
  br label %37

37:                                               ; preds = %35, %29
  %38 = load i64, i64* %5, align 8
  ret i64 %38
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_permission_context(%struct.permission_context* %0) #3 {
  %2 = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %0, %struct.permission_context** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %3) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.permission_context*, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store %struct.permission_context* %3, %struct.permission_context** %8, align 8
  %9 = load %struct.permission_context*, %struct.permission_context** %8, align 8
  %10 = bitcast %struct.permission_context* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 4, i1 false)
  %11 = load i32, i32* %7, align 4
  %12 = load %struct.permission_context*, %struct.permission_context** %8, align 8
  %13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 0
  store i32 %11, i32* %13, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @chmod_or_fchmod(i8* %0, i32 %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = load i32, i32* %6, align 4
  %9 = icmp ne i32 %8, -1
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = load i32, i32* %6, align 4
  %12 = load i32, i32* %7, align 4
  %13 = call i32 @fchmod(i32 %11, i32 %12) #13
  store i32 %13, i32* %4, align 4
  br label %18

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i32, i32* %7, align 4
  %17 = call i32 @chmod(i8* %15, i32 %16) #13
  store i32 %17, i32* %4, align 4
  br label %18

18:                                               ; preds = %14, %10
  %19 = load i32, i32* %4, align 4
  ret i32 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_permissions(%struct.permission_context* %0, i8* %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.permission_context*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.permission_context* %0, %struct.permission_context** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8 0, i8* %8, align 1
  store i8 0, i8* %10, align 1
  store i32 0, i32* %11, align 4
  store i8 1, i8* %9, align 1
  %13 = load i8, i8* %9, align 1
  %14 = trunc i8 %13 to i1
  br i1 %14, label %15, label %26

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  %17 = load i32, i32* %7, align 4
  %18 = load %struct.permission_context*, %struct.permission_context** %5, align 8
  %19 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @chmod_or_fchmod(i8* %16, i32 %17, i32 %20)
  store i32 %21, i32* %11, align 4
  %22 = load i32, i32* %11, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %15
  store i32 -1, i32* %4, align 4
  br label %55

25:                                               ; preds = %15
  br label %26

26:                                               ; preds = %25, %3
  %27 = load i8, i8* %10, align 1
  %28 = trunc i8 %27 to i1
  br i1 %28, label %29, label %53

29:                                               ; preds = %26
  %30 = load i8, i8* %9, align 1
  %31 = trunc i8 %30 to i1
  br i1 %31, label %53, label %32

32:                                               ; preds = %29
  %33 = load i32, i32* %11, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = call i32* @__errno_location() #16
  %37 = load i32, i32* %36, align 4
  br label %39

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %35
  %40 = phi i32 [ %37, %35 ], [ 0, %38 ]
  store i32 %40, i32* %12, align 4
  %41 = load i8*, i8** %6, align 8
  %42 = load i32, i32* %7, align 4
  %43 = load %struct.permission_context*, %struct.permission_context** %5, align 8
  %44 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @chmod_or_fchmod(i8* %41, i32 %42, i32 %45)
  store i32 %46, i32* %11, align 4
  %47 = load i32, i32* %12, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %39
  %50 = load i32, i32* %12, align 4
  %51 = call i32* @__errno_location() #16
  store i32 %50, i32* %51, align 4
  store i32 -1, i32* %11, align 4
  br label %52

52:                                               ; preds = %49, %39
  br label %53

53:                                               ; preds = %52, %29, %26
  %54 = load i32, i32* %11, align 4
  store i32 %54, i32* %4, align 4
  br label %55

55:                                               ; preds = %53, %24
  %56 = load i32, i32* %4, align 4
  ret i32 %56
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @rotr_sz(i64 %0, i32 %1) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i64, i64* %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = zext i32 %6 to i64
  %8 = lshr i64 %5, %7
  %9 = load i64, i64* %3, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = sub i64 64, %11
  %13 = shl i64 %9, %12
  %14 = or i64 %8, %13
  ret i64 %14
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i32 @c_strcasecmp(i8* %0, i8* %1) #8 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = load i8*, i8** %4, align 8
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %7, align 8
  %14 = icmp eq i8* %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %49

16:                                               ; preds = %2
  br label %17

17:                                               ; preds = %37, %16
  %18 = load i8*, i8** %6, align 8
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = call i32 @c_tolower(i32 %20)
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %8, align 1
  %23 = load i8*, i8** %7, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = call i32 @c_tolower(i32 %25)
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %9, align 1
  %28 = load i8, i8* %8, align 1
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %17
  br label %43

32:                                               ; preds = %17
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %6, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 1
  store i8* %36, i8** %7, align 8
  br label %37

37:                                               ; preds = %32
  %38 = load i8, i8* %8, align 1
  %39 = zext i8 %38 to i32
  %40 = load i8, i8* %9, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %17, label %43, !llvm.loop !54

43:                                               ; preds = %37, %31
  %44 = load i8, i8* %8, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8, i8* %9, align 1
  %47 = zext i8 %46 to i32
  %48 = sub nsw i32 %45, %47
  store i32 %48, i32* %3, align 4
  br label %49

49:                                               ; preds = %43, %15
  %50 = load i32, i32* %3, align 4
  ret i32 %50
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @close_stream(%struct._IO_FILE* %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = call i64 @__fpending(%struct._IO_FILE* %7) #13
  %9 = icmp ne i64 %8, 0
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %4, align 1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #13
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %5, align 1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @rpl_fclose(%struct._IO_FILE* %15)
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %6, align 1
  %19 = load i8, i8* %5, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %31, label %21

21:                                               ; preds = %1
  %22 = load i8, i8* %6, align 1
  %23 = trunc i8 %22 to i1
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = load i8, i8* %4, align 1
  %26 = trunc i8 %25 to i1
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = call i32* @__errno_location() #16
  %29 = load i32, i32* %28, align 4
  %30 = icmp ne i32 %29, 9
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %24, %1
  %32 = load i8, i8* %6, align 1
  %33 = trunc i8 %32 to i1
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call i32* @__errno_location() #16
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %34, %31
  store i32 -1, i32* %2, align 4
  br label %38

37:                                               ; preds = %27, %21
  store i32 0, i32* %2, align 4
  br label %38

38:                                               ; preds = %37, %36
  %39 = load i32, i32* %2, align 4
  ret i32 %39
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @gettime(%struct.timespec* %0) #3 {
  %2 = alloca %struct.timespec*, align 8
  %3 = alloca %struct.timespec, align 8
  store %struct.timespec* %0, %struct.timespec** %2, align 8
  %4 = load %struct.timespec*, %struct.timespec** %2, align 8
  %5 = call i32 @clock_gettime(i32 0, %struct.timespec* %4) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  br label %19

8:                                                ; preds = %1
  %9 = call i32 @gettimeofday(%struct.timespec* %3, i8* null) #13
  %10 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load %struct.timespec*, %struct.timespec** %2, align 8
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i32 0, i32 0
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul nsw i64 %15, 1000
  %17 = load %struct.timespec*, %struct.timespec** %2, align 8
  %18 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i32 0, i32 1
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #1

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @hard_locale(i32 %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i8 1, i8* %3, align 1
  %5 = load i32, i32* %2, align 4
  %6 = call i8* @setlocale(i32 %5, i8* null) #13
  store i8* %6, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %19

9:                                                ; preds = %1
  %10 = load i8*, i8** %4, align 8
  %11 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.461, i64 0, i64 0)) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.462, i64 0, i64 0)) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %9
  store i8 0, i8* %3, align 1
  br label %18

18:                                               ; preds = %17, %13
  br label %19

19:                                               ; preds = %18, %1
  %20 = load i8, i8* %3, align 1
  %21 = trunc i8 %20 to i1
  ret i1 %21
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @hash_pjw(i8* %0, i64 %1) #8 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  store i64 0, i64* %6, align 8
  %7 = load i8*, i8** %3, align 8
  store i8* %7, i8** %5, align 8
  br label %8

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %5, align 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %8
  %13 = load i8*, i8** %5, align 8
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i64
  %16 = load i64, i64* %6, align 8
  %17 = shl i64 %16, 9
  %18 = load i64, i64* %6, align 8
  %19 = lshr i64 %18, 55
  %20 = or i64 %17, %19
  %21 = add i64 %15, %20
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %12
  %23 = load i8*, i8** %5, align 8
  %24 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %24, i8** %5, align 8
  br label %8, !llvm.loop !55

25:                                               ; preds = %8
  %26 = load i64, i64* %6, align 8
  %27 = load i64, i64* %4, align 8
  %28 = urem i64 %26, %27
  ret i64 %28
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @locale_charset() #3 {
  %1 = alloca i8*, align 8
  %2 = call i8* @nl_langinfo(i32 14) #13
  store i8* %2, i8** %1, align 8
  %3 = load i8*, i8** %1, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.467, i64 0, i64 0), i8** %1, align 8
  br label %6

6:                                                ; preds = %5, %0
  %7 = load i8*, i8** %1, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.468, i64 0, i64 0), i8** %1, align 8
  br label %13

13:                                               ; preds = %12, %6
  %14 = load i8*, i8** %1, align 8
  ret i8* %14
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randint_source* @randint_new(%struct.randread_source* %0) #3 {
  %2 = alloca %struct.randread_source*, align 8
  %3 = alloca %struct.randint_source*, align 8
  store %struct.randread_source* %0, %struct.randread_source** %2, align 8
  %4 = call noalias i8* @xmalloc(i64 24)
  %5 = bitcast i8* %4 to %struct.randint_source*
  store %struct.randint_source* %5, %struct.randint_source** %3, align 8
  %6 = load %struct.randread_source*, %struct.randread_source** %2, align 8
  %7 = load %struct.randint_source*, %struct.randint_source** %3, align 8
  %8 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %7, i32 0, i32 0
  store %struct.randread_source* %6, %struct.randread_source** %8, align 8
  %9 = load %struct.randint_source*, %struct.randint_source** %3, align 8
  %10 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %9, i32 0, i32 2
  store i64 0, i64* %10, align 8
  %11 = load %struct.randint_source*, %struct.randint_source** %3, align 8
  %12 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %11, i32 0, i32 1
  store i64 0, i64* %12, align 8
  %13 = load %struct.randint_source*, %struct.randint_source** %3, align 8
  ret %struct.randint_source* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randint_source* @randint_all_new(i8* %0, i64 %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.randread_source*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.randread_source* @randread_new(i8* %6, i64 %7)
  store %struct.randread_source* %8, %struct.randread_source** %5, align 8
  %9 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  %10 = icmp ne %struct.randread_source* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  %13 = call %struct.randint_source* @randint_new(%struct.randread_source* %12)
  br label %15

14:                                               ; preds = %2
  br label %15

15:                                               ; preds = %14, %11
  %16 = phi %struct.randint_source* [ %13, %11 ], [ null, %14 ]
  ret %struct.randint_source* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @randint_genmax(%struct.randint_source* %0, i64 %1) #3 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.randint_source*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.randread_source*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca [8 x i8], align 1
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  store %struct.randint_source* %0, %struct.randint_source** %4, align 8
  store i64 %1, i64* %5, align 8
  %17 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %18 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %17, i32 0, i32 0
  %19 = load %struct.randread_source*, %struct.randread_source** %18, align 8
  store %struct.randread_source* %19, %struct.randread_source** %6, align 8
  %20 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %21 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %20, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %7, align 8
  %23 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %24 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %23, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %8, align 8
  %26 = load i64, i64* %5, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %9, align 8
  br label %28

28:                                               ; preds = %108, %2
  %29 = load i64, i64* %8, align 8
  %30 = load i64, i64* %5, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %66

32:                                               ; preds = %28
  store i64 0, i64* %10, align 8
  %33 = load i64, i64* %8, align 8
  store i64 %33, i64* %11, align 8
  br label %34

34:                                               ; preds = %40, %32
  %35 = load i64, i64* %11, align 8
  %36 = call i64 @shift_left(i64 %35)
  %37 = add i64 %36, 255
  store i64 %37, i64* %11, align 8
  %38 = load i64, i64* %10, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %10, align 8
  br label %40

40:                                               ; preds = %34
  %41 = load i64, i64* %11, align 8
  %42 = load i64, i64* %5, align 8
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %34, label %44, !llvm.loop !56

44:                                               ; preds = %40
  %45 = load %struct.randread_source*, %struct.randread_source** %6, align 8
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 0
  %47 = load i64, i64* %10, align 8
  call void @randread(%struct.randread_source* %45, i8* %46, i64 %47)
  store i64 0, i64* %10, align 8
  br label %48

48:                                               ; preds = %61, %44
  %49 = load i64, i64* %7, align 8
  %50 = call i64 @shift_left(i64 %49)
  %51 = load i64, i64* %10, align 8
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = add i64 %50, %54
  store i64 %55, i64* %7, align 8
  %56 = load i64, i64* %8, align 8
  %57 = call i64 @shift_left(i64 %56)
  %58 = add i64 %57, 255
  store i64 %58, i64* %8, align 8
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %10, align 8
  br label %61

61:                                               ; preds = %48
  %62 = load i64, i64* %8, align 8
  %63 = load i64, i64* %5, align 8
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %48, label %65, !llvm.loop !57

65:                                               ; preds = %61
  br label %66

66:                                               ; preds = %65, %28
  %67 = load i64, i64* %8, align 8
  %68 = load i64, i64* %5, align 8
  %69 = icmp eq i64 %67, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %72 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %71, i32 0, i32 2
  store i64 0, i64* %72, align 8
  %73 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %74 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %73, i32 0, i32 1
  store i64 0, i64* %74, align 8
  %75 = load i64, i64* %7, align 8
  store i64 %75, i64* %3, align 8
  br label %109

76:                                               ; preds = %66
  %77 = load i64, i64* %8, align 8
  %78 = load i64, i64* %5, align 8
  %79 = sub i64 %77, %78
  store i64 %79, i64* %13, align 8
  %80 = load i64, i64* %13, align 8
  %81 = load i64, i64* %9, align 8
  %82 = urem i64 %80, %81
  store i64 %82, i64* %14, align 8
  %83 = load i64, i64* %8, align 8
  %84 = load i64, i64* %14, align 8
  %85 = sub i64 %83, %84
  store i64 %85, i64* %15, align 8
  %86 = load i64, i64* %7, align 8
  %87 = load i64, i64* %9, align 8
  %88 = urem i64 %86, %87
  store i64 %88, i64* %16, align 8
  %89 = load i64, i64* %7, align 8
  %90 = load i64, i64* %15, align 8
  %91 = icmp ule i64 %89, %90
  br i1 %91, label %92, label %104

92:                                               ; preds = %76
  %93 = load i64, i64* %7, align 8
  %94 = load i64, i64* %9, align 8
  %95 = udiv i64 %93, %94
  %96 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %97 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %96, i32 0, i32 1
  store i64 %95, i64* %97, align 8
  %98 = load i64, i64* %13, align 8
  %99 = load i64, i64* %9, align 8
  %100 = udiv i64 %98, %99
  %101 = load %struct.randint_source*, %struct.randint_source** %4, align 8
  %102 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %101, i32 0, i32 2
  store i64 %100, i64* %102, align 8
  %103 = load i64, i64* %16, align 8
  store i64 %103, i64* %3, align 8
  br label %109

104:                                              ; preds = %76
  %105 = load i64, i64* %16, align 8
  store i64 %105, i64* %7, align 8
  %106 = load i64, i64* %14, align 8
  %107 = sub i64 %106, 1
  store i64 %107, i64* %8, align 8
  br label %108

108:                                              ; preds = %104
  br label %28

109:                                              ; preds = %92, %70
  %110 = load i64, i64* %3, align 8
  ret i64 %110
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %0) #3 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = shl i64 %3, 8
  ret i64 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @randint_free(%struct.randint_source* %0) #3 {
  %2 = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %0, %struct.randint_source** %2, align 8
  %3 = load %struct.randint_source*, %struct.randint_source** %2, align 8
  %4 = bitcast %struct.randint_source* %3 to i8*
  call void @explicit_bzero(i8* %4, i64 24) #13
  %5 = load %struct.randint_source*, %struct.randint_source** %2, align 8
  %6 = bitcast %struct.randint_source* %5 to i8*
  call void @free(i8* %6) #13
  ret void
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @randint_all_free(%struct.randint_source* %0) #3 {
  %2 = alloca %struct.randint_source*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.randint_source* %0, %struct.randint_source** %2, align 8
  %5 = load %struct.randint_source*, %struct.randint_source** %2, align 8
  %6 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %5, i32 0, i32 0
  %7 = load %struct.randread_source*, %struct.randread_source** %6, align 8
  %8 = call i32 @randread_free(%struct.randread_source* %7)
  store i32 %8, i32* %3, align 4
  %9 = call i32* @__errno_location() #16
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %4, align 4
  %11 = load %struct.randint_source*, %struct.randint_source** %2, align 8
  call void @randint_free(%struct.randint_source* %11)
  %12 = load i32, i32* %4, align 4
  %13 = call i32* @__errno_location() #16
  store i32 %12, i32* %13, align 4
  %14 = load i32, i32* %3, align 4
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @randread_new(i8* %0, i64 %1) #3 {
  %3 = alloca %struct.randread_source*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca %struct.randread_source*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %8 = load i64, i64* %5, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null)
  store %struct.randread_source* %11, %struct.randread_source** %3, align 8
  br label %60

12:                                               ; preds = %2
  store %struct._IO_FILE* null, %struct._IO_FILE** %6, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = load i8*, i8** %4, align 8
  %17 = call %struct._IO_FILE* @fopen_safer(i8* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.477, i64 0, i64 0))
  store %struct._IO_FILE* %17, %struct._IO_FILE** %6, align 8
  %18 = icmp ne %struct._IO_FILE* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  store %struct.randread_source* null, %struct.randread_source** %3, align 8
  br label %60

20:                                               ; preds = %15
  br label %21

21:                                               ; preds = %20, %12
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %22, i8* %23)
  store %struct.randread_source* %24, %struct.randread_source** %7, align 8
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %26 = icmp ne %struct._IO_FILE* %25, null
  br i1 %26, label %27, label %41

27:                                               ; preds = %21
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %29 = load %struct.randread_source*, %struct.randread_source** %7, align 8
  %30 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %29, i32 0, i32 3
  %31 = bitcast %union.anon.103* %30 to [4096 x i8]*
  %32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %31, i64 0, i64 0
  %33 = load i64, i64* %5, align 8
  %34 = icmp ult i64 4096, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  br label %38

36:                                               ; preds = %27
  %37 = load i64, i64* %5, align 8
  br label %38

38:                                               ; preds = %36, %35
  %39 = phi i64 [ 4096, %35 ], [ %37, %36 ]
  %40 = call i32 @setvbuf(%struct._IO_FILE* %28, i8* %32, i32 0, i64 %39) #13
  br label %58

41:                                               ; preds = %21
  %42 = load %struct.randread_source*, %struct.randread_source** %7, align 8
  %43 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %42, i32 0, i32 3
  %44 = bitcast %union.anon.103* %43 to %struct.isaac*
  %45 = getelementptr inbounds %struct.isaac, %struct.isaac* %44, i32 0, i32 0
  store i64 0, i64* %45, align 8
  %46 = load %struct.randread_source*, %struct.randread_source** %7, align 8
  %47 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %46, i32 0, i32 3
  %48 = bitcast %union.anon.103* %47 to %struct.isaac*
  %49 = getelementptr inbounds %struct.isaac, %struct.isaac* %48, i32 0, i32 1
  %50 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0
  %51 = getelementptr inbounds [256 x i64], [256 x i64]* %50, i64 0, i64 0
  %52 = bitcast i64* %51 to i8*
  %53 = load i64, i64* %5, align 8
  call void @get_nonce(i8* %52, i64 2048, i64 %53)
  %54 = load %struct.randread_source*, %struct.randread_source** %7, align 8
  %55 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %54, i32 0, i32 3
  %56 = bitcast %union.anon.103* %55 to %struct.isaac*
  %57 = getelementptr inbounds %struct.isaac, %struct.isaac* %56, i32 0, i32 1
  call void @isaac_seed(%struct.isaac_state* %57)
  br label %58

58:                                               ; preds = %41, %38
  %59 = load %struct.randread_source*, %struct.randread_source** %7, align 8
  store %struct.randread_source* %59, %struct.randread_source** %3, align 8
  br label %60

60:                                               ; preds = %58, %19, %10
  %61 = load %struct.randread_source*, %struct.randread_source** %3, align 8
  ret %struct.randread_source* %61
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %0, i8* %1) #3 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.randread_source*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = call noalias i8* @xmalloc(i64 4152)
  %7 = bitcast i8* %6 to %struct.randread_source*
  store %struct.randread_source* %7, %struct.randread_source** %5, align 8
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %9 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  %10 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %9, i32 0, i32 0
  store %struct._IO_FILE* %8, %struct._IO_FILE** %10, align 8
  %11 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  %12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 1
  store void (i8*)* @randread_error, void (i8*)** %12, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  %15 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 2
  store i8* %13, i8** %15, align 8
  %16 = load %struct.randread_source*, %struct.randread_source** %5, align 8
  ret %struct.randread_source* %16
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %0, i64 %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.timespec, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %20 = load i8*, i8** %4, align 8
  store i8* %20, i8** %7, align 8
  store i64 0, i64* %8, align 8
  %21 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.478, i64 0, i64 0), i32 0)
  store i32 %21, i32* %9, align 4
  %22 = load i32, i32* %9, align 4
  %23 = icmp sle i32 0, %22
  br i1 %23, label %24, label %43

24:                                               ; preds = %3
  %25 = load i32, i32* %9, align 4
  %26 = load i8*, i8** %7, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* %6, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = load i64, i64* %5, align 8
  br label %34

32:                                               ; preds = %24
  %33 = load i64, i64* %6, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  %36 = call i64 @read(i32 %25, i8* %26, i64 %35)
  store i64 %36, i64* %8, align 8
  %37 = load i64, i64* %8, align 8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  store i64 0, i64* %8, align 8
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %9, align 4
  %42 = call i32 @close(i32 %41)
  br label %43

43:                                               ; preds = %40, %3
  %44 = load i64, i64* %8, align 8
  %45 = load i64, i64* %5, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %47, label %68

47:                                               ; preds = %43
  %48 = load i64, i64* %5, align 8
  %49 = load i64, i64* %8, align 8
  %50 = sub i64 %48, %49
  %51 = icmp ult i64 16, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  br label %57

53:                                               ; preds = %47
  %54 = load i64, i64* %5, align 8
  %55 = load i64, i64* %8, align 8
  %56 = sub i64 %54, %55
  br label %57

57:                                               ; preds = %53, %52
  %58 = phi i64 [ 16, %52 ], [ %56, %53 ]
  store i64 %58, i64* %11, align 8
  %59 = call i32 @gettimeofday(%struct.timespec* %10, i8* null) #13
  %60 = load i8*, i8** %7, align 8
  %61 = load i64, i64* %8, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = bitcast %struct.timespec* %10 to i8*
  %64 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 8 %63, i64 %64, i1 false)
  %65 = load i64, i64* %11, align 8
  %66 = load i64, i64* %8, align 8
  %67 = add i64 %66, %65
  store i64 %67, i64* %8, align 8
  br label %68

68:                                               ; preds = %57, %43
  %69 = load i64, i64* %8, align 8
  %70 = load i64, i64* %5, align 8
  %71 = icmp ult i64 %69, %70
  br i1 %71, label %72, label %93

72:                                               ; preds = %68
  %73 = load i64, i64* %5, align 8
  %74 = load i64, i64* %8, align 8
  %75 = sub i64 %73, %74
  %76 = icmp ult i64 4, %75
  br i1 %76, label %77, label %78

77:                                               ; preds = %72
  br label %82

78:                                               ; preds = %72
  %79 = load i64, i64* %5, align 8
  %80 = load i64, i64* %8, align 8
  %81 = sub i64 %79, %80
  br label %82

82:                                               ; preds = %78, %77
  %83 = phi i64 [ 4, %77 ], [ %81, %78 ]
  store i64 %83, i64* %13, align 8
  %84 = call i32 @getpid() #13
  store i32 %84, i32* %12, align 4
  %85 = load i8*, i8** %7, align 8
  %86 = load i64, i64* %8, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = bitcast i32* %12 to i8*
  %89 = load i64, i64* %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 4 %88, i64 %89, i1 false)
  %90 = load i64, i64* %13, align 8
  %91 = load i64, i64* %8, align 8
  %92 = add i64 %91, %90
  store i64 %92, i64* %8, align 8
  br label %93

93:                                               ; preds = %82, %68
  %94 = load i64, i64* %8, align 8
  %95 = load i64, i64* %5, align 8
  %96 = icmp ult i64 %94, %95
  br i1 %96, label %97, label %118

97:                                               ; preds = %93
  %98 = load i64, i64* %5, align 8
  %99 = load i64, i64* %8, align 8
  %100 = sub i64 %98, %99
  %101 = icmp ult i64 4, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %97
  br label %107

103:                                              ; preds = %97
  %104 = load i64, i64* %5, align 8
  %105 = load i64, i64* %8, align 8
  %106 = sub i64 %104, %105
  br label %107

107:                                              ; preds = %103, %102
  %108 = phi i64 [ 4, %102 ], [ %106, %103 ]
  store i64 %108, i64* %15, align 8
  %109 = call i32 @getppid() #13
  store i32 %109, i32* %14, align 4
  %110 = load i8*, i8** %7, align 8
  %111 = load i64, i64* %8, align 8
  %112 = getelementptr inbounds i8, i8* %110, i64 %111
  %113 = bitcast i32* %14 to i8*
  %114 = load i64, i64* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* align 4 %113, i64 %114, i1 false)
  %115 = load i64, i64* %15, align 8
  %116 = load i64, i64* %8, align 8
  %117 = add i64 %116, %115
  store i64 %117, i64* %8, align 8
  br label %118

118:                                              ; preds = %107, %93
  %119 = load i64, i64* %8, align 8
  %120 = load i64, i64* %5, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %143

122:                                              ; preds = %118
  %123 = load i64, i64* %5, align 8
  %124 = load i64, i64* %8, align 8
  %125 = sub i64 %123, %124
  %126 = icmp ult i64 4, %125
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  br label %132

128:                                              ; preds = %122
  %129 = load i64, i64* %5, align 8
  %130 = load i64, i64* %8, align 8
  %131 = sub i64 %129, %130
  br label %132

132:                                              ; preds = %128, %127
  %133 = phi i64 [ 4, %127 ], [ %131, %128 ]
  store i64 %133, i64* %17, align 8
  %134 = call i32 @getuid() #13
  store i32 %134, i32* %16, align 4
  %135 = load i8*, i8** %7, align 8
  %136 = load i64, i64* %8, align 8
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = bitcast i32* %16 to i8*
  %139 = load i64, i64* %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 4 %138, i64 %139, i1 false)
  %140 = load i64, i64* %17, align 8
  %141 = load i64, i64* %8, align 8
  %142 = add i64 %141, %140
  store i64 %142, i64* %8, align 8
  br label %143

143:                                              ; preds = %132, %118
  %144 = load i64, i64* %8, align 8
  %145 = load i64, i64* %5, align 8
  %146 = icmp ult i64 %144, %145
  br i1 %146, label %147, label %168

147:                                              ; preds = %143
  %148 = load i64, i64* %5, align 8
  %149 = load i64, i64* %8, align 8
  %150 = sub i64 %148, %149
  %151 = icmp ult i64 4, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %147
  br label %157

153:                                              ; preds = %147
  %154 = load i64, i64* %5, align 8
  %155 = load i64, i64* %8, align 8
  %156 = sub i64 %154, %155
  br label %157

157:                                              ; preds = %153, %152
  %158 = phi i64 [ 4, %152 ], [ %156, %153 ]
  store i64 %158, i64* %19, align 8
  %159 = call i32 @getgid() #13
  store i32 %159, i32* %18, align 4
  %160 = load i8*, i8** %7, align 8
  %161 = load i64, i64* %8, align 8
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  %163 = bitcast i32* %18 to i8*
  %164 = load i64, i64* %19, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 4 %163, i64 %164, i1 false)
  %165 = load i64, i64* %19, align 8
  %166 = load i64, i64* %8, align 8
  %167 = add i64 %166, %165
  store i64 %167, i64* %8, align 8
  br label %168

168:                                              ; preds = %157, %143
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @getpid() #1

; Function Attrs: nounwind
declare dso_local i32 @getppid() #1

; Function Attrs: nounwind
declare dso_local i32 @getuid() #1

; Function Attrs: nounwind
declare dso_local i32 @getgid() #1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = load volatile i32, i32* @exit_failure, align 4
  %7 = call i32* @__errno_location() #16
  %8 = load i32, i32* %7, align 4
  %9 = call i32* @__errno_location() #16
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %5
  %13 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.479, i64 0, i64 0)) #13
  br label %16

14:                                               ; preds = %5
  %15 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.480, i64 0, i64 0)) #13
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi i8* [ %13, %12 ], [ %15, %14 ]
  %18 = load i8*, i8** %2, align 8
  %19 = call i8* @quote(i8* %18)
  call void (i32, i32, i8*, ...) @error(i32 %6, i32 %8, i8* %17, i8* %19)
  br label %20

20:                                               ; preds = %16, %1
  call void @abort() #14
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @randread(%struct.randread_source* %0, i8* %1, i64 %2) #3 {
  %4 = alloca %struct.randread_source*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %struct.randread_source* %0, %struct.randread_source** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %8 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 0
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %10 = icmp ne %struct._IO_FILE* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @readsource(%struct.randread_source* %12, i8* %13, i64 %14)
  br label %21

15:                                               ; preds = %3
  %16 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %17 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %16, i32 0, i32 3
  %18 = bitcast %union.anon.103* %17 to %struct.isaac*
  %19 = load i8*, i8** %5, align 8
  %20 = load i64, i64* %6, align 8
  call void @readisaac(%struct.isaac* %18, i8* %19, i64 %20)
  br label %21

21:                                               ; preds = %15, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %0, i8* %1, i64 %2) #3 {
  %4 = alloca %struct.randread_source*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.randread_source* %0, %struct.randread_source** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  br label %9

9:                                                ; preds = %36, %3
  %10 = load i8*, i8** %5, align 8
  %11 = load i64, i64* %6, align 8
  %12 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %12, i32 0, i32 0
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %13, align 8
  %15 = call i64 @fread_unlocked(i8* %10, i64 1, i64 %11, %struct._IO_FILE* %14)
  store i64 %15, i64* %7, align 8
  %16 = call i32* @__errno_location() #16
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %8, align 4
  %18 = load i64, i64* %7, align 8
  %19 = load i8*, i8** %5, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  store i8* %20, i8** %5, align 8
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* %6, align 8
  %23 = sub i64 %22, %21
  store i64 %23, i64* %6, align 8
  %24 = load i64, i64* %6, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %9
  br label %45

27:                                               ; preds = %9
  %28 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %29 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %28, i32 0, i32 0
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %29, align 8
  %31 = call i32 @ferror_unlocked(%struct._IO_FILE* %30) #13
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = load i32, i32* %8, align 4
  br label %36

35:                                               ; preds = %27
  br label %36

36:                                               ; preds = %35, %33
  %37 = phi i32 [ %34, %33 ], [ 0, %35 ]
  %38 = call i32* @__errno_location() #16
  store i32 %37, i32* %38, align 4
  %39 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %40 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %39, i32 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = load %struct.randread_source*, %struct.randread_source** %4, align 8
  %43 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %42, i32 0, i32 2
  %44 = load i8*, i8** %43, align 8
  call void %41(i8* %44)
  br label %9

45:                                               ; preds = %26
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %0, i8* %1, i64 %2) #3 {
  %4 = alloca %struct.isaac*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64*, align 8
  store %struct.isaac* %0, %struct.isaac** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %struct.isaac*, %struct.isaac** %4, align 8
  %11 = getelementptr inbounds %struct.isaac, %struct.isaac* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %7, align 8
  br label %13

13:                                               ; preds = %78, %3
  %14 = load i8*, i8** %5, align 8
  store i8* %14, i8** %8, align 8
  %15 = load i64, i64* %6, align 8
  %16 = load i64, i64* %7, align 8
  %17 = icmp ule i64 %15, %16
  br i1 %17, label %18, label %34

18:                                               ; preds = %13
  %19 = load i8*, i8** %5, align 8
  %20 = load %struct.isaac*, %struct.isaac** %4, align 8
  %21 = getelementptr inbounds %struct.isaac, %struct.isaac* %20, i32 0, i32 2
  %22 = bitcast %union.anon.0* %21 to [2048 x i8]*
  %23 = getelementptr inbounds [2048 x i8], [2048 x i8]* %22, i64 0, i64 0
  %24 = getelementptr inbounds i8, i8* %23, i64 2048
  %25 = load i64, i64* %7, align 8
  %26 = sub i64 0, %25
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %27, i64 %28, i1 false)
  %29 = load i64, i64* %7, align 8
  %30 = load i64, i64* %6, align 8
  %31 = sub i64 %29, %30
  %32 = load %struct.isaac*, %struct.isaac** %4, align 8
  %33 = getelementptr inbounds %struct.isaac, %struct.isaac* %32, i32 0, i32 0
  store i64 %31, i64* %33, align 8
  br label %85

34:                                               ; preds = %13
  %35 = load i8*, i8** %5, align 8
  %36 = load %struct.isaac*, %struct.isaac** %4, align 8
  %37 = getelementptr inbounds %struct.isaac, %struct.isaac* %36, i32 0, i32 2
  %38 = bitcast %union.anon.0* %37 to [2048 x i8]*
  %39 = getelementptr inbounds [2048 x i8], [2048 x i8]* %38, i64 0, i64 0
  %40 = getelementptr inbounds i8, i8* %39, i64 2048
  %41 = load i64, i64* %7, align 8
  %42 = sub i64 0, %41
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %43, i64 %44, i1 false)
  %45 = load i8*, i8** %8, align 8
  %46 = load i64, i64* %7, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  store i8* %47, i8** %5, align 8
  %48 = load i64, i64* %7, align 8
  %49 = load i64, i64* %6, align 8
  %50 = sub i64 %49, %48
  store i64 %50, i64* %6, align 8
  %51 = load i8*, i8** %5, align 8
  %52 = ptrtoint i8* %51 to i64
  %53 = urem i64 %52, 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %78

55:                                               ; preds = %34
  %56 = load i8*, i8** %5, align 8
  %57 = bitcast i8* %56 to i64*
  store i64* %57, i64** %9, align 8
  br label %58

58:                                               ; preds = %74, %55
  %59 = load i64, i64* %6, align 8
  %60 = icmp ule i64 2048, %59
  br i1 %60, label %61, label %75

61:                                               ; preds = %58
  %62 = load %struct.isaac*, %struct.isaac** %4, align 8
  %63 = getelementptr inbounds %struct.isaac, %struct.isaac* %62, i32 0, i32 1
  %64 = load i64*, i64** %9, align 8
  call void @isaac_refill(%struct.isaac_state* %63, i64* %64)
  %65 = load i64*, i64** %9, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 256
  store i64* %66, i64** %9, align 8
  %67 = load i64, i64* %6, align 8
  %68 = sub i64 %67, 2048
  store i64 %68, i64* %6, align 8
  %69 = load i64, i64* %6, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %61
  %72 = load %struct.isaac*, %struct.isaac** %4, align 8
  %73 = getelementptr inbounds %struct.isaac, %struct.isaac* %72, i32 0, i32 0
  store i64 0, i64* %73, align 8
  br label %85

74:                                               ; preds = %61
  br label %58, !llvm.loop !58

75:                                               ; preds = %58
  %76 = load i64*, i64** %9, align 8
  %77 = bitcast i64* %76 to i8*
  store i8* %77, i8** %5, align 8
  br label %78

78:                                               ; preds = %75, %34
  %79 = load %struct.isaac*, %struct.isaac** %4, align 8
  %80 = getelementptr inbounds %struct.isaac, %struct.isaac* %79, i32 0, i32 1
  %81 = load %struct.isaac*, %struct.isaac** %4, align 8
  %82 = getelementptr inbounds %struct.isaac, %struct.isaac* %81, i32 0, i32 2
  %83 = bitcast %union.anon.0* %82 to [256 x i64]*
  %84 = getelementptr inbounds [256 x i64], [256 x i64]* %83, i64 0, i64 0
  call void @isaac_refill(%struct.isaac_state* %80, i64* %84)
  store i64 2048, i64* %7, align 8
  br label %13

85:                                               ; preds = %71, %18
  ret void
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @randread_free(%struct.randread_source* %0) #3 {
  %2 = alloca %struct.randread_source*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  store %struct.randread_source* %0, %struct.randread_source** %2, align 8
  %4 = load %struct.randread_source*, %struct.randread_source** %2, align 8
  %5 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %4, i32 0, i32 0
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  store %struct._IO_FILE* %6, %struct._IO_FILE** %3, align 8
  %7 = load %struct.randread_source*, %struct.randread_source** %2, align 8
  %8 = bitcast %struct.randread_source* %7 to i8*
  call void @explicit_bzero(i8* %8, i64 4152) #13
  %9 = load %struct.randread_source*, %struct.randread_source** %2, align 8
  %10 = bitcast %struct.randread_source* %9 to i8*
  call void @free(i8* %10) #13
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = icmp ne %struct._IO_FILE* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %15 = call i32 @rpl_fclose(%struct._IO_FILE* %14)
  br label %17

16:                                               ; preds = %1
  br label %17

17:                                               ; preds = %16, %13
  %18 = phi i32 [ %15, %13 ], [ 0, %16 ]
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @isaac_refill(%struct.isaac_state* %0, i64* %1) #3 {
  %3 = alloca %struct.isaac_state*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  store %struct.isaac_state* %0, %struct.isaac_state** %3, align 8
  store i64* %1, i64** %4, align 8
  %25 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %5, align 8
  %28 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %29 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %32 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %31, i32 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %32, align 8
  %35 = add i64 %30, %34
  store i64 %35, i64* %6, align 8
  %36 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %37 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %36, i32 0, i32 0
  %38 = getelementptr inbounds [256 x i64], [256 x i64]* %37, i64 0, i64 0
  store i64* %38, i64** %7, align 8
  %39 = load i64*, i64** %4, align 8
  store i64* %39, i64** %8, align 8
  br label %40

40:                                               ; preds = %182, %2
  %41 = load i64, i64* %5, align 8
  %42 = load i64, i64* %5, align 8
  %43 = shl i64 %42, 21
  %44 = xor i64 %41, %43
  %45 = xor i64 %44, -1
  %46 = xor i64 0, %45
  %47 = load i64*, i64** %7, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 128
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %46, %49
  store i64 %50, i64* %5, align 8
  %51 = load i64*, i64** %7, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 0
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %9, align 8
  %54 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %55 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %54, i32 0, i32 0
  %56 = getelementptr inbounds [256 x i64], [256 x i64]* %55, i64 0, i64 0
  %57 = load i64, i64* %9, align 8
  %58 = call i64 @ind(i64* %56, i64 %57)
  %59 = load i64, i64* %5, align 8
  %60 = add i64 %58, %59
  %61 = load i64, i64* %6, align 8
  %62 = add i64 %60, %61
  store i64 %62, i64* %10, align 8
  %63 = load i64*, i64** %7, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 0
  store i64 %62, i64* %64, align 8
  %65 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %66 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %65, i32 0, i32 0
  %67 = getelementptr inbounds [256 x i64], [256 x i64]* %66, i64 0, i64 0
  %68 = load i64, i64* %10, align 8
  %69 = lshr i64 %68, 8
  %70 = call i64 @ind(i64* %67, i64 %69)
  %71 = load i64, i64* %9, align 8
  %72 = add i64 %70, %71
  %73 = call i64 @just(i64 %72)
  store i64 %73, i64* %6, align 8
  %74 = load i64*, i64** %8, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 0
  store i64 %73, i64* %75, align 8
  %76 = load i64, i64* %5, align 8
  %77 = load i64, i64* %5, align 8
  %78 = call i64 @just(i64 %77)
  %79 = lshr i64 %78, 5
  %80 = xor i64 %76, %79
  %81 = xor i64 0, %80
  %82 = load i64*, i64** %7, align 8
  %83 = getelementptr inbounds i64, i64* %82, i64 129
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %81, %84
  store i64 %85, i64* %5, align 8
  %86 = load i64*, i64** %7, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %11, align 8
  %89 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %89, i32 0, i32 0
  %91 = getelementptr inbounds [256 x i64], [256 x i64]* %90, i64 0, i64 0
  %92 = load i64, i64* %11, align 8
  %93 = call i64 @ind(i64* %91, i64 %92)
  %94 = load i64, i64* %5, align 8
  %95 = add i64 %93, %94
  %96 = load i64, i64* %6, align 8
  %97 = add i64 %95, %96
  store i64 %97, i64* %12, align 8
  %98 = load i64*, i64** %7, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  store i64 %97, i64* %99, align 8
  %100 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %101 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0
  %102 = getelementptr inbounds [256 x i64], [256 x i64]* %101, i64 0, i64 0
  %103 = load i64, i64* %12, align 8
  %104 = lshr i64 %103, 8
  %105 = call i64 @ind(i64* %102, i64 %104)
  %106 = load i64, i64* %11, align 8
  %107 = add i64 %105, %106
  %108 = call i64 @just(i64 %107)
  store i64 %108, i64* %6, align 8
  %109 = load i64*, i64** %8, align 8
  %110 = getelementptr inbounds i64, i64* %109, i64 1
  store i64 %108, i64* %110, align 8
  %111 = load i64, i64* %5, align 8
  %112 = load i64, i64* %5, align 8
  %113 = shl i64 %112, 12
  %114 = xor i64 %111, %113
  %115 = xor i64 0, %114
  %116 = load i64*, i64** %7, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 130
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %115, %118
  store i64 %119, i64* %5, align 8
  %120 = load i64*, i64** %7, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 2
  %122 = load i64, i64* %121, align 8
  store i64 %122, i64* %13, align 8
  %123 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %124 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0
  %125 = getelementptr inbounds [256 x i64], [256 x i64]* %124, i64 0, i64 0
  %126 = load i64, i64* %13, align 8
  %127 = call i64 @ind(i64* %125, i64 %126)
  %128 = load i64, i64* %5, align 8
  %129 = add i64 %127, %128
  %130 = load i64, i64* %6, align 8
  %131 = add i64 %129, %130
  store i64 %131, i64* %14, align 8
  %132 = load i64*, i64** %7, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 2
  store i64 %131, i64* %133, align 8
  %134 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %135 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %134, i32 0, i32 0
  %136 = getelementptr inbounds [256 x i64], [256 x i64]* %135, i64 0, i64 0
  %137 = load i64, i64* %14, align 8
  %138 = lshr i64 %137, 8
  %139 = call i64 @ind(i64* %136, i64 %138)
  %140 = load i64, i64* %13, align 8
  %141 = add i64 %139, %140
  %142 = call i64 @just(i64 %141)
  store i64 %142, i64* %6, align 8
  %143 = load i64*, i64** %8, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 2
  store i64 %142, i64* %144, align 8
  %145 = load i64, i64* %5, align 8
  %146 = load i64, i64* %5, align 8
  %147 = call i64 @just(i64 %146)
  %148 = lshr i64 %147, 33
  %149 = xor i64 %145, %148
  %150 = xor i64 0, %149
  %151 = load i64*, i64** %7, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 131
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %150, %153
  store i64 %154, i64* %5, align 8
  %155 = load i64*, i64** %7, align 8
  %156 = getelementptr inbounds i64, i64* %155, i64 3
  %157 = load i64, i64* %156, align 8
  store i64 %157, i64* %15, align 8
  %158 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %159 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %158, i32 0, i32 0
  %160 = getelementptr inbounds [256 x i64], [256 x i64]* %159, i64 0, i64 0
  %161 = load i64, i64* %15, align 8
  %162 = call i64 @ind(i64* %160, i64 %161)
  %163 = load i64, i64* %5, align 8
  %164 = add i64 %162, %163
  %165 = load i64, i64* %6, align 8
  %166 = add i64 %164, %165
  store i64 %166, i64* %16, align 8
  %167 = load i64*, i64** %7, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 3
  store i64 %166, i64* %168, align 8
  %169 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %170 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %169, i32 0, i32 0
  %171 = getelementptr inbounds [256 x i64], [256 x i64]* %170, i64 0, i64 0
  %172 = load i64, i64* %16, align 8
  %173 = lshr i64 %172, 8
  %174 = call i64 @ind(i64* %171, i64 %173)
  %175 = load i64, i64* %15, align 8
  %176 = add i64 %174, %175
  %177 = call i64 @just(i64 %176)
  store i64 %177, i64* %6, align 8
  %178 = load i64*, i64** %8, align 8
  %179 = getelementptr inbounds i64, i64* %178, i64 3
  store i64 %177, i64* %179, align 8
  %180 = load i64*, i64** %8, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 4
  store i64* %181, i64** %8, align 8
  br label %182

182:                                              ; preds = %40
  %183 = load i64*, i64** %7, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 4
  store i64* %184, i64** %7, align 8
  %185 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %186 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %185, i32 0, i32 0
  %187 = getelementptr inbounds [256 x i64], [256 x i64]* %186, i64 0, i64 0
  %188 = getelementptr inbounds i64, i64* %187, i64 128
  %189 = icmp ult i64* %184, %188
  br i1 %189, label %40, label %190, !llvm.loop !59

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %333, %190
  %192 = load i64, i64* %5, align 8
  %193 = load i64, i64* %5, align 8
  %194 = shl i64 %193, 21
  %195 = xor i64 %192, %194
  %196 = xor i64 %195, -1
  %197 = xor i64 0, %196
  %198 = load i64*, i64** %7, align 8
  %199 = getelementptr inbounds i64, i64* %198, i64 -128
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %197, %200
  store i64 %201, i64* %5, align 8
  %202 = load i64*, i64** %7, align 8
  %203 = getelementptr inbounds i64, i64* %202, i64 0
  %204 = load i64, i64* %203, align 8
  store i64 %204, i64* %17, align 8
  %205 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %206 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %205, i32 0, i32 0
  %207 = getelementptr inbounds [256 x i64], [256 x i64]* %206, i64 0, i64 0
  %208 = load i64, i64* %17, align 8
  %209 = call i64 @ind(i64* %207, i64 %208)
  %210 = load i64, i64* %5, align 8
  %211 = add i64 %209, %210
  %212 = load i64, i64* %6, align 8
  %213 = add i64 %211, %212
  store i64 %213, i64* %18, align 8
  %214 = load i64*, i64** %7, align 8
  %215 = getelementptr inbounds i64, i64* %214, i64 0
  store i64 %213, i64* %215, align 8
  %216 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %217 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %216, i32 0, i32 0
  %218 = getelementptr inbounds [256 x i64], [256 x i64]* %217, i64 0, i64 0
  %219 = load i64, i64* %18, align 8
  %220 = lshr i64 %219, 8
  %221 = call i64 @ind(i64* %218, i64 %220)
  %222 = load i64, i64* %17, align 8
  %223 = add i64 %221, %222
  %224 = call i64 @just(i64 %223)
  store i64 %224, i64* %6, align 8
  %225 = load i64*, i64** %8, align 8
  %226 = getelementptr inbounds i64, i64* %225, i64 0
  store i64 %224, i64* %226, align 8
  %227 = load i64, i64* %5, align 8
  %228 = load i64, i64* %5, align 8
  %229 = call i64 @just(i64 %228)
  %230 = lshr i64 %229, 5
  %231 = xor i64 %227, %230
  %232 = xor i64 0, %231
  %233 = load i64*, i64** %7, align 8
  %234 = getelementptr inbounds i64, i64* %233, i64 -127
  %235 = load i64, i64* %234, align 8
  %236 = add i64 %232, %235
  store i64 %236, i64* %5, align 8
  %237 = load i64*, i64** %7, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 1
  %239 = load i64, i64* %238, align 8
  store i64 %239, i64* %19, align 8
  %240 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %241 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %240, i32 0, i32 0
  %242 = getelementptr inbounds [256 x i64], [256 x i64]* %241, i64 0, i64 0
  %243 = load i64, i64* %19, align 8
  %244 = call i64 @ind(i64* %242, i64 %243)
  %245 = load i64, i64* %5, align 8
  %246 = add i64 %244, %245
  %247 = load i64, i64* %6, align 8
  %248 = add i64 %246, %247
  store i64 %248, i64* %20, align 8
  %249 = load i64*, i64** %7, align 8
  %250 = getelementptr inbounds i64, i64* %249, i64 1
  store i64 %248, i64* %250, align 8
  %251 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %252 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %251, i32 0, i32 0
  %253 = getelementptr inbounds [256 x i64], [256 x i64]* %252, i64 0, i64 0
  %254 = load i64, i64* %20, align 8
  %255 = lshr i64 %254, 8
  %256 = call i64 @ind(i64* %253, i64 %255)
  %257 = load i64, i64* %19, align 8
  %258 = add i64 %256, %257
  %259 = call i64 @just(i64 %258)
  store i64 %259, i64* %6, align 8
  %260 = load i64*, i64** %8, align 8
  %261 = getelementptr inbounds i64, i64* %260, i64 1
  store i64 %259, i64* %261, align 8
  %262 = load i64, i64* %5, align 8
  %263 = load i64, i64* %5, align 8
  %264 = shl i64 %263, 12
  %265 = xor i64 %262, %264
  %266 = xor i64 0, %265
  %267 = load i64*, i64** %7, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 -126
  %269 = load i64, i64* %268, align 8
  %270 = add i64 %266, %269
  store i64 %270, i64* %5, align 8
  %271 = load i64*, i64** %7, align 8
  %272 = getelementptr inbounds i64, i64* %271, i64 2
  %273 = load i64, i64* %272, align 8
  store i64 %273, i64* %21, align 8
  %274 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %275 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %274, i32 0, i32 0
  %276 = getelementptr inbounds [256 x i64], [256 x i64]* %275, i64 0, i64 0
  %277 = load i64, i64* %21, align 8
  %278 = call i64 @ind(i64* %276, i64 %277)
  %279 = load i64, i64* %5, align 8
  %280 = add i64 %278, %279
  %281 = load i64, i64* %6, align 8
  %282 = add i64 %280, %281
  store i64 %282, i64* %22, align 8
  %283 = load i64*, i64** %7, align 8
  %284 = getelementptr inbounds i64, i64* %283, i64 2
  store i64 %282, i64* %284, align 8
  %285 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %286 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %285, i32 0, i32 0
  %287 = getelementptr inbounds [256 x i64], [256 x i64]* %286, i64 0, i64 0
  %288 = load i64, i64* %22, align 8
  %289 = lshr i64 %288, 8
  %290 = call i64 @ind(i64* %287, i64 %289)
  %291 = load i64, i64* %21, align 8
  %292 = add i64 %290, %291
  %293 = call i64 @just(i64 %292)
  store i64 %293, i64* %6, align 8
  %294 = load i64*, i64** %8, align 8
  %295 = getelementptr inbounds i64, i64* %294, i64 2
  store i64 %293, i64* %295, align 8
  %296 = load i64, i64* %5, align 8
  %297 = load i64, i64* %5, align 8
  %298 = call i64 @just(i64 %297)
  %299 = lshr i64 %298, 33
  %300 = xor i64 %296, %299
  %301 = xor i64 0, %300
  %302 = load i64*, i64** %7, align 8
  %303 = getelementptr inbounds i64, i64* %302, i64 -125
  %304 = load i64, i64* %303, align 8
  %305 = add i64 %301, %304
  store i64 %305, i64* %5, align 8
  %306 = load i64*, i64** %7, align 8
  %307 = getelementptr inbounds i64, i64* %306, i64 3
  %308 = load i64, i64* %307, align 8
  store i64 %308, i64* %23, align 8
  %309 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %310 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %309, i32 0, i32 0
  %311 = getelementptr inbounds [256 x i64], [256 x i64]* %310, i64 0, i64 0
  %312 = load i64, i64* %23, align 8
  %313 = call i64 @ind(i64* %311, i64 %312)
  %314 = load i64, i64* %5, align 8
  %315 = add i64 %313, %314
  %316 = load i64, i64* %6, align 8
  %317 = add i64 %315, %316
  store i64 %317, i64* %24, align 8
  %318 = load i64*, i64** %7, align 8
  %319 = getelementptr inbounds i64, i64* %318, i64 3
  store i64 %317, i64* %319, align 8
  %320 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %321 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %320, i32 0, i32 0
  %322 = getelementptr inbounds [256 x i64], [256 x i64]* %321, i64 0, i64 0
  %323 = load i64, i64* %24, align 8
  %324 = lshr i64 %323, 8
  %325 = call i64 @ind(i64* %322, i64 %324)
  %326 = load i64, i64* %23, align 8
  %327 = add i64 %325, %326
  %328 = call i64 @just(i64 %327)
  store i64 %328, i64* %6, align 8
  %329 = load i64*, i64** %8, align 8
  %330 = getelementptr inbounds i64, i64* %329, i64 3
  store i64 %328, i64* %330, align 8
  %331 = load i64*, i64** %8, align 8
  %332 = getelementptr inbounds i64, i64* %331, i64 4
  store i64* %332, i64** %8, align 8
  br label %333

333:                                              ; preds = %191
  %334 = load i64*, i64** %7, align 8
  %335 = getelementptr inbounds i64, i64* %334, i64 4
  store i64* %335, i64** %7, align 8
  %336 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %337 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %336, i32 0, i32 0
  %338 = getelementptr inbounds [256 x i64], [256 x i64]* %337, i64 0, i64 0
  %339 = getelementptr inbounds i64, i64* %338, i64 256
  %340 = icmp ult i64* %335, %339
  br i1 %340, label %191, label %341, !llvm.loop !60

341:                                              ; preds = %333
  %342 = load i64, i64* %5, align 8
  %343 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %344 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %343, i32 0, i32 1
  store i64 %342, i64* %344, align 8
  %345 = load i64, i64* %6, align 8
  %346 = load %struct.isaac_state*, %struct.isaac_state** %3, align 8
  %347 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %346, i32 0, i32 2
  store i64 %345, i64* %347, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %0, i64 %1) #3 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load i64*, i64** %3, align 8
  %10 = bitcast i64* %9 to i8*
  store i8* %10, i8** %5, align 8
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %6, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %4, align 8
  %14 = and i64 %13, 2040
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  store i8* %15, i8** %7, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = bitcast i8* %16 to i64*
  store i64* %17, i64** %8, align 8
  %18 = load i64*, i64** %8, align 8
  %19 = load i64, i64* %18, align 8
  ret i64 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %0) #3 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  store i64 -1, i64* %3, align 8
  %4 = load i64, i64* %2, align 8
  %5 = load i64, i64* %3, align 8
  %6 = and i64 %4, %5
  ret i64 %6
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @isaac_seed(%struct.isaac_state* %0) #3 {
  %2 = alloca %struct.isaac_state*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.isaac_state* %0, %struct.isaac_state** %2, align 8
  store i64 7240739780546808700, i64* %3, align 8
  store i64 -5046086420515862430, i64* %4, align 8
  store i64 -8354558816804203872, i64* %5, align 8
  store i64 -5576812576440232668, i64* %6, align 8
  store i64 -9011610652101975858, i64* %7, align 8
  store i64 5259722845879046933, i64* %8, align 8
  store i64 -5865837416287532563, i64* %9, align 8
  store i64 -7424904924229222229, i64* %10, align 8
  store i32 0, i32* %11, align 4
  br label %13

13:                                               ; preds = %227, %1
  %14 = load i32, i32* %11, align 4
  %15 = icmp slt i32 %14, 256
  br i1 %15, label %16, label %230

16:                                               ; preds = %13
  %17 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %18 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0
  %19 = load i32, i32* %11, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [256 x i64], [256 x i64]* %18, i64 0, i64 %20
  %22 = load i64, i64* %21, align 8
  %23 = load i64, i64* %3, align 8
  %24 = add i64 %23, %22
  store i64 %24, i64* %3, align 8
  %25 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0
  %27 = load i32, i32* %11, align 4
  %28 = add nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i64], [256 x i64]* %26, i64 0, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %4, align 8
  %33 = add i64 %32, %31
  store i64 %33, i64* %4, align 8
  %34 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %35 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0
  %36 = load i32, i32* %11, align 4
  %37 = add nsw i32 %36, 2
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [256 x i64], [256 x i64]* %35, i64 0, i64 %38
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = add i64 %41, %40
  store i64 %42, i64* %5, align 8
  %43 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %44 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %43, i32 0, i32 0
  %45 = load i32, i32* %11, align 4
  %46 = add nsw i32 %45, 3
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [256 x i64], [256 x i64]* %44, i64 0, i64 %47
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* %6, align 8
  %51 = add i64 %50, %49
  store i64 %51, i64* %6, align 8
  %52 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %53 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %52, i32 0, i32 0
  %54 = load i32, i32* %11, align 4
  %55 = add nsw i32 %54, 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [256 x i64], [256 x i64]* %53, i64 0, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %7, align 8
  %60 = add i64 %59, %58
  store i64 %60, i64* %7, align 8
  %61 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %62 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %61, i32 0, i32 0
  %63 = load i32, i32* %11, align 4
  %64 = add nsw i32 %63, 5
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [256 x i64], [256 x i64]* %62, i64 0, i64 %65
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* %8, align 8
  %69 = add i64 %68, %67
  store i64 %69, i64* %8, align 8
  %70 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %71 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0
  %72 = load i32, i32* %11, align 4
  %73 = add nsw i32 %72, 6
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [256 x i64], [256 x i64]* %71, i64 0, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %9, align 8
  %78 = add i64 %77, %76
  store i64 %78, i64* %9, align 8
  %79 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %80 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %79, i32 0, i32 0
  %81 = load i32, i32* %11, align 4
  %82 = add nsw i32 %81, 7
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [256 x i64], [256 x i64]* %80, i64 0, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = load i64, i64* %10, align 8
  %87 = add i64 %86, %85
  store i64 %87, i64* %10, align 8
  %88 = load i64, i64* %7, align 8
  %89 = load i64, i64* %3, align 8
  %90 = sub i64 %89, %88
  store i64 %90, i64* %3, align 8
  %91 = load i64, i64* %10, align 8
  %92 = call i64 @just(i64 %91)
  %93 = lshr i64 %92, 9
  %94 = load i64, i64* %8, align 8
  %95 = xor i64 %94, %93
  store i64 %95, i64* %8, align 8
  %96 = load i64, i64* %3, align 8
  %97 = load i64, i64* %10, align 8
  %98 = add i64 %97, %96
  store i64 %98, i64* %10, align 8
  %99 = load i64, i64* %8, align 8
  %100 = load i64, i64* %4, align 8
  %101 = sub i64 %100, %99
  store i64 %101, i64* %4, align 8
  %102 = load i64, i64* %3, align 8
  %103 = shl i64 %102, 9
  %104 = load i64, i64* %9, align 8
  %105 = xor i64 %104, %103
  store i64 %105, i64* %9, align 8
  %106 = load i64, i64* %4, align 8
  %107 = load i64, i64* %3, align 8
  %108 = add i64 %107, %106
  store i64 %108, i64* %3, align 8
  %109 = load i64, i64* %9, align 8
  %110 = load i64, i64* %5, align 8
  %111 = sub i64 %110, %109
  store i64 %111, i64* %5, align 8
  %112 = load i64, i64* %4, align 8
  %113 = call i64 @just(i64 %112)
  %114 = lshr i64 %113, 23
  %115 = load i64, i64* %10, align 8
  %116 = xor i64 %115, %114
  store i64 %116, i64* %10, align 8
  %117 = load i64, i64* %5, align 8
  %118 = load i64, i64* %4, align 8
  %119 = add i64 %118, %117
  store i64 %119, i64* %4, align 8
  %120 = load i64, i64* %10, align 8
  %121 = load i64, i64* %6, align 8
  %122 = sub i64 %121, %120
  store i64 %122, i64* %6, align 8
  %123 = load i64, i64* %5, align 8
  %124 = shl i64 %123, 15
  %125 = load i64, i64* %3, align 8
  %126 = xor i64 %125, %124
  store i64 %126, i64* %3, align 8
  %127 = load i64, i64* %6, align 8
  %128 = load i64, i64* %5, align 8
  %129 = add i64 %128, %127
  store i64 %129, i64* %5, align 8
  %130 = load i64, i64* %3, align 8
  %131 = load i64, i64* %7, align 8
  %132 = sub i64 %131, %130
  store i64 %132, i64* %7, align 8
  %133 = load i64, i64* %6, align 8
  %134 = call i64 @just(i64 %133)
  %135 = lshr i64 %134, 14
  %136 = load i64, i64* %4, align 8
  %137 = xor i64 %136, %135
  store i64 %137, i64* %4, align 8
  %138 = load i64, i64* %7, align 8
  %139 = load i64, i64* %6, align 8
  %140 = add i64 %139, %138
  store i64 %140, i64* %6, align 8
  %141 = load i64, i64* %4, align 8
  %142 = load i64, i64* %8, align 8
  %143 = sub i64 %142, %141
  store i64 %143, i64* %8, align 8
  %144 = load i64, i64* %7, align 8
  %145 = shl i64 %144, 20
  %146 = load i64, i64* %5, align 8
  %147 = xor i64 %146, %145
  store i64 %147, i64* %5, align 8
  %148 = load i64, i64* %8, align 8
  %149 = load i64, i64* %7, align 8
  %150 = add i64 %149, %148
  store i64 %150, i64* %7, align 8
  %151 = load i64, i64* %5, align 8
  %152 = load i64, i64* %9, align 8
  %153 = sub i64 %152, %151
  store i64 %153, i64* %9, align 8
  %154 = load i64, i64* %8, align 8
  %155 = call i64 @just(i64 %154)
  %156 = lshr i64 %155, 17
  %157 = load i64, i64* %6, align 8
  %158 = xor i64 %157, %156
  store i64 %158, i64* %6, align 8
  %159 = load i64, i64* %9, align 8
  %160 = load i64, i64* %8, align 8
  %161 = add i64 %160, %159
  store i64 %161, i64* %8, align 8
  %162 = load i64, i64* %6, align 8
  %163 = load i64, i64* %10, align 8
  %164 = sub i64 %163, %162
  store i64 %164, i64* %10, align 8
  %165 = load i64, i64* %9, align 8
  %166 = shl i64 %165, 14
  %167 = load i64, i64* %7, align 8
  %168 = xor i64 %167, %166
  store i64 %168, i64* %7, align 8
  %169 = load i64, i64* %10, align 8
  %170 = load i64, i64* %9, align 8
  %171 = add i64 %170, %169
  store i64 %171, i64* %9, align 8
  %172 = load i64, i64* %3, align 8
  %173 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %174 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %173, i32 0, i32 0
  %175 = load i32, i32* %11, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i64], [256 x i64]* %174, i64 0, i64 %176
  store i64 %172, i64* %177, align 8
  %178 = load i64, i64* %4, align 8
  %179 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %180 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %179, i32 0, i32 0
  %181 = load i32, i32* %11, align 4
  %182 = add nsw i32 %181, 1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [256 x i64], [256 x i64]* %180, i64 0, i64 %183
  store i64 %178, i64* %184, align 8
  %185 = load i64, i64* %5, align 8
  %186 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %187 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %186, i32 0, i32 0
  %188 = load i32, i32* %11, align 4
  %189 = add nsw i32 %188, 2
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i64], [256 x i64]* %187, i64 0, i64 %190
  store i64 %185, i64* %191, align 8
  %192 = load i64, i64* %6, align 8
  %193 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %194 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %193, i32 0, i32 0
  %195 = load i32, i32* %11, align 4
  %196 = add nsw i32 %195, 3
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i64], [256 x i64]* %194, i64 0, i64 %197
  store i64 %192, i64* %198, align 8
  %199 = load i64, i64* %7, align 8
  %200 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0
  %202 = load i32, i32* %11, align 4
  %203 = add nsw i32 %202, 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [256 x i64], [256 x i64]* %201, i64 0, i64 %204
  store i64 %199, i64* %205, align 8
  %206 = load i64, i64* %8, align 8
  %207 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %208 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %207, i32 0, i32 0
  %209 = load i32, i32* %11, align 4
  %210 = add nsw i32 %209, 5
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i64], [256 x i64]* %208, i64 0, i64 %211
  store i64 %206, i64* %212, align 8
  %213 = load i64, i64* %9, align 8
  %214 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %215 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 0
  %216 = load i32, i32* %11, align 4
  %217 = add nsw i32 %216, 6
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [256 x i64], [256 x i64]* %215, i64 0, i64 %218
  store i64 %213, i64* %219, align 8
  %220 = load i64, i64* %10, align 8
  %221 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %222 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %221, i32 0, i32 0
  %223 = load i32, i32* %11, align 4
  %224 = add nsw i32 %223, 7
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [256 x i64], [256 x i64]* %222, i64 0, i64 %225
  store i64 %220, i64* %226, align 8
  br label %227

227:                                              ; preds = %16
  %228 = load i32, i32* %11, align 4
  %229 = add nsw i32 %228, 8
  store i32 %229, i32* %11, align 4
  br label %13, !llvm.loop !61

230:                                              ; preds = %13
  store i32 0, i32* %12, align 4
  br label %231

231:                                              ; preds = %445, %230
  %232 = load i32, i32* %12, align 4
  %233 = icmp slt i32 %232, 256
  br i1 %233, label %234, label %448

234:                                              ; preds = %231
  %235 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %236 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %235, i32 0, i32 0
  %237 = load i32, i32* %12, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [256 x i64], [256 x i64]* %236, i64 0, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = load i64, i64* %3, align 8
  %242 = add i64 %241, %240
  store i64 %242, i64* %3, align 8
  %243 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %244 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %243, i32 0, i32 0
  %245 = load i32, i32* %12, align 4
  %246 = add nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [256 x i64], [256 x i64]* %244, i64 0, i64 %247
  %249 = load i64, i64* %248, align 8
  %250 = load i64, i64* %4, align 8
  %251 = add i64 %250, %249
  store i64 %251, i64* %4, align 8
  %252 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %253 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %252, i32 0, i32 0
  %254 = load i32, i32* %12, align 4
  %255 = add nsw i32 %254, 2
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [256 x i64], [256 x i64]* %253, i64 0, i64 %256
  %258 = load i64, i64* %257, align 8
  %259 = load i64, i64* %5, align 8
  %260 = add i64 %259, %258
  store i64 %260, i64* %5, align 8
  %261 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %262 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %261, i32 0, i32 0
  %263 = load i32, i32* %12, align 4
  %264 = add nsw i32 %263, 3
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [256 x i64], [256 x i64]* %262, i64 0, i64 %265
  %267 = load i64, i64* %266, align 8
  %268 = load i64, i64* %6, align 8
  %269 = add i64 %268, %267
  store i64 %269, i64* %6, align 8
  %270 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %271 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %270, i32 0, i32 0
  %272 = load i32, i32* %12, align 4
  %273 = add nsw i32 %272, 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [256 x i64], [256 x i64]* %271, i64 0, i64 %274
  %276 = load i64, i64* %275, align 8
  %277 = load i64, i64* %7, align 8
  %278 = add i64 %277, %276
  store i64 %278, i64* %7, align 8
  %279 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %280 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %279, i32 0, i32 0
  %281 = load i32, i32* %12, align 4
  %282 = add nsw i32 %281, 5
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [256 x i64], [256 x i64]* %280, i64 0, i64 %283
  %285 = load i64, i64* %284, align 8
  %286 = load i64, i64* %8, align 8
  %287 = add i64 %286, %285
  store i64 %287, i64* %8, align 8
  %288 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %289 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %288, i32 0, i32 0
  %290 = load i32, i32* %12, align 4
  %291 = add nsw i32 %290, 6
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [256 x i64], [256 x i64]* %289, i64 0, i64 %292
  %294 = load i64, i64* %293, align 8
  %295 = load i64, i64* %9, align 8
  %296 = add i64 %295, %294
  store i64 %296, i64* %9, align 8
  %297 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %298 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %297, i32 0, i32 0
  %299 = load i32, i32* %12, align 4
  %300 = add nsw i32 %299, 7
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [256 x i64], [256 x i64]* %298, i64 0, i64 %301
  %303 = load i64, i64* %302, align 8
  %304 = load i64, i64* %10, align 8
  %305 = add i64 %304, %303
  store i64 %305, i64* %10, align 8
  %306 = load i64, i64* %7, align 8
  %307 = load i64, i64* %3, align 8
  %308 = sub i64 %307, %306
  store i64 %308, i64* %3, align 8
  %309 = load i64, i64* %10, align 8
  %310 = call i64 @just(i64 %309)
  %311 = lshr i64 %310, 9
  %312 = load i64, i64* %8, align 8
  %313 = xor i64 %312, %311
  store i64 %313, i64* %8, align 8
  %314 = load i64, i64* %3, align 8
  %315 = load i64, i64* %10, align 8
  %316 = add i64 %315, %314
  store i64 %316, i64* %10, align 8
  %317 = load i64, i64* %8, align 8
  %318 = load i64, i64* %4, align 8
  %319 = sub i64 %318, %317
  store i64 %319, i64* %4, align 8
  %320 = load i64, i64* %3, align 8
  %321 = shl i64 %320, 9
  %322 = load i64, i64* %9, align 8
  %323 = xor i64 %322, %321
  store i64 %323, i64* %9, align 8
  %324 = load i64, i64* %4, align 8
  %325 = load i64, i64* %3, align 8
  %326 = add i64 %325, %324
  store i64 %326, i64* %3, align 8
  %327 = load i64, i64* %9, align 8
  %328 = load i64, i64* %5, align 8
  %329 = sub i64 %328, %327
  store i64 %329, i64* %5, align 8
  %330 = load i64, i64* %4, align 8
  %331 = call i64 @just(i64 %330)
  %332 = lshr i64 %331, 23
  %333 = load i64, i64* %10, align 8
  %334 = xor i64 %333, %332
  store i64 %334, i64* %10, align 8
  %335 = load i64, i64* %5, align 8
  %336 = load i64, i64* %4, align 8
  %337 = add i64 %336, %335
  store i64 %337, i64* %4, align 8
  %338 = load i64, i64* %10, align 8
  %339 = load i64, i64* %6, align 8
  %340 = sub i64 %339, %338
  store i64 %340, i64* %6, align 8
  %341 = load i64, i64* %5, align 8
  %342 = shl i64 %341, 15
  %343 = load i64, i64* %3, align 8
  %344 = xor i64 %343, %342
  store i64 %344, i64* %3, align 8
  %345 = load i64, i64* %6, align 8
  %346 = load i64, i64* %5, align 8
  %347 = add i64 %346, %345
  store i64 %347, i64* %5, align 8
  %348 = load i64, i64* %3, align 8
  %349 = load i64, i64* %7, align 8
  %350 = sub i64 %349, %348
  store i64 %350, i64* %7, align 8
  %351 = load i64, i64* %6, align 8
  %352 = call i64 @just(i64 %351)
  %353 = lshr i64 %352, 14
  %354 = load i64, i64* %4, align 8
  %355 = xor i64 %354, %353
  store i64 %355, i64* %4, align 8
  %356 = load i64, i64* %7, align 8
  %357 = load i64, i64* %6, align 8
  %358 = add i64 %357, %356
  store i64 %358, i64* %6, align 8
  %359 = load i64, i64* %4, align 8
  %360 = load i64, i64* %8, align 8
  %361 = sub i64 %360, %359
  store i64 %361, i64* %8, align 8
  %362 = load i64, i64* %7, align 8
  %363 = shl i64 %362, 20
  %364 = load i64, i64* %5, align 8
  %365 = xor i64 %364, %363
  store i64 %365, i64* %5, align 8
  %366 = load i64, i64* %8, align 8
  %367 = load i64, i64* %7, align 8
  %368 = add i64 %367, %366
  store i64 %368, i64* %7, align 8
  %369 = load i64, i64* %5, align 8
  %370 = load i64, i64* %9, align 8
  %371 = sub i64 %370, %369
  store i64 %371, i64* %9, align 8
  %372 = load i64, i64* %8, align 8
  %373 = call i64 @just(i64 %372)
  %374 = lshr i64 %373, 17
  %375 = load i64, i64* %6, align 8
  %376 = xor i64 %375, %374
  store i64 %376, i64* %6, align 8
  %377 = load i64, i64* %9, align 8
  %378 = load i64, i64* %8, align 8
  %379 = add i64 %378, %377
  store i64 %379, i64* %8, align 8
  %380 = load i64, i64* %6, align 8
  %381 = load i64, i64* %10, align 8
  %382 = sub i64 %381, %380
  store i64 %382, i64* %10, align 8
  %383 = load i64, i64* %9, align 8
  %384 = shl i64 %383, 14
  %385 = load i64, i64* %7, align 8
  %386 = xor i64 %385, %384
  store i64 %386, i64* %7, align 8
  %387 = load i64, i64* %10, align 8
  %388 = load i64, i64* %9, align 8
  %389 = add i64 %388, %387
  store i64 %389, i64* %9, align 8
  %390 = load i64, i64* %3, align 8
  %391 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %392 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %391, i32 0, i32 0
  %393 = load i32, i32* %12, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [256 x i64], [256 x i64]* %392, i64 0, i64 %394
  store i64 %390, i64* %395, align 8
  %396 = load i64, i64* %4, align 8
  %397 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %398 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %397, i32 0, i32 0
  %399 = load i32, i32* %12, align 4
  %400 = add nsw i32 %399, 1
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [256 x i64], [256 x i64]* %398, i64 0, i64 %401
  store i64 %396, i64* %402, align 8
  %403 = load i64, i64* %5, align 8
  %404 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %405 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %404, i32 0, i32 0
  %406 = load i32, i32* %12, align 4
  %407 = add nsw i32 %406, 2
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [256 x i64], [256 x i64]* %405, i64 0, i64 %408
  store i64 %403, i64* %409, align 8
  %410 = load i64, i64* %6, align 8
  %411 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %412 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %411, i32 0, i32 0
  %413 = load i32, i32* %12, align 4
  %414 = add nsw i32 %413, 3
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [256 x i64], [256 x i64]* %412, i64 0, i64 %415
  store i64 %410, i64* %416, align 8
  %417 = load i64, i64* %7, align 8
  %418 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %419 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %418, i32 0, i32 0
  %420 = load i32, i32* %12, align 4
  %421 = add nsw i32 %420, 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [256 x i64], [256 x i64]* %419, i64 0, i64 %422
  store i64 %417, i64* %423, align 8
  %424 = load i64, i64* %8, align 8
  %425 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %426 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %425, i32 0, i32 0
  %427 = load i32, i32* %12, align 4
  %428 = add nsw i32 %427, 5
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [256 x i64], [256 x i64]* %426, i64 0, i64 %429
  store i64 %424, i64* %430, align 8
  %431 = load i64, i64* %9, align 8
  %432 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %433 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %432, i32 0, i32 0
  %434 = load i32, i32* %12, align 4
  %435 = add nsw i32 %434, 6
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [256 x i64], [256 x i64]* %433, i64 0, i64 %436
  store i64 %431, i64* %437, align 8
  %438 = load i64, i64* %10, align 8
  %439 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %440 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %439, i32 0, i32 0
  %441 = load i32, i32* %12, align 4
  %442 = add nsw i32 %441, 7
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i64], [256 x i64]* %440, i64 0, i64 %443
  store i64 %438, i64* %444, align 8
  br label %445

445:                                              ; preds = %234
  %446 = load i32, i32* %12, align 4
  %447 = add nsw i32 %446, 8
  store i32 %447, i32* %12, align 4
  br label %231, !llvm.loop !62

448:                                              ; preds = %231
  %449 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %450 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %449, i32 0, i32 3
  store i64 0, i64* %450, align 8
  %451 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %452 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %451, i32 0, i32 2
  store i64 0, i64* %452, align 8
  %453 = load %struct.isaac_state*, %struct.isaac_state** %2, align 8
  %454 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %453, i32 0, i32 1
  store i64 0, i64* %454, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @dup_safer(i32 %0) #3 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %3, i32 0, i32 3)
  ret i32 %4
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fclose(%struct._IO_FILE* nonnull %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i32 0, i32* %4, align 4
  store i32 0, i32* %6, align 4
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = call i32 @fileno(%struct._IO_FILE* %7) #13
  store i32 %8, i32* %5, align 4
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %13 = call i32 @fclose(%struct._IO_FILE* %12)
  store i32 %13, i32* %2, align 4
  br label %40

14:                                               ; preds = %1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @__freading(%struct._IO_FILE* %15) #13
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %20 = call i32 @fileno(%struct._IO_FILE* %19) #13
  %21 = call i64 @lseek(i32 %20, i64 0, i32 1) #13
  %22 = icmp ne i64 %21, -1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %14
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %25 = call i32 @rpl_fflush(%struct._IO_FILE* %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = call i32* @__errno_location() #16
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %4, align 4
  br label %30

30:                                               ; preds = %27, %23, %18
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %32 = call i32 @fclose(%struct._IO_FILE* %31)
  store i32 %32, i32* %6, align 4
  %33 = load i32, i32* %4, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = load i32, i32* %4, align 4
  %37 = call i32* @__errno_location() #16
  store i32 %36, i32* %37, align 4
  store i32 -1, i32* %6, align 4
  br label %38

38:                                               ; preds = %35, %30
  %39 = load i32, i32* %6, align 4
  store i32 %39, i32* %2, align 4
  br label %40

40:                                               ; preds = %38, %11
  %41 = load i32, i32* %2, align 4
  ret i32 %41
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @c_tolower(i32 %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %9 [
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 70, label %5
    i32 71, label %5
    i32 72, label %5
    i32 73, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = load i32, i32* %3, align 4
  %7 = sub nsw i32 %6, 65
  %8 = add nsw i32 %7, 97
  store i32 %8, i32* %2, align 4
  br label %11

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4
  store i32 %10, i32* %2, align 4
  br label %11

11:                                               ; preds = %9, %5
  %12 = load i32, i32* %2, align 4
  ret i32 %12
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._IO_FILE* @fopen_safer(i8* %0, i8* %1) #3 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %11 = load i8*, i8** %4, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call %struct._IO_FILE* @fopen(i8* %11, i8* %12)
  store %struct._IO_FILE* %13, %struct._IO_FILE** %6, align 8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %15 = icmp ne %struct._IO_FILE* %14, null
  br i1 %15, label %16, label %54

16:                                               ; preds = %2
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %18 = call i32 @fileno(%struct._IO_FILE* %17) #13
  store i32 %18, i32* %7, align 4
  %19 = load i32, i32* %7, align 4
  %20 = icmp sle i32 0, %19
  br i1 %20, label %21, label %53

21:                                               ; preds = %16
  %22 = load i32, i32* %7, align 4
  %23 = icmp sle i32 %22, 2
  br i1 %23, label %24, label %53

24:                                               ; preds = %21
  %25 = load i32, i32* %7, align 4
  %26 = call i32 @dup_safer(i32 %25)
  store i32 %26, i32* %8, align 4
  %27 = load i32, i32* %8, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = call i32* @__errno_location() #16
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %33 = call i32 @rpl_fclose(%struct._IO_FILE* %32)
  %34 = load i32, i32* %9, align 4
  %35 = call i32* @__errno_location() #16
  store i32 %34, i32* %35, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  br label %56

36:                                               ; preds = %24
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %38 = call i32 @rpl_fclose(%struct._IO_FILE* %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = load i32, i32* %8, align 4
  %42 = load i8*, i8** %5, align 8
  %43 = call %struct._IO_FILE* @fdopen(i32 %41, i8* %42) #13
  store %struct._IO_FILE* %43, %struct._IO_FILE** %6, align 8
  %44 = icmp ne %struct._IO_FILE* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %40, %36
  %46 = call i32* @__errno_location() #16
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %10, align 4
  %48 = load i32, i32* %8, align 4
  %49 = call i32 @close(i32 %48)
  %50 = load i32, i32* %10, align 4
  %51 = call i32* @__errno_location() #16
  store i32 %50, i32* %51, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  br label %56

52:                                               ; preds = %40
  br label %53

53:                                               ; preds = %52, %21, %16
  br label %54

54:                                               ; preds = %53, %2
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  store %struct._IO_FILE* %55, %struct._IO_FILE** %3, align 8
  br label %56

56:                                               ; preds = %54, %45, %29
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  ret %struct._IO_FILE* %57
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #1

attributes #0 = { noinline noreturn nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind optnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nounwind readonly "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone readonly uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #10 = { noinline nounwind optnone readnone uwtable "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1, !2, !3, !4}

!0 = !{!"Ubuntu clang version 12.0.0-++20210120052627+c09be0d2a0f9-1~exp1~20210120163331.290"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"ThinLTO", i32 0}
!3 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!4 = !{i32 1, !"LTOPostLink", i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
!14 = distinct !{!14, !6}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !6}
!18 = distinct !{!18, !6}
!19 = distinct !{!19, !6}
!20 = distinct !{!20, !6}
!21 = distinct !{!21, !6}
!22 = distinct !{!22, !6}
!23 = distinct !{!23, !6}
!24 = distinct !{!24, !6}
!25 = distinct !{!25, !6}
!26 = distinct !{!26, !6}
!27 = distinct !{!27, !6}
!28 = distinct !{!28, !6}
!29 = distinct !{!29, !6}
!30 = distinct !{!30, !6}
!31 = distinct !{!31, !6}
!32 = distinct !{!32, !6}
!33 = distinct !{!33, !6}
!34 = distinct !{!34, !6}
!35 = distinct !{!35, !6}
!36 = distinct !{!36, !6}
!37 = distinct !{!37, !6}
!38 = distinct !{!38, !6}
!39 = distinct !{!39, !6}
!40 = distinct !{!40, !6}
!41 = distinct !{!41, !6}
!42 = distinct !{!42, !6}
!43 = distinct !{!43, !6}
!44 = distinct !{!44, !6}
!45 = distinct !{!45, !6}
!46 = distinct !{!46, !6}
!47 = distinct !{!47, !6}
!48 = distinct !{!48, !6}
!49 = distinct !{!49, !6}
!50 = distinct !{!50, !6}
!51 = distinct !{!51, !6}
!52 = distinct !{!52, !6}
!53 = distinct !{!53, !6}
!54 = distinct !{!54, !6}
!55 = distinct !{!55, !6}
!56 = distinct !{!56, !6}
!57 = distinct !{!57, !6}
!58 = distinct !{!58, !6}
!59 = distinct !{!59, !6}
!60 = distinct !{!60, !6}
!61 = distinct !{!61, !6}
!62 = distinct !{!62, !6}
